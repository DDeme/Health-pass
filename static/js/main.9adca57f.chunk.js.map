{"version":3,"sources":["serviceWorker.ts","i18n/index.tsx","styles/theme/index.ts","styles/index.tsx","components/Icon/index.tsx","components/Logo/index.tsx","components/LogoWrapper/index.tsx","components/Button/index.tsx","components/AdminNavBar/index.tsx","components/Input/index.tsx","Pages/Loading/index.tsx","Pages/SplashScreen/index.tsx","Pages/Login/index.tsx","Pages/Navigation/index.tsx","Pages/Verification/index.tsx","Layout/index.tsx","index.tsx"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","i18n","use","Backend","LanguageDetector","initReactI18next","init","react","useSuspense","wait","lng","fallbackLng","whitelist","lowerCaseLng","debug","interpolation","escapeValue","saveMissing","saveMissingTo","backend","loadPath","Translater","props","children","theme","mode","process","env","NODE_ENV","fontFamily","fontSize","color","white","black","purple","green","red","blue","GlobalStyle","createGlobalStyle","Styler","WrapperIcon","styled","i","Icon","name","className","WrapperIcons","ul","WrapperIconsItem","li","WrapperIconsTitle","button","Icons","icons","require","map","icon","text","properties","key","variant","onClick","clipboard","writeText","Wrapper","div","Shield","Title","h1","Logo","t","useTranslation","Heading","LogoWrapper","Button","Btn","List","Item","Link","LinkR","p","AdminNavBar","useState","show","setShow","to","pruple","input","value","length","active","css","Lable","label","Warning","span","Input","setValue","activeLabel","setActiveLabel","type","ref","id","placeholder","onChange","e","target","onFocus","onBlur","htmlFor","WrapperLoader","Loader","Laoding","history","useHistory","loading","setLoading","useEffect","timer","setTimeout","push","lazyLoad","Home","form","InputC","ButtonC","Login","useForm","handleSubmit","watch","errors","onSubmit","citizen","phone","required","maxLength","exampleRequired","pattern","Navigation","Verification","WrapperLaout","Layout","Suspense","fallback","Loading","exact","path","SplashScreen","Root","ReactDOM","render","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9adca57f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { FC } from 'react'\nimport i18n from 'i18next'\nimport Backend from 'i18next-xhr-backend'\nimport LanguageDetector from 'i18next-browser-languagedetector'\nimport { initReactI18next, I18nextProvider } from 'react-i18next'\n\ni18n\n\t// learn more: https://github.com/i18next/i18next-xhr-backend\n\t.use(Backend)\n\t// detect user language\n\t// learn more: https://github.com/i18next/i18next-browser-languageDetector\n\t.use(LanguageDetector)\n\t// pass the i18n instance to react-i18next.\n\t.use(initReactI18next)\n\t// init i18next\n\t// for all options read: https://www.i18next.com/overview/configuration-options\n\t.init({\n\t\t// special options for react-i18next\n\t\t// learn more: https://react.i18next.com/components/i18next-instance\n\t\treact: {\n\t\t\tuseSuspense: false,\n\t\t\twait: true,\n\t\t},\n\t\tlng: 'en',\n\t\tfallbackLng: 'en',\n\t\twhitelist: ['en', 'sk'],\n\t\tlowerCaseLng: true,\n\t\tdebug: false,\n\t\tinterpolation: {\n\t\t\tescapeValue: false, // not needed for react as it escapes by default\n\t\t},\n\t\tsaveMissing: true,\n\t\tsaveMissingTo: 'all',\n\t\tbackend: {\n\t\t\tloadPath: '/locales/{{lng}}/translations.json',\n\t\t},\n\t})\n\nconst Translater: FC = (props: { children?: React.ReactNode }): JSX.Element => {\n\treturn <I18nextProvider i18n={i18n}>{props.children}</I18nextProvider>\n}\n\nexport default Translater\n","//@ts-check\nimport process from 'process'\n\nlet theme = {\n\tmode: process.env.NODE_ENV,\n\tfontFamily: 'Arial, Helvetica, sans-serif',\n\tfontSize: '16px',\n\tcolor: {\n\t\twhite: '#fff',\n\t\tblack: '#000',\n\t\tpurple: '#6202EE',\n\t\tgreen: '#5CB85C',\n\t\tred: '#D9534F',\n\t\tblue: '#0275D8',\n\t},\n}\n\nexport type ThemeI = typeof theme\nexport default theme\n","//@ts-check\nimport React, { FC } from 'react'\nimport './reset.css'\n\nimport { ThemeProvider, createGlobalStyle } from 'styled-components'\nimport theme, { ThemeI } from './theme'\n\nconst GlobalStyle = createGlobalStyle<{ theme: ThemeI }>`\n  html, body, #root {\n\t\tfont-family: ${({ theme }) => theme.fontFamily};\n\t\tfont-size: ${({ theme }) => theme.fontSize};\n\t\theight: 100%;\n\t\tbackground-color: ${({ theme }): string => theme.color.purple};\n\t}\n\t\n\t* {\n\t\tbox-sizing: border-box;\n\t}\n`\n\nconst Styler: FC = (props): JSX.Element => (\n\t<ThemeProvider theme={theme}>\n\t\t<GlobalStyle />\n\t\t{props.children}\n\t</ThemeProvider>\n)\n\nexport default Styler\n","//@ts-check\nimport React, { FC } from 'react'\nimport './style.css'\n\nimport styled from 'styled-components'\n\nconst WrapperIcon: FC<StyledProps> = styled.i``\n\ninterface StyledProps {\n\tclassName?: string\n}\n\ninterface IconProps {\n\tname: string\n\tclassName?: string\n}\n\nconst Icon: any = ({ name, className }): any => (\n\t<WrapperIcon className={`icon icon-${name} ${className} rotate`} />\n)\n\nconst WrapperIcons: FC = styled.ul`\n\tcolor: ${({ theme }) => theme.color.white};\n\tdisplay: flex;\n\talign-items: center;\n\tflex-direction: column;\n\tjustify-content: center;\n\toverflow: hidden;\n`\n\nconst WrapperIconsItem: FC = styled.li`\n\tdisplay: flex;\n\talign-items: center;\n\tflex-direction: column;\n\tflex-wrap: wrap;\n\tjustify-content: center;\n\tflex: 1;\n\tpadding: 15px;\n\tfont-size: 30px;\n`\n\nconst WrapperIconsTitle: any = styled.button`\n\tmargin-top: 10px;\n\tfont-size: 16px;\n\tpadding: 5px 12px;\n\tbackground: ${({ theme }) => theme.color.white};\n\tborder: 1px solid ${({ theme }) => theme.color.white};\n\tcolor: ${({ theme }) => theme.color.black};\n\tborder-radius: 3px;\n\n\t&:hover {\n\t\tbackground: ${({ theme }) => theme.color.black};\n\t\tborder: 1px solid ${({ theme }) => theme.color.black};\n\t\tcolor: ${({ theme }) => theme.color.white};\n\t\ttransition: all 0.5s;\n\t}\n`\n\nconst Icons: any = (): any => {\n\tconst { icons } = require('./selection.json')\n\n\treturn (\n\t\t<WrapperIcons>\n\t\t\t<h1>Copy your icon by click on one item:</h1>\n\t\t\t{icons.map((icon, i): any => {\n\t\t\t\tconst text = `<Icon name=\"${icon.properties.name}\" />`\n\t\t\t\treturn (\n\t\t\t\t\t<WrapperIconsItem key={i}>\n\t\t\t\t\t\t<Icon name={icon.properties.name} />\n\t\t\t\t\t\t<WrapperIconsTitle\n\t\t\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\t\t\tonClick={() => navigator.clipboard.writeText(text)}>\n\t\t\t\t\t\t\t{text}\n\t\t\t\t\t\t</WrapperIconsTitle>\n\t\t\t\t\t</WrapperIconsItem>\n\t\t\t\t)\n\t\t\t})}\n\t\t</WrapperIcons>\n\t)\n}\n\nexport default Icon\nexport { Icons }\n","import React from 'react'\nimport styled from 'styled-components'\nimport Icon from '../Icon'\nimport { useTranslation } from 'react-i18next'\n\nconst Wrapper = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n`\n\nconst Shield = styled(Icon)`\n\tdisplay: inline-block;\n\theight: 180px;\n\twidth: 180px;\n\tcolor: ${({ theme }) => theme.color.white};\n\n\t&:before {\n\t\tcolor: ${({ theme }) => theme.color.white};\n\t\tfont-size: 180px;\n\t}\n`\n\nconst Title = styled.h1`\n\ttext-transform: uppercase;\n\tcolor: ${({ theme }) => theme.color.white};\n\tmargin-top: 30px;\n\tfont-size: 24px;\n\tpadding: 0 10px;\n\tposition: relative;\n\tz-index: 2;\n`\nconst Logo = props => {\n\tconst { t } = useTranslation()\n\n\treturn (\n\t\t<Wrapper className={props.className}>\n\t\t\t<Shield name=\"shield\" />\n\t\t\t<Title>{t('logo.title')}</Title>\n\t\t</Wrapper>\n\t)\n}\nexport default Logo\n","import React from 'react'\nimport styled from 'styled-components'\nimport Logo from '../Logo'\n\nconst Wrapper = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\twidth: 100%;\n\tjustify-content: center;\n\tflex: 1;\n\ttext-align: center;\n\tmargin-top: 20px;\n`\n\nconst Heading = styled(Logo)`\n\tposition: relative;\n\tz-index: 1;\n\tflex: 1;\n\n\t&:after {\n\t\tposition: absolute;\n\t\tcontent: '';\n\t\tbackground: ${({ theme }) => theme.color.purple};\n\t\tborder-radius: 50%;\n\t\theight: 50px;\n\t\tbottom: -25px;\n\t\tleft: 0;\n\t\tright: 0;\n\t\twidth: 100%;\n\t\tz-index: 1;\n\t}\n`\n\nconst LogoWrapper: any = props => (\n\t<Wrapper className={props.className}>\n\t\t<Heading />\n\t\t{props.children}\n\t</Wrapper>\n)\n\nexport default LogoWrapper\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Wrapper: any = styled.button`\n\tdisplay: inline-block;\n\tcursor: pointer;\n\tmax-width: 280px;\n\twidth: 100%;\n\tpadding: 15px 20px;\n\ttext-align: center;\n\tbackground-color: ${({ theme }) => theme.color.purple};\n\tcolor: ${({ theme }) => theme.color.white};\n\tborder: 1px solid ${({ theme }) => theme.color.purple};\n\tborder-radius: 18px;\n\tbox-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n\ttext-align: center;\n\n\t&:hover {\n\t\tbackground-color: ${({ theme }) => theme.color.white};\n\t\tcolor: ${({ theme }) => theme.color.purple};\n\t}\n\n\t&:focus {\n\t\toutline: 0;\n\t}\n`\n\nconst Button = props => {\n\treturn <Wrapper {...props}>{props.children}</Wrapper>\n}\nexport default Button\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Link as LinkR } from 'react-router-dom'\nimport Button from '../Button'\n\nconst Wrapper = styled.div`\n\tbackground-color: ${({ theme }) => theme.color.purple};\n\tcolor: ${({ theme }) => theme.color.white};\n\tdisplay: inline-block;\n\tposition: fixed;\n\tleft: 0;\n\ttop: 0;\n\toverflow: hidden;\n\tz-index: 1000;\n`\n\nconst Btn = styled(Button)`\n\tfont-size: 14px;\n\tborder-radius: 0;\n`\n\nconst List = styled.ul`\n\tfont-size: 14px;\n`\n\nconst Item = styled.li`\n\tpadding: 1px 0;\n`\n\nconst Link = styled(LinkR)`\n\tdisplay: block;\n\tcolor: inherit;\n\ttext-decoration: none;\n\tpadding: 5px 10px;\n\tfont-size: inherit;\n\n\t&:hover {\n\t\tbackground-color: ${({ theme }) => theme.color.white};\n\t\tcolor: ${({ theme }) => theme.color.purple};\n\t}\n`\n\nconst Title = styled.p`\n\tfont-weight: bold;\n\tborder: 1px solid ${({ theme }) => theme.color.white};\n\tborder-width: 1px 0;\n\tpadding: 5px;\n`\n\nconst AdminNavBar: any = props => {\n\tconst [show, setShow] = useState(false)\n\n\treturn (\n\t\t<Wrapper className={props.className}>\n\t\t\t<Btn onClick={() => setShow(!show)}>{show ? 'close' : 'admin menu'}</Btn>\n\t\t\t{show && (\n\t\t\t\t<List>\n\t\t\t\t\t<Item>\n\t\t\t\t\t\t<Title>Pages</Title>\n\t\t\t\t\t</Item>\n\t\t\t\t\t<Item>\n\t\t\t\t\t\t<Link to=\"/\">Splash Screen</Link>\n\t\t\t\t\t</Item>\n\t\t\t\t\t<Item>\n\t\t\t\t\t\t<Link to=\"loading\">Loading Screen</Link>\n\t\t\t\t\t</Item>\n\t\t\t\t\t<Item>\n\t\t\t\t\t\t<Link to=\"/navigation\">Navigation</Link>\n\t\t\t\t\t</Item>\n\t\t\t\t\t<Item>\n\t\t\t\t\t\t<Link to=\"/login\">Login</Link>\n\t\t\t\t\t</Item>\n\t\t\t\t\t<Item>\n\t\t\t\t\t\t<Link to=\"/verification\">Verification</Link>\n\t\t\t\t\t</Item>\n\t\t\t\t\t<Item>\n\t\t\t\t\t\t<Title>Settings</Title>{' '}\n\t\t\t\t\t</Item>\n\t\t\t\t\t<Item>\n\t\t\t\t\t\t<Link to=\"/settings-icon\">Icons</Link>\n\t\t\t\t\t</Item>\n\t\t\t\t\t{/* \n\t\t\t\t<Item><Link to=\"/settings-theme\">Theme</Link></Item>\n\t\t\t\t<Item><Link to=\"/settings-cssReset\">Reset css</Link></Item>\n\t\t\t\t<Item><Link to=\"/settings-translation\">Translation</Link></Item>\n\t\t\t*/}\n\t\t\t\t</List>\n\t\t\t)}\n\t\t</Wrapper>\n\t)\n}\n\nexport default AdminNavBar\n","import React, { useState } from 'react'\nimport styled, { css } from 'styled-components'\n\nconst Wrapper = styled.div`\n\tposition: relative;\n\tcolor: ${({ theme }) => theme.color.pruple};\n\tmax-width: 280px;\n\twidth: 100%;\n\theight: 50px;\n`\n\nconst Title: any = styled.input<{ active: boolean; value: string }>`\n\tposition: absolute;\n\toverflow: hidden;\n\tz-index: 1;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n\twidth: 100%;\n\tpadding: 15px 25px;\n\tfont-size: 16px;\n\tbackground-color: ${({ theme }) => theme.color.white};\n\tcolor: ${({ theme }) => theme.color.black};\n\tborder: 1px solid rgba(0, 0, 0, 0.5);\n\tborder-radius: 4px;\n\ttransition: all 0.2s;\n\n\t::placeholder {\n\t\tcolor: rgba(0, 0, 0, 0.5);\n\t\topacity: ${({ value }) => !!value.length && 0};\n\t\topacity: ${({ active }) => !active && 0};\n\t}\n\n\t${({ active }) =>\n\t\tactive &&\n\t\tcss`\n\t\t\tborder-color: ${({ theme }) => theme.color.purple};\n\t\t\toutline: 0;\n\t\t\tborder-width: 2px;\n\t\t`}\n\n\t&:focus {\n\t\toutline: 0;\n\t}\n\n\t&:hover {\n\t\tborder-color: ${({ theme }) => theme.color.pruple};\n\t}\n`\n\nconst Lable: any = styled.label<{ active: boolean }>`\n\tcolor: ${({ theme }) => theme.color.pruple};\n\tposition: absolute;\n\tz-index: 3;\n\tbackground-color: ${({ theme }) => theme.color.white};\n\ttop: 50%;\n\tleft: 15px;\n\tpadding: 5px;\n\ttext-align: left;\n\tcolor: rgba(0, 0, 0, 0.5);\n\ttransform: translateY(-50%);\n\ttransition: all 0.2s;\n\n\t${({ active }) =>\n\t\tactive &&\n\t\tcss`\n\t\t\twidth: auto;\n\t\t\tcolor: ${({ theme }) => theme.color.purple};\n\t\t\ttransform: translate(-5px, -33px) scale(0.8);\n\t\t\tpadding: 0 5px;\n\t\t`}\n`\n\nconst Warning = styled.span`\n\tposition: absolute;\n`\n\nconst Input: any = props => {\n\tconst [value, setValue] = useState(props.value || '')\n\tconst [activeLabel, setActiveLabel] = useState(false)\n\n\treturn (\n\t\t<Wrapper className={props.className}>\n\t\t\t<Title\n\t\t\t\ttype={props.type}\n\t\t\t\tref={props.ref}\n\t\t\t\tname={props.name}\n\t\t\t\tactive={activeLabel || !!value.length}\n\t\t\t\tvalue={value}\n\t\t\t\tid={props.name}\n\t\t\t\tplaceholder={props.placeholder}\n\t\t\t\tonChange={e => setValue(e.target.value)}\n\t\t\t\tonFocus={() => setActiveLabel(true)}\n\t\t\t\tonBlur={() => setActiveLabel(false)}\n\t\t\t/>\n\t\t\t<Lable active={activeLabel || !!value.length} htmlFor={props.name}>\n\t\t\t\t{props.label}\n\t\t\t</Lable>\n\t\t\t<Warning>{props.error}</Warning>\n\t\t</Wrapper>\n\t)\n}\nexport default Input\n","//@ts-check\nimport React, { FC, useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { Icon, Logo } from '../../components'\n\nconst Wrapper: FC = styled.div`\n\tposition: relative;\n\tz-index: 2;\n\ttext-align: center;\n\tpadding-top: 60px;\n`\n\nconst WrapperLoader: FC = styled.div`\n\tflex: 1;\n`\n\nconst Loader = styled(Icon)<{ show: boolean }>`\n\tposition: relative;\n\tdisplay: ${({ show }) => (show ? 'inline-block' : 'none')};\n\tcolor: ${({ theme }) => theme.color.white};\n\tmargin-top: 60px;\n\twidth: 60px;\n\theight: 60px;\n\tborder-width: 8px;\n\tborder-right-color: transparent;\n\n\t@keyframes spin {\n\t\t100% {\n\t\t\ttransform: rotate(360deg);\n\t\t}\n\t}\n\n\t&:before {\n\t\tanimation: spin 4s linear infinite;\n\t\tfont-size: 60px;\n\t\tposition: absolute;\n\t\tleft: 0;\n\t\ttop: 0;\n\t}\n`\n\nconst Laoding = () => {\n\tlet history = useHistory()\n\tconst [loading, setLoading] = useState(true)\n\n\tconst lazyLoad = () => {\n\t\tconst timer = setTimeout(() => {\n\t\t\tsetLoading(false)\n\t\t\treturn history.push('/navigation')\n\t\t}, 1000)\n\n\t\treturn () => clearTimeout(timer)\n\t}\n\n\tuseEffect(() => {\n\t\tlazyLoad()\n\t})\n\n\treturn (\n\t\t<Wrapper>\n\t\t\t<Logo />\n\t\t\t<WrapperLoader>\n\t\t\t\t<Loader name=\"sync-alt-solid\" show={loading} />\n\t\t\t</WrapperLoader>\n\t\t</Wrapper>\n\t)\n}\n\nexport default Laoding\n","//@ts-check\nimport React, { FC } from 'react'\nimport styled from 'styled-components'\nimport { Logo } from '../../components'\n\nconst Wrapper: FC = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\theight: 100%;\n`\n\nconst Home: FC = (): JSX.Element => {\n\treturn (\n\t\t<Wrapper>\n\t\t\t<Logo />\n\t\t</Wrapper>\n\t)\n}\n\nexport default Home\n","import React from 'react'\nimport { useForm } from 'react-hook-form'\nimport styled from 'styled-components'\nimport {\n\tLogoWrapper,\n\tButton as ButtonC,\n\tInput as InputC,\n} from '../../components'\nimport { Link as LinkR } from 'react-router-dom'\nimport { useTranslation } from 'react-i18next'\n\nconst List: any = styled.form`\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\tbackground-color: ${({ theme }) => theme.color.white};\n\tflex: 1;\n\tpadding-top: 25px;\n`\nconst Link = styled(LinkR)`\n\tdisplay: inline-block;\n\tmax-width: 280px;\n\twidth: 100%;\n`\n\nconst Input: any = styled(InputC)`\n\tmargin-top: 30px;\n`\n\nconst Button: any = styled(ButtonC)`\n\tmargin-top: 30px;\n`\n\ntype FormData = {\n\tcitizen: string\n\tphone: string\n}\n\nconst Login = () => {\n\tconst { t } = useTranslation()\n\tconst { register, handleSubmit, watch, errors } = useForm()\n\n\tconst onSubmit: any = handleSubmit(({ citizen, phone }) => {\n\t\tconsole.log(citizen, phone)\n\t})\n\tconsole.log(watch('example'))\n\n\treturn (\n\t\t<LogoWrapper>\n\t\t\t<List onSubmit={handleSubmit(onSubmit)}>\n\t\t\t\t<Input\n\t\t\t\t\tname=\"citizen\"\n\t\t\t\t\tref={register({ required: true, maxLength: 20 })}\n\t\t\t\t\tlabel={t('login.label_one')}\n\t\t\t\t\tplaceholder={t('login.placeholder_one')}\n\t\t\t\t/>\n\t\t\t\t{errors.exampleRequired && <span>{t('login.error_one')}</span>}\n\t\t\t\t<Input\n\t\t\t\t\ttype=\"tel\"\n\t\t\t\t\tname=\"phone\"\n\t\t\t\t\tref={register({\n\t\t\t\t\t\tpattern: /^(\\()?\\d{3}(\\))?(-|\\s)?\\d{3}(-|\\s)\\d{4}$/,\n\t\t\t\t\t})}\n\t\t\t\t\tlabel={t('login.label_two')}\n\t\t\t\t\tplaceholder={t('login.placeholder_two')}\n\t\t\t\t/>\n\t\t\t\t{errors.exampleRequired && <span>{t('login.error_two')}</span>}\n\t\t\t\t<Link to=\"/verification\">\n\t\t\t\t\t<Button type=\"submit\">{t('login.button_one')}</Button>\n\t\t\t\t</Link>\n\t\t\t</List>\n\t\t</LogoWrapper>\n\t)\n}\nexport default Login\n","import React, { FC } from 'react'\nimport styled from 'styled-components'\nimport { LogoWrapper, Button } from '../../components'\nimport { Link as LinkR } from 'react-router-dom'\nimport { useTranslation } from 'react-i18next'\n\nconst List: FC = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\tbackground-color: ${({ theme }) => theme.color.white};\n\tflex: 1;\n\tpadding-top: 25px;\n`\nconst Link = styled(LinkR)`\n\tdisplay: inline-block;\n\tmax-width: 280px;\n\twidth: 100%;\n`\n\nconst Item: FC = styled(Button)`\n\tmargin-top: 30px;\n`\n\nconst Navigation = () => {\n\tconst { t } = useTranslation()\n\n\treturn (\n\t\t<LogoWrapper>\n\t\t\t<List>\n\t\t\t\t<Link to=\"/login\">\n\t\t\t\t\t<Item>{t('navigation.button_one')}</Item>\n\t\t\t\t</Link>\n\t\t\t\t<Link to=\"/\">\n\t\t\t\t\t<Item>{t('navigation.button_two')}</Item>\n\t\t\t\t</Link>\n\t\t\t\t<Link to=\"/\">\n\t\t\t\t\t<Item>{t('navigation.button_three')}</Item>\n\t\t\t\t</Link>\n\t\t\t</List>\n\t\t</LogoWrapper>\n\t)\n}\nexport default Navigation\n","import React from 'react'\n\nconst Verification = () => <>Verification</>\n\nexport default Verification\n","//@ts-check\nimport React from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport { Icons, AdminNavBar } from '../components'\nimport {\n\tSplashScreen,\n\tLoading,\n\tNavigation,\n\tLogin,\n\tVerification,\n} from '../Pages'\nimport styled from 'styled-components'\n\nconst WrapperLaout = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\theight: 100%;\n`\n\nconst Layout: any = (): any => {\n\treturn (\n\t\t<WrapperLaout>\n\t\t\t<React.Suspense fallback={<Loading />}>\n\t\t\t\t<BrowserRouter>\n\t\t\t\t\t<AdminNavBar />\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t\t<SplashScreen />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path=\"/loading\">\n\t\t\t\t\t\t\t<Loading />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path=\"/navigation\">\n\t\t\t\t\t\t\t<Navigation />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path=\"/login\">\n\t\t\t\t\t\t\t<Login />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path=\"/verification\">\n\t\t\t\t\t\t\t<Verification />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path=\"/settings-icon\">\n\t\t\t\t\t\t\t<Icons />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t{/* <Route path=\"/settings-theme\">\n\t\t\t\t\t<Icons />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/settings-cssReset\">\n\t\t\t\t\t<Icons />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/settings-translation\">\n\t\t\t\t\t<Icons />\n\t\t\t\t</Route> */}\n\t\t\t\t\t</Switch>\n\t\t\t\t</BrowserRouter>\n\t\t\t</React.Suspense>\n\t\t</WrapperLaout>\n\t)\n}\n\nexport default Layout\n","//@ts-check\nimport React, { StrictMode } from 'react'\nimport ReactDOM from 'react-dom'\nimport * as serviceWorker from './serviceWorker'\n\nimport Translater from './i18n'\nimport Styler from './styles'\nimport Layout from './Layout'\n\nconst Root = () => (\n\t<StrictMode>\n\t\t<Translater>\n\t\t\t<Styler>\n\t\t\t\t<Layout />\n\t\t\t</Styler>\n\t\t</Translater>\n\t</StrictMode>\n)\n\nReactDOM.render(<Root />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}