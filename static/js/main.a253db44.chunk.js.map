{"version":3,"sources":["serviceWorker.ts","i18n/index.tsx","const/index.ts","styles/theme/index.ts","styles/index.tsx","components/Icon/index.tsx","components/Button/index.tsx","components/AdminNavBar/index.tsx","components/Input/index.tsx","components/Logo/index.tsx","components/Container/index.tsx","Pages/Loading/index.tsx","Pages/SplashScreen/index.tsx","layouts/Navigation/index.tsx","Pages/Login/index.tsx","Pages/Home/index.tsx","Pages/Verification/index.tsx","components/Scanner/index.tsx","Pages/Scanning/index.tsx","routing/index.tsx","index.tsx"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","i18n","use","Backend","LanguageDetector","initReactI18next","init","react","useSuspense","wait","lng","fallbackLng","whitelist","lowerCaseLng","debug","interpolation","escapeValue","saveMissing","saveMissingTo","backend","loadPath","process","Translater","props","children","theme","mode","env","NODE_ENV","fontFamily","fontSize","color","white","black","purple","green","red","blue","GlobalStyle","createGlobalStyle","Styler","WrapperIcon","styled","i","Icon","name","className","WrapperIcons","ul","WrapperIconsItem","li","WrapperIconsTitle","button","Icons","icons","require","map","icon","text","properties","key","variant","onClick","clipboard","writeText","Wrapper","Button","div","Btn","List","Item","Link","LinkR","Title","p","AdminNavBar","useState","show","setShow","to","pruple","input","value","length","active","css","Lable","label","Information","span","valid","Input","React","forwardRef","ref","type","placeholder","info","activeLabel","setActiveLabel","id","onFocus","onBlur","htmlFor","Shield","h1","Logo","t","useTranslation","Container","WrapperLoader","Loader","Laoding","history","useHistory","loading","setLoading","useEffect","timer","setTimeout","push","lazyLoad","Home","Heading","Navigation","form","InputC","ButtonC","Login","useForm","handleSubmit","watch","errors","onSubmit","data","Object","keys","required","citizen","pattern","phone","Verification","verification","Scanner","result","handleScan","setState","handleError","err","delay","onError","this","onScan","style","width","Component","Scanning","Routing","Suspense","fallback","Loading","basename","exact","path","SplashScreen","Root","ReactDOM","render","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a253db44.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { FC } from 'react'\nimport i18n from 'i18next'\nimport Backend from 'i18next-xhr-backend'\nimport LanguageDetector from 'i18next-browser-languagedetector'\nimport { initReactI18next, I18nextProvider } from 'react-i18next'\nimport { PUBLIC_URL } from '../const'\n\ni18n\n\t// learn more: https://github.com/i18next/i18next-xhr-backend\n\t.use(Backend)\n\t// detect user language\n\t// learn more: https://github.com/i18next/i18next-browser-languageDetector\n\t.use(LanguageDetector)\n\t// pass the i18n instance to react-i18next.\n\t.use(initReactI18next)\n\t// init i18next\n\t// for all options read: https://www.i18next.com/overview/configuration-options\n\t.init({\n\t\t// special options for react-i18next\n\t\t// learn more: https://react.i18next.com/components/i18next-instance\n\t\treact: {\n\t\t\tuseSuspense: false,\n\t\t\twait: true,\n\t\t},\n\t\tlng: 'en',\n\t\tfallbackLng: 'en',\n\t\twhitelist: ['en', 'sk'],\n\t\tlowerCaseLng: true,\n\t\tdebug: false,\n\t\tinterpolation: {\n\t\t\tescapeValue: false, // not needed for react as it escapes by default\n\t\t},\n\t\tsaveMissing: true,\n\t\tsaveMissingTo: 'all',\n\t\tbackend: {\n\t\t\tloadPath: `${PUBLIC_URL}/locales/{{lng}}/translations.json`,\n\t\t},\n\t})\n\nconst Translater: FC = (props: { children?: React.ReactNode }): JSX.Element => {\n\treturn <I18nextProvider i18n={i18n}>{props.children}</I18nextProvider>\n}\n\nexport default Translater\n","export const PUBLIC_URL = process.env.PUBLIC_URL","//@ts-check\nimport process from 'process'\n\nlet theme = {\n\tmode: process.env.NODE_ENV,\n\tfontFamily: 'Arial, Helvetica, sans-serif',\n\tfontSize: '16px',\n\tcolor: {\n\t\twhite: '#fff',\n\t\tblack: '#000',\n\t\tpurple: '#6202EE',\n\t\tgreen: '#5CB85C',\n\t\tred: '#D9534F',\n\t\tblue: '#0275D8',\n\t},\n}\n\nexport type ThemeI = typeof theme\nexport default theme\n","//@ts-check\nimport React, { FC } from 'react'\nimport './reset.css'\n\nimport { ThemeProvider, createGlobalStyle } from 'styled-components'\nimport theme, { ThemeI } from './theme'\n\nconst GlobalStyle = createGlobalStyle<{ theme: ThemeI }>`\n  html, body, #root {\n\t\tfont-family: ${({ theme }) => theme.fontFamily};\n\t\tfont-size: ${({ theme }) => theme.fontSize};\n\t\theight: 100%;\n\t\tbackground-color: ${({ theme }): string => theme.color.purple};\n\t}\n\n\t#root {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t}\n\t\n\t* {\n\t\tbox-sizing: border-box;\n\t}\n`\n\nconst Styler: FC = (props): JSX.Element => (\n\t<ThemeProvider theme={theme}>\n\t\t<GlobalStyle />\n\t\t{props.children}\n\t</ThemeProvider>\n)\n\nexport default Styler\n","//@ts-check\nimport React, { FC } from 'react'\nimport './style.css'\n\nimport styled from 'styled-components'\n\nconst WrapperIcon: FC<StyledProps> = styled.i``\n\ninterface StyledProps {\n\tclassName?: string\n}\n\ninterface IconProps {\n\tname: string\n\tclassName?: string\n}\n\nconst Icon: any = ({ name, className }): any => (\n\t<WrapperIcon className={`icon icon-${name} ${className} rotate`} />\n)\n\nconst WrapperIcons: FC = styled.ul`\n\tcolor: ${({ theme }) => theme.color.white};\n\tdisplay: flex;\n\talign-items: center;\n\tflex-direction: column;\n\tjustify-content: center;\n\toverflow: hidden;\n`\n\nconst WrapperIconsItem: FC = styled.li`\n\tdisplay: flex;\n\talign-items: center;\n\tflex-direction: column;\n\tflex-wrap: wrap;\n\tjustify-content: center;\n\tflex: 1;\n\tpadding: 15px;\n\tfont-size: 30px;\n`\n\nconst WrapperIconsTitle: any = styled.button`\n\tmargin-top: 10px;\n\tfont-size: 16px;\n\tpadding: 5px 12px;\n\tbackground: ${({ theme }) => theme.color.white};\n\tborder: 1px solid ${({ theme }) => theme.color.white};\n\tcolor: ${({ theme }) => theme.color.black};\n\tborder-radius: 3px;\n\n\t&:hover {\n\t\tbackground: ${({ theme }) => theme.color.black};\n\t\tborder: 1px solid ${({ theme }) => theme.color.black};\n\t\tcolor: ${({ theme }) => theme.color.white};\n\t\ttransition: all 0.5s;\n\t}\n`\n\nconst Icons: any = (): any => {\n\tconst { icons } = require('./selection.json')\n\n\treturn (\n\t\t<WrapperIcons>\n\t\t\t<h1>Copy your icon by click on one item:</h1>\n\t\t\t{icons.map((icon, i): any => {\n\t\t\t\tconst text = `<Icon name=\"${icon.properties.name}\" />`\n\t\t\t\treturn (\n\t\t\t\t\t<WrapperIconsItem key={i}>\n\t\t\t\t\t\t<Icon name={icon.properties.name} />\n\t\t\t\t\t\t<WrapperIconsTitle\n\t\t\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\t\t\tonClick={() => navigator.clipboard.writeText(text)}>\n\t\t\t\t\t\t\t{text}\n\t\t\t\t\t\t</WrapperIconsTitle>\n\t\t\t\t\t</WrapperIconsItem>\n\t\t\t\t)\n\t\t\t})}\n\t\t</WrapperIcons>\n\t)\n}\n\nexport default Icon\nexport { Icons }\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Wrapper: any = styled.button`\n\tdisplay: inline-block;\n\ttext-transform: uppercase;\n\tcursor: pointer;\n\tmax-width: 280px;\n\twidth: 100%;\n\tpadding: 15px 20px;\n\ttext-align: center;\n\tbackground-color: ${({ theme }) => theme.color.purple};\n\tcolor: ${({ theme }) => theme.color.white};\n\tborder: 2px solid ${({ theme }) => theme.color.purple};\n\tborder-radius: 18px;\n\tbox-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n\ttext-align: center;\n\n\t&:hover {\n\t\tbackground-color: ${({ theme }) => theme.color.white};\n\t\tcolor: ${({ theme }) => theme.color.purple};\n\t}\n\n\t&:focus {\n\t\toutline: 0;\n\t}\n`\n\nconst Button = props => {\n\treturn <Wrapper {...props}>{props.children}</Wrapper>\n}\nexport default Button\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Link as LinkR } from 'react-router-dom'\nimport Button from '../Button'\n\nconst Wrapper = styled.div`\n\tbackground-color: ${({ theme }) => theme.color.purple};\n\tcolor: ${({ theme }) => theme.color.white};\n\tdisplay: inline-block;\n\tposition: fixed;\n\tleft: 0;\n\ttop: 0;\n\toverflow: hidden;\n\tz-index: 1000;\n`\n\nconst Btn = styled(Button)`\n\tfont-size: 14px;\n\tborder-radius: 0;\n`\n\nconst List = styled.ul`\n\tfont-size: 14px;\n`\n\nconst Item = styled.li`\n\tpadding: 1px 0;\n`\n\nconst Link = styled(LinkR)`\n\tdisplay: block;\n\tcolor: inherit;\n\ttext-decoration: none;\n\tpadding: 5px 10px;\n\tfont-size: inherit;\n\n\t&:hover {\n\t\tbackground-color: ${({ theme }) => theme.color.white};\n\t\tcolor: ${({ theme }) => theme.color.purple};\n\t}\n`\n\nconst Title = styled.p`\n\tfont-weight: bold;\n\tborder: 1px solid ${({ theme }) => theme.color.white};\n\tborder-width: 1px 0;\n\tpadding: 5px;\n`\n\nconst AdminNavBar: any = props => {\n\tconst [show, setShow] = useState(false)\n\n\treturn (\n\t\t<Wrapper className={props.className}>\n\t\t\t<Btn onClick={() => setShow(!show)}>{show ? 'close' : 'admin menu'}</Btn>\n\t\t\t{show && (\n\t\t\t\t<List>\n\t\t\t\t\t<Item>\n\t\t\t\t\t\t<Title>Pages</Title>\n\t\t\t\t\t</Item>\n\t\t\t\t\t<Item>\n\t\t\t\t\t\t<Link to=\"/\">Splash Screen</Link>\n\t\t\t\t\t</Item>\n\t\t\t\t\t<Item>\n\t\t\t\t\t\t<Link to=\"loading\">Loading Screen</Link>\n\t\t\t\t\t</Item>\n\t\t\t\t\t<Item>\n\t\t\t\t\t\t<Link to=\"/home\">Home</Link>\n\t\t\t\t\t</Item>\n\t\t\t\t\t<Item>\n\t\t\t\t\t\t<Link to=\"/login\">Login</Link>\n\t\t\t\t\t</Item>\n\t\t\t\t\t<Item>\n\t\t\t\t\t\t<Link to=\"/verification\">Verification</Link>\n\t\t\t\t\t</Item>\n\t\t\t\t\t<Item>\n\t\t\t\t\t\t<Link to=\"/scanning\">Scanning</Link>\n\t\t\t\t\t</Item>\n\t\t\t\t\t<Item>\n\t\t\t\t\t\t<Title>Settings</Title>{' '}\n\t\t\t\t\t</Item>\n\t\t\t\t\t<Item>\n\t\t\t\t\t\t<Link to=\"/settings-icon\">Icons</Link>\n\t\t\t\t\t</Item>\n\t\t\t\t\t{/* \n\t\t\t\t<Item><Link to=\"/settings-theme\">Theme</Link></Item>\n\t\t\t\t<Item><Link to=\"/settings-cssReset\">Reset css</Link></Item>\n\t\t\t\t<Item><Link to=\"/settings-translation\">Translation</Link></Item>\n\t\t\t*/}\n\t\t\t\t</List>\n\t\t\t)}\n\t\t</Wrapper>\n\t)\n}\n\nexport default AdminNavBar\n","import React, { useState } from 'react'\nimport styled, { css } from 'styled-components'\n\nconst Wrapper = styled.div`\n\tposition: relative;\n\tcolor: ${({ theme }) => theme.color.pruple};\n\twidth: 100%;\n\theight: 50px;\n`\n\nconst Title: any = styled.input<{ active: boolean; value: string }>`\n\tposition: absolute;\n\toverflow: hidden;\n\tz-index: 1;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n\twidth: 100%;\n\tpadding: 15px 25px;\n\tfont-size: 16px;\n\tbackground-color: ${({ theme }) => theme.color.white};\n\tcolor: ${({ theme }) => theme.color.black};\n\tborder: 1px solid rgba(0, 0, 0, 0.5);\n\tborder-radius: 4px;\n\ttransition: all 0.2s;\n\n\t::placeholder {\n\t\tcolor: rgba(0, 0, 0, 0.5);\n\t\topacity: ${({ value }) => value && !!value.length && 0};\n\t\topacity: ${({ active }) => !active && 0};\n\t}\n\n\t${({ active }) =>\n\t\tactive &&\n\t\tcss`\n\t\t\tborder-color: ${({ theme }) => theme.color.purple};\n\t\t\toutline: 0;\n\t\t\tborder-width: 2px;\n\t\t`}\n\n\t&:focus {\n\t\toutline: 0;\n\t}\n\n\t&:hover {\n\t\tborder-color: ${({ theme }) => theme.color.pruple};\n\t}\n`\n\nconst Lable: any = styled.label<{ active: boolean }>`\n\tcolor: ${({ theme }) => theme.color.pruple};\n\tposition: absolute;\n\tz-index: 3;\n\tbackground-color: ${({ theme }) => theme.color.white};\n\ttop: 50%;\n\tleft: 15px;\n\tpadding: 5px;\n\ttext-align: left;\n\tcolor: rgba(0, 0, 0, 0.5);\n\ttransform: translateY(-50%);\n\ttransition: all 0.2s;\n\n\t${({ active }) =>\n\t\tactive &&\n\t\tcss`\n\t\t\twidth: auto;\n\t\t\tcolor: ${({ theme }) => theme.color.purple};\n\t\t\ttransform: translate(-5px, -33px) scale(0.8);\n\t\t\tpadding: 0 5px;\n\t\t`}\n`\n\nconst Information: any = styled.span<{ valid: boolean }>`\n\tdisplay: block;\n\twidth: 100%;\n\ttext-align: left;\n\tcolor: ${({ theme }) => theme.color.purple};\n\tpadding: 5px 15px 0;\n\tfont-size: 12px;\n\n\t${({ valid }) =>\n\t\tvalid &&\n\t\tcss`\n\t\t\tcolor: ${({ theme }) => theme.color.red};\n\t\t`}\n`\n\ntype InputProps = {\n\tclassName: string\n\ttype: string\n\tname?: string\n\tregister?: string\n\tvalue?: string\n\tplaceholder?: string\n\terror?: string\n\tinfo?: string\n\tlabel?: string\n}\n\nconst Input: any = React.forwardRef(\n\t(\n\t\t{\n\t\t\tclassName,\n\t\t\ttype,\n\t\t\tname,\n\t\t\tregister,\n\t\t\tvalue,\n\t\t\tplaceholder,\n\t\t\terror,\n\t\t\tinfo,\n\t\t\tlabel,\n\t\t}: InputProps,\n\t\tref\n\t) => {\n\t\tconst [activeLabel, setActiveLabel] = useState(false)\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Wrapper className={className}>\n\t\t\t\t\t<Title\n\t\t\t\t\t\ttype={type}\n\t\t\t\t\t\tname={name}\n\t\t\t\t\t\tref={register}\n\t\t\t\t\t\tactive={activeLabel || (value && !!value.length)}\n\t\t\t\t\t\tid={name}\n\t\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\t\tonFocus={() => setActiveLabel(true)}\n\t\t\t\t\t\tonBlur={() => setActiveLabel(false)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Lable\n\t\t\t\t\t\tactive={activeLabel || (value && !!value.length)}\n\t\t\t\t\t\thtmlFor={name}>\n\t\t\t\t\t\t{label}\n\t\t\t\t\t</Lable>\n\t\t\t\t</Wrapper>\n\t\t\t\t<Information valid={error}>{error ? error : info}</Information>\n\t\t\t</>\n\t\t)\n\t}\n)\n\nexport default Input\n","import React from 'react'\nimport styled from 'styled-components'\nimport Icon from '../Icon'\nimport { useTranslation } from 'react-i18next'\n\nconst Wrapper = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n`\n\nconst Shield = styled(Icon)`\n\tdisplay: inline-block;\n\theight: 180px;\n\twidth: 180px;\n\tcolor: ${({ theme }) => theme.color.white};\n\n\t&:before {\n\t\tcolor: ${({ theme }) => theme.color.white};\n\t\tfont-size: 180px;\n\t}\n`\n\nconst Title = styled.h1`\n\ttext-transform: uppercase;\n\tcolor: ${({ theme }) => theme.color.white};\n\tmargin-top: 30px;\n\tfont-size: 24px;\n\tpadding: 0 10px;\n\tposition: relative;\n\tz-index: 2;\n`\nconst Logo = props => {\n\tconst { t } = useTranslation()\n\n\treturn (\n\t\t<Wrapper className={props.className}>\n\t\t\t<Shield name=\"shield\" />\n\t\t\t<Title>{t('logo.title')}</Title>\n\t\t</Wrapper>\n\t)\n}\nexport default Logo\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\tflex: 1;\n\tpadding-top: 25px;\n\tbackground-color: ${({ theme }) => theme.color.white};\n`\n\nconst Container = props => (\n\t<Wrapper className={props.className}>{props.children}</Wrapper>\n)\n\nexport default Container\n","//@ts-check\nimport React, { FC, useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { Icon, Logo } from '../../components'\n\nconst Wrapper: FC = styled.div`\n\tposition: relative;\n\tz-index: 2;\n\ttext-align: center;\n\tpadding-top: 60px;\n`\n\nconst WrapperLoader: FC = styled.div`\n\tflex: 1;\n`\n\nconst Loader = styled(Icon)<{ show: boolean }>`\n\tposition: relative;\n\tdisplay: ${({ show }) => (show ? 'inline-block' : 'none')};\n\tcolor: ${({ theme }) => theme.color.white};\n\tmargin-top: 60px;\n\twidth: 60px;\n\theight: 60px;\n\tborder-width: 8px;\n\tborder-right-color: transparent;\n\n\t@keyframes spin {\n\t\t100% {\n\t\t\ttransform: rotate(360deg);\n\t\t}\n\t}\n\n\t&:before {\n\t\tanimation: spin 4s linear infinite;\n\t\tfont-size: 60px;\n\t\tposition: absolute;\n\t\tleft: 0;\n\t\ttop: 0;\n\t}\n`\n\nconst Laoding = () => {\n\tlet history = useHistory()\n\tconst [loading, setLoading] = useState(true)\n\n\tconst lazyLoad = () => {\n\t\tconst timer = setTimeout(() => {\n\t\t\tsetLoading(false)\n\t\t\treturn history.push('/home')\n\t\t}, 1000)\n\n\t\treturn () => clearTimeout(timer)\n\t}\n\n\tuseEffect(() => {\n\t\tlazyLoad()\n\t})\n\n\treturn (\n\t\t<Wrapper>\n\t\t\t<Logo />\n\t\t\t<WrapperLoader>\n\t\t\t\t<Loader name=\"sync-alt-solid\" show={loading} />\n\t\t\t</WrapperLoader>\n\t\t</Wrapper>\n\t)\n}\n\nexport default Laoding\n","//@ts-check\nimport React, { FC } from 'react'\nimport styled from 'styled-components'\nimport { Logo } from '../../components'\n\nconst Wrapper: FC = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\theight: 100%;\n`\n\nconst Home: FC = (): JSX.Element => {\n\treturn (\n\t\t<Wrapper>\n\t\t\t<Logo />\n\t\t</Wrapper>\n\t)\n}\n\nexport default Home\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Logo, Container } from '../../components'\n\nconst Wrapper = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\twidth: 100%;\n\tjustify-content: center;\n\tflex: 1;\n\ttext-align: center;\n\tmargin-top: 20px;\n`\n\nconst Heading = styled(Logo)`\n\tposition: relative;\n\tz-index: 1;\n\tflex: 1;\n\n\t&:after {\n\t\tposition: absolute;\n\t\tcontent: '';\n\t\tbackground: ${({ theme }) => theme.color.purple};\n\t\tborder-radius: 50%;\n\t\theight: 50px;\n\t\tbottom: -25px;\n\t\tleft: 0;\n\t\tright: 0;\n\t\twidth: 100%;\n\t\tz-index: 1;\n\t}\n`\n\nconst Navigation: any = props => (\n\t<Wrapper className={props.className}>\n\t\t<Heading />\n\t\t<Container>{props.children}</Container>\n\t</Wrapper>\n)\n\nexport default Navigation\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useForm } from 'react-hook-form'\nimport styled from 'styled-components'\nimport { Button as ButtonC, Input as InputC } from '../../components'\nimport Navigation from '../../layouts/Navigation'\nimport { useTranslation } from 'react-i18next'\n\nconst List: any = styled.form`\n\tdisplay: inline-block;\n\tmax-width: 280px;\n\twidth: 100%;\n`\n\nconst Input: any = styled(InputC)`\n\tmargin-top: 30px;\n`\n\nconst Button: any = styled(ButtonC)`\n\tmargin-top: 30px;\n`\n\ntype FormData = {\n\tcitizen: string\n\tphone: number\n}\n\nconst Login = () => {\n\tlet history = useHistory()\n\tconst { t } = useTranslation()\n\tconst { register, handleSubmit, watch, errors } = useForm<FormData>()\n\tconst onSubmit = data => {\n\t\t// TODO send data to server and add verify for push history\n\t\tconsole.log(data)\n\n\t\tif (!Object.keys(errors).length) {\n\t\t\thistory.push('/verification')\n\t\t}\n\t}\n\n\treturn (\n\t\t<Navigation>\n\t\t\t<List onSubmit={handleSubmit(onSubmit)}>\n\t\t\t\t<Input\n\t\t\t\t\ttype=\"string\"\n\t\t\t\t\tname=\"citizen\"\n\t\t\t\t\tregister={register({ required: true })}\n\t\t\t\t\tvalue={watch('citizen')}\n\t\t\t\t\tlabel={t('login.label_one')}\n\t\t\t\t\tplaceholder={t('login.placeholder_one')}\n\t\t\t\t\terror={errors.citizen && t('login.error_one')}\n\t\t\t\t\tinfo={t('login.info_one')}\n\t\t\t\t/>\n\t\t\t\t<Input\n\t\t\t\t\ttype=\"tel\"\n\t\t\t\t\tname=\"phone\"\n\t\t\t\t\tregister={register({\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\tpattern: /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/im,\n\t\t\t\t\t})}\n\t\t\t\t\tvalue={watch('phone')}\n\t\t\t\t\tlabel={t('login.label_two')}\n\t\t\t\t\tplaceholder={t('login.placeholder_two')}\n\t\t\t\t\terror={errors.phone && t('login.error_two')}\n\t\t\t\t\tinfo={t('login.info_two')}\n\t\t\t\t/>\n\t\t\t\t<Button type=\"submit\">{t('login.button_one')}</Button>\n\t\t\t</List>\n\t\t</Navigation>\n\t)\n}\nexport default Login\n","import React, { FC } from 'react'\nimport styled from 'styled-components'\nimport { Button } from '../../components'\nimport Navigation from '../../layouts/Navigation'\nimport { Link as LinkR } from 'react-router-dom'\nimport { useTranslation } from 'react-i18next'\n\nconst List: FC = styled.div`\n\tmax-width: 280px;\n\twidth: 100%;\n`\nconst Link = styled(LinkR)`\n\tdisplay: inline-block;\n\twidth: 100%;\n`\n\nconst Item: FC = styled(Button)`\n\tmargin-top: 30px;\n`\n\nconst Home = () => {\n\tconst { t } = useTranslation()\n\n\treturn (\n\t\t<Navigation>\n\t\t\t<List>\n\t\t\t\t<Link to=\"/login\">\n\t\t\t\t\t<Item>{t('home.button_one')}</Item>\n\t\t\t\t</Link>\n\t\t\t\t<Link to=\"/\">\n\t\t\t\t\t<Item>{t('home.button_two')}</Item>\n\t\t\t\t</Link>\n\t\t\t\t<Link to=\"/\">\n\t\t\t\t\t<Item>{t('home.button_three')}</Item>\n\t\t\t\t</Link>\n\t\t\t</List>\n\t\t</Navigation>\n\t)\n}\nexport default Home\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useForm } from 'react-hook-form'\nimport styled from 'styled-components'\nimport { Button as ButtonC, Input as InputC } from '../../components'\nimport Navigation from '../../layouts/Navigation'\nimport { useTranslation } from 'react-i18next'\n\nconst List: any = styled.form`\n\tdisplay: inline-block;\n\tmax-width: 280px;\n\twidth: 100%;\n`\n\nconst Input: any = styled(InputC)`\n\tmargin-top: 30px;\n`\n\nconst Button: any = styled(ButtonC)`\n\tmargin-top: 60px;\n`\n\ntype FormData = {\n\tverification: string\n}\n\nconst Verification = () => {\n\tlet history = useHistory()\n\tconst { t } = useTranslation()\n\tconst { register, handleSubmit, watch, errors } = useForm<FormData>()\n\tconst onSubmit = data => {\n\t\t// TODO send data to server and add verify for push history\n\t\tconsole.log(data)\n\n\t\tif (!Object.keys(errors).length) {\n\t\t\thistory.push('/verification')\n\t\t}\n\t}\n\treturn (\n\t\t<Navigation>\n\t\t\t<List onSubmit={handleSubmit(onSubmit)}>\n\t\t\t\t<Input\n\t\t\t\t\ttype=\"string\"\n\t\t\t\t\tname=\"verification\"\n\t\t\t\t\tregister={register({ required: true })}\n\t\t\t\t\tvalue={watch('verification') || ''}\n\t\t\t\t\tlabel={t('verification.label_one')}\n\t\t\t\t\tplaceholder={t('verification.placeholder_one')}\n\t\t\t\t\terrors={errors.verification && t('verification.error_one')}\n\t\t\t\t\tinfo={t('verification.info_one')}\n\t\t\t\t/>\n\t\t\t\t<Button type=\"submit\">{t('verification.button_one')}</Button>\n\t\t\t</List>\n\t\t</Navigation>\n\t)\n}\nexport default Verification\n","import React, { Component } from 'react'\nimport QrReader from 'react-qr-reader'\n\nexport class Scanner extends Component {\n\tstate = {\n\t\tresult: 'No result',\n\t}\n\n\thandleScan = data => {\n\t\tif (data) {\n\t\t\tthis.setState({\n\t\t\t\tresult: data,\n\t\t\t})\n\t\t}\n\t}\n\thandleError = err => {\n\t\tconsole.error(err)\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<QrReader\n\t\t\t\t\tdelay={300}\n\t\t\t\t\tonError={this.handleError}\n\t\t\t\t\tonScan={this.handleScan}\n\t\t\t\t\tstyle={{ width: '100%' }}\n\t\t\t\t/>\n\t\t\t\t<p>{this.state.result}</p>\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import React from 'react'\nimport { Scanner } from '../../components/Scanner/index';\n\nexport const Scanning = () => {\n\treturn <Scanner />\n}\n\t\n","//@ts-check\nimport React from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport { Icons, AdminNavBar } from '../components'\nimport {\n\tSplashScreen,\n\tLoading,\n\tHome,\n\tLogin,\n\tVerification,\n\tScanning,\n} from '../Pages'\nimport { PUBLIC_URL } from '../const'\n\nconst Routing: any = (): any => {\n\treturn (\n\t\t<React.Suspense fallback={<Loading />}>\n\t\t\t<BrowserRouter basename={PUBLIC_URL}>\n\t\t\t\t<AdminNavBar />\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t<SplashScreen />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/loading\">\n\t\t\t\t\t\t<Loading />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/home\">\n\t\t\t\t\t\t<Home />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/login\">\n\t\t\t\t\t\t<Login />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/verification\">\n\t\t\t\t\t\t<Verification />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/settings-icon\">\n\t\t\t\t\t\t<Icons />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/scanning\">\n\t\t\t\t\t\t<Scanning />\n\t\t\t\t\t</Route>\n\t\t\t\t\t{/* <Route path=\"/settings-theme\">\n\t\t\t\t\t<Icons />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/settings-cssReset\">\n\t\t\t\t\t<Icons />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/settings-translation\">\n\t\t\t\t\t<Icons />\n\t\t\t\t</Route> */}\n\t\t\t\t</Switch>\n\t\t\t</BrowserRouter>\n\t\t</React.Suspense>\n\t)\n}\n\nexport default Routing\n","//@ts-check\nimport React, { StrictMode } from 'react'\nimport ReactDOM from 'react-dom'\nimport * as serviceWorker from './serviceWorker'\n\nimport Translater from './i18n'\nimport Styler from './styles'\nimport Routing from './routing'\n\nconst Root = () => (\n\t<StrictMode>\n\t\t<Translater>\n\t\t\t<Styler>\n\t\t\t\t<Routing />\n\t\t\t</Styler>\n\t\t</Translater>\n\t</StrictMode>\n)\n\nReactDOM.render(<Root />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}