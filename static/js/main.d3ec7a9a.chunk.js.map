{"version":3,"sources":["serviceWorker.ts","i18n/index.tsx","env/index.ts","styles/theme/index.ts","styles/index.tsx","components/Icon/index.tsx","components/Button/index.tsx","components/Input/index.tsx","components/Container/index.tsx","components/Logo/index.tsx","components/HamburgerMenu/index.tsx","components/Menu/index.tsx","components/Scanner/index.tsx","components/BoxShaddow/index.tsx","components/QrCertificate/index.tsx","components/StatusBar/index.tsx","components/OfflineBaner/index.tsx","components/UserInfoBlog/index.tsx","components/NotificationBlog/index.tsx","pages/Loading/index.tsx","pages/SplashScreen/index.tsx","layouts/Mobile/index.tsx","layouts/Navigation/index.tsx","pages/Login/index.tsx","pages/NotFound/index.tsx","pages/Home/index.tsx","pages/Results/index.tsx","pages/Verification/index.tsx","services/index.ts","pages/Scanning/index.tsx","pages/MyStatus/index.tsx","pages/TestReusults/index.tsx","pages/Notifications/index.tsx","settings/ListIcons/index.tsx","routes/index.tsx","index.tsx"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","i18n","use","Backend","LanguageDetector","initReactI18next","init","react","useSuspense","wait","lng","fallbackLng","whitelist","lowerCaseLng","debug","interpolation","escapeValue","saveMissing","saveMissingTo","backend","loadPath","process","Translater","props","children","theme","mode","env","NODE_ENV","fontFamily","fontSize","color","white","black","lightblack","purple","green","red","blue","GlobalStyle","createGlobalStyle","Styler","Wrapper","styled","i","Icon","name","className","button","hovering","css","Button","hover","ContainerEnumPosition","ContainerEnumType","div","pruple","Title","input","value","length","active","Lable","label","Information","span","valid","Input","React","forwardRef","ref","type","placeholder","info","useState","activeLabel","setActiveLabel","id","onFocus","onBlur","htmlFor","ROW","x","CENTER","y","Container","IconShield","h1","Logo","t","useTranslation","COL","List","ul","Item","li","Link","LinkR","p","HamburgerMenu","initialState","setState","onClick","visibleMenu","routes","map","route","key","visible","link","to","Box","Menu","Component","BoxShaddow","QrCodeProps","renderAs","level","size","QrCertificate","certificateToken","StatusBar","OfflineBaner","time","TitleName","h4","Label","Text","LEFT","data","age","country","IconNotification","h3","Description","NotificationBlog","show","RIGHT","ContainerC","LogoC","Loader","Laoding","history","useHistory","useEffect","timer","setTimeout","push","lazyLoad","Mobile","TOP","Heading","IconArrow","Navigation","useLocation","pathname","form","InputC","ButtonC","Login","useForm","handleSubmit","watch","errors","onSubmit","Object","keys","required","citizen","pattern","phone","Content","NotFound","Home","ImageQRCode","h2","IconStatus","Success","positive","UserInfoBlog","Verification","verification","verifyPass","token","publickeys","jwt","decode","parseJWT","certificate","Scanning","res","JSON","stringify","InfoStatusBar","Status","Date","count","TestReusults","date","finishQarantineDay","Notifications","IconType","ButtonCopy","component","Loading","exact","Results","MyStatus","properties","setData","icons","require","icon","variant","clipboard","writeText","Routing","Suspense","fallback","basename","path","Root","ReactDOM","render","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d3ec7a9a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { FC } from 'react'\nimport i18n from 'i18next'\nimport Backend from 'i18next-xhr-backend'\nimport LanguageDetector from 'i18next-browser-languagedetector'\nimport { initReactI18next, I18nextProvider } from 'react-i18next'\nimport { PUBLIC_URL } from '../env'\n\ni18n\n\t// learn more: https://github.com/i18next/i18next-xhr-backend\n\t.use(Backend)\n\t// detect user language\n\t// learn more: https://github.com/i18next/i18next-browser-languageDetector\n\t.use(LanguageDetector)\n\t// pass the i18n instance to react-i18next.\n\t.use(initReactI18next)\n\t// init i18next\n\t// for all options read: https://www.i18next.com/overview/configuration-options\n\t.init({\n\t\t// special options for react-i18next\n\t\t// learn more: https://react.i18next.com/components/i18next-instance\n\t\treact: {\n\t\t\tuseSuspense: false,\n\t\t\twait: true,\n\t\t},\n\t\tlng: 'en',\n\t\tfallbackLng: 'en',\n\t\twhitelist: ['en', 'sk'],\n\t\tlowerCaseLng: true,\n\t\tdebug: false,\n\t\tinterpolation: {\n\t\t\tescapeValue: false, // not needed for react as it escapes by default\n\t\t},\n\t\tsaveMissing: true,\n\t\tsaveMissingTo: 'all',\n\t\tbackend: {\n\t\t\tloadPath: `${PUBLIC_URL}/locales/{{lng}}/translations.json`,\n\t\t},\n\t})\n\nconst Translater: FC = (props: { children?: React.ReactNode }): JSX.Element => {\n\treturn <I18nextProvider i18n={i18n}>{props.children}</I18nextProvider>\n}\n\nexport default Translater\n","export const PUBLIC_URL = process.env.PUBLIC_URL","//@ts-check\nimport process from 'process'\n\nlet theme = {\n\tmode: process.env.NODE_ENV,\n\tfontFamily: 'Arial, Helvetica, sans-serif',\n\tfontSize: '16px',\n\tcolor: {\n\t\twhite: '#fff',\n\t\tblack: '#000',\n\t\tlightblack: '#2A2C2E',\n\t\tpurple: '#6202EE',\n\t\tgreen: '#5CB85C',\n\t\tred: '#D9534F',\n\t\tblue: '#0275D8',\n\t},\n}\n\nexport type ThemeI = typeof theme\nexport default theme\n","//@ts-check\nimport React, { FC } from 'react'\nimport './reset.css'\n\nimport { ThemeProvider, createGlobalStyle } from 'styled-components'\nimport theme, { ThemeI } from './theme'\n\nconst GlobalStyle = createGlobalStyle<{ theme: ThemeI }>`\n  html, body, #root {\n\t\tfont-family: ${({ theme }) => theme.fontFamily};\n\t\tfont-size: ${({ theme }) => theme.fontSize};\n\t\theight: 100%;\n\t}\n\n\t#root {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t}\n\t\n\t* {\n\t\tbox-sizing: border-box;\n\t}\n`\n\nconst Styler: FC = (props): JSX.Element => (\n\t<ThemeProvider theme={theme}>\n\t\t<GlobalStyle />\n\t\t{props.children}\n\t</ThemeProvider>\n)\n\nexport default Styler\n","//@ts-check\nimport React from 'react'\nimport styled from 'styled-components'\n\n// styles ./style.css from icomoon\nimport './style.css'\n\nconst Wrapper = styled.i`\n\tdisplay: inline-block;\n\tposition: relative;\n\tz-index: 1;\n\twidth: 30px;\n\theight: 30px;\n\n\t&:before {\n\t\tcolor: ${({ theme }) => theme.color.white};\n\t\tfont-size: 22px;\n\t\twidth: 20px;\n\t\theight: 20px;\n\t\tposition: absolute;\n\t\ttop: 50%;\n\t\tleft: 50%;\n\t\tbottom: 0;\n\t\tright: 0;\n\t\ttransform: translate(-50%, -50%);\n\t}\n`\n\nconst Icon: any = ({ name, className }): any => (\n\t<Wrapper className={`icon icon-${name} ${className} rotate`} />\n)\n\nexport default Icon\nexport const getListIcons = () => require('./selection.json')\n","import React from 'react'\nimport styled, { css } from 'styled-components'\n\nconst Wrapper: any = styled.button<{ hovering: boolean }>`\n\tdisplay: inline-block;\n\ttext-transform: uppercase;\n\tcursor: pointer;\n\tmax-width: 280px;\n\twidth: 100%;\n\tpadding: 15px 20px;\n\ttext-align: center;\n\tbackground-color: ${({ theme }) => theme.color.purple};\n\tcolor: ${({ theme }) => theme.color.white};\n\tborder: 2px solid ${({ theme }) => theme.color.purple};\n\tborder-radius: 18px;\n\tbox-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n\ttext-align: center;\n\n\t${({ hovering }) =>\n\t\thovering &&\n\t\tcss`\n\t\t\t&:hover {\n\t\t\t\tbackground-color: ${({ theme }) => theme.color.white};\n\t\t\t\tcolor: ${({ theme }) => theme.color.purple};\n\t\t\t}\n\n\t\t\t&:focus {\n\t\t\t\toutline: 0;\n\t\t\t}\n\t\t`}\n`\n\nconst Button = props => {\n\treturn (\n\t\t<Wrapper {...props} hovering={props.hover || true}>\n\t\t\t{props.children}\n\t\t</Wrapper>\n\t)\n}\nexport default Button\n","import React, { useState } from 'react'\nimport styled, { css } from 'styled-components'\n\nconst Wrapper = styled.div`\n\tposition: relative;\n\tcolor: ${({ theme }) => theme.color.pruple};\n\twidth: 100%;\n\theight: 50px;\n`\n\nconst Title: any = styled.input<{ active: boolean; value: string }>`\n\tposition: absolute;\n\toverflow: hidden;\n\tz-index: 1;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n\twidth: 100%;\n\tpadding: 15px 25px;\n\tfont-size: 16px;\n\tbackground-color: ${({ theme }) => theme.color.white};\n\tcolor: ${({ theme }) => theme.color.black};\n\tborder: 1px solid rgba(0, 0, 0, 0.5);\n\tborder-radius: 4px;\n\ttransition: all 0.2s;\n\n\t::placeholder {\n\t\tcolor: rgba(0, 0, 0, 0.5);\n\t\topacity: ${({ value }) => value && !!value.length && 0};\n\t\topacity: ${({ active }) => !active && 0};\n\t}\n\n\t${({ active }) =>\n\t\tactive &&\n\t\tcss`\n\t\t\tborder-color: ${({ theme }) => theme.color.purple};\n\t\t\toutline: 0;\n\t\t\tborder-width: 2px;\n\t\t`}\n\n\t&:focus {\n\t\toutline: 0;\n\t}\n\n\t&:hover {\n\t\tborder-color: ${({ theme }) => theme.color.pruple};\n\t}\n`\n\nconst Lable: any = styled.label<{ active: boolean }>`\n\tcolor: ${({ theme }) => theme.color.pruple};\n\tposition: absolute;\n\tz-index: 3;\n\tbackground-color: ${({ theme }) => theme.color.white};\n\ttop: 50%;\n\tleft: 15px;\n\tpadding: 5px;\n\ttext-align: left;\n\tcolor: rgba(0, 0, 0, 0.5);\n\ttransform: translateY(-50%);\n\ttransition: all 0.2s;\n\n\t${({ active }) =>\n\t\tactive &&\n\t\tcss`\n\t\t\twidth: auto;\n\t\t\tcolor: ${({ theme }) => theme.color.purple};\n\t\t\ttransform: translate(-5px, -33px) scale(0.8);\n\t\t\tpadding: 0 5px;\n\t\t`}\n`\n\nconst Information: any = styled.span<{ valid: boolean }>`\n\tdisplay: block;\n\twidth: 100%;\n\ttext-align: left;\n\tcolor: ${({ theme }) => theme.color.purple};\n\tpadding: 5px 15px 0;\n\tfont-size: 12px;\n\n\t${({ valid }) =>\n\t\tvalid &&\n\t\tcss`\n\t\t\tcolor: ${({ theme }) => theme.color.red};\n\t\t`}\n`\n\ntype InputProps = {\n\tclassName: string\n\ttype: string\n\tname?: string\n\tregister?: string\n\tvalue?: string\n\tplaceholder?: string\n\terror?: string\n\tinfo?: string\n\tlabel?: string\n}\n\nconst Input: any = React.forwardRef(\n\t(\n\t\t{\n\t\t\tclassName,\n\t\t\ttype,\n\t\t\tname,\n\t\t\tregister,\n\t\t\tvalue,\n\t\t\tplaceholder,\n\t\t\terror,\n\t\t\tinfo,\n\t\t\tlabel,\n\t\t}: InputProps,\n\t\tref\n\t) => {\n\t\tconst [activeLabel, setActiveLabel] = useState(false)\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Wrapper className={className}>\n\t\t\t\t\t<Title\n\t\t\t\t\t\ttype={type}\n\t\t\t\t\t\tname={name}\n\t\t\t\t\t\tref={register}\n\t\t\t\t\t\tactive={activeLabel || (value && !!value.length)}\n\t\t\t\t\t\tid={name}\n\t\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\t\tonFocus={() => setActiveLabel(true)}\n\t\t\t\t\t\tonBlur={() => setActiveLabel(false)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Lable\n\t\t\t\t\t\tactive={activeLabel || (value && !!value.length)}\n\t\t\t\t\t\thtmlFor={name}>\n\t\t\t\t\t\t{label}\n\t\t\t\t\t</Lable>\n\t\t\t\t</Wrapper>\n\t\t\t\t<Information valid={error}>{error ? error : info}</Information>\n\t\t\t</>\n\t\t)\n\t}\n)\n\nexport default Input\n","import React, { FC } from 'react'\nimport styled from 'styled-components'\n\nenum ContainerEnumPosition {\n\tLEFT = 'flex-start',\n\tRIGHT = 'flex-end',\n\tTOP = 'flex-start',\n\tBOTTOM = 'flex-end',\n\tCENTER = 'center',\n}\n\nenum ContainerEnumType {\n\tROW = 'row',\n\tCOL = 'column',\n}\n\nexport type ContainerProps = {\n\tclassName?: string\n\ttype?: ContainerEnumType\n\tx?: ContainerEnumPosition\n\ty?: ContainerEnumPosition\n}\n\nconst Wrapper = styled.div<ContainerProps>`\n\tposition: relative;\n\tdisplay: flex;\n\tflex-direction: ${({ type }): string => type || ContainerEnumType.ROW};\n\tjustify-content: ${({ x }): string => x || ContainerEnumPosition.CENTER};\n\talign-items: ${({ y }): string => y || ContainerEnumPosition.CENTER};\n\tflex: 1;\n\twidth: 100%;\n`\n\nconst Container: FC<ContainerProps> = ({ children, className, type, x, y }): any => (\n\t<Wrapper className={className} type={type} x={x} y={y}>\n\t\t{children}\n\t</Wrapper>\n)\n\nexport { ContainerEnumPosition, ContainerEnumType }\nexport default Container\n","import React from 'react'\nimport styled from 'styled-components'\nimport Icon from '../Icon'\nimport { useTranslation } from 'react-i18next'\nimport Container, { ContainerEnumType } from '../Container'\n\nconst Wrapper: any = styled(Container)`\n\tpadding-top: 30px;\n`\n\nconst IconShield = styled(Icon)`\n\theight: 100px;\n\twidth: 100px;\n\n\t&:before {\n\t\tfont-size: 100px;\n\t\theight: 100px;\n\t\twidth: 100px;\n\t}\n`\n\nconst Title = styled.h1`\n\ttext-transform: uppercase;\n\tcolor: ${({ theme }) => theme.color.white};\n\tmargin-top: 30px;\n\tfont-size: 24px;\n\tpadding: 0 10px;\n\tposition: relative;\n\tz-index: 2;\n`\nconst Logo: any = props => {\n\tconst { t } = useTranslation()\n\n\treturn (\n\t\t<Wrapper\n\t\t\tclassName={props.className}\n\t\t\ttype={props.type || ContainerEnumType.COL}>\n\t\t\t<IconShield name=\"shield\" />\n\t\t\t<Title>{t('logo.title')}</Title>\n\t\t\t{props.children}\n\t\t</Wrapper>\n\t)\n}\n\nexport default Logo\n","import React, { useState } from 'react'\nimport styled, { css } from 'styled-components'\nimport { Link as LinkR } from 'react-router-dom'\nimport Icon from '../Icon'\nimport { routes } from '../../routes'\n\nconst Wrapper: any = styled.div`\n\tbackground-color: ${({ theme }) => theme.color.purple};\n\tcursor: pointer;\n\tuser-select: none;\n\twidth: 30px;\n\theight: 30px;\n`\n\nconst List: any = styled.ul<{ active: boolean }>`\n\tbackground-color: ${({ theme }) => theme.color.purple};\n\tposition: absolute;\n\ttext-transform: uppercase;\n\tleft: 0;\n\ttop: 100%;\n\tmax-width: 320px;\n\twidth: 100%;\n\ttransform: translateX(-100%);\n\ttransition: all 0.5s;\n\topacity: 0;\n\tz-index: 1;\n\toverflow: auto;\n\theight: calc(100vh - 73px);\n\n\t${({ active }) =>\n\t\tactive &&\n\t\tcss`\n\t\t\topacity: 1;\n\t\t\ttransform: translateX(0);\n\t\t`}\n`\n\nconst Item = styled.li`\n\tpadding: 1px 0;\n`\n\nconst Link = styled(LinkR)`\n\tposition: relative;\n\tz-index: 3;\n\tcolor: ${({ theme }) => theme.color.white};\n\tdisplay: block;\n\tpadding: 15px 10px;\n\tfont-size: 18px;\n\ttext-decoration: none;\n\n\t&:hover {\n\t\ttext-decoration: underline;\n\t}\n`\n\nconst Title = styled.p`\n\tposition: relative;\n\tz-index: 3;\n\tfont-weight: bold;\n\tcolor: ${({ theme }) => theme.color.white};\n\tborder: 1px solid ${({ theme }) => theme.color.white};\n\tborder-width: 1px 0 0;\n\tpadding: 15px 10px;\n\tfont-size: 18px;\n`\n\nconst HamburgerMenu: any = props => {\n\tconst [state, setState] = useState(props.initialState || false)\n\n\treturn (\n\t\t<Wrapper active={state} className={props.className} hovering={props.hovering} onClick={() => setState(!state)}>\n\t\t\t<Icon name={props.visibleMenu ? 'bars' : 'arrow'} />\n\t\t\t<List active={state}>\n\t\t\t\t{routes.map((route, i) => (\n\t\t\t\t\t<Item key={i}>\n\t\t\t\t\t\t{route.visible && route.link ? <Link to={route.link}>{route.label}</Link> : <Title>{route.label}</Title>}\n\t\t\t\t\t</Item>\n\t\t\t\t))}\n\t\t\t</List>\n\t\t</Wrapper>\n\t)\n}\n\nexport default HamburgerMenu\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport Icon from '../Icon'\nimport HamburgerMenu from '../HamburgerMenu'\nimport Container from '../Container'\nimport { useTranslation } from 'react-i18next'\n\nconst Wrapper = styled(Container)`\n\tz-index: 1000;\n\tjustify-content: space-between;\n\tbackground-color: ${({ theme }) => theme.color.purple};\n\tpadding: 20px;\n\tflex: initial;\n`\n\nconst Title = styled.h1`\n\tposition: relative;\n\tz-index: 2;\n\ttext-transform: uppercase;\n\tcolor: ${({ theme }) => theme.color.white};\n\tfont-size: 18px;\n\tpadding: 0 10px;\n`\n\nconst Box = styled.div`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tflex: 1;\n`\n\nconst Menu = props => {\n\tconst { t } = useTranslation()\n\n\treturn (\n\t\t<Wrapper className={props.className}>\n\t\t\t<HamburgerMenu visibleMenu />\n\t\t\t<Box>\n\t\t\t\t<Icon name=\"shield\" />\n\t\t\t\t<Title>{t('logo.title')}</Title>\n\t\t\t</Box>\n\t\t\t<Link to=\"/notifications\">\n\t\t\t\t<Icon name=\"bell\" />\n\t\t\t</Link>\n\t\t</Wrapper>\n\t)\n}\nexport default Menu\n","import React, { Component } from 'react'\nimport QrReader from 'react-qr-reader'\n\nclass Scanner extends Component {\n\tstate = {\n\t\tresult: 'No result',\n\t}\n\n\thandleScan = data => {\n\t\tif (data) {\n\t\t\tthis.setState({\n\t\t\t\tresult: data,\n\t\t\t})\n\t\t}\n\t}\n\thandleError = err => {\n\t\tconsole.error(err)\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<QrReader\n\t\t\t\t\tdelay={300}\n\t\t\t\t\tonError={this.handleError}\n\t\t\t\t\tonScan={this.handleScan}\n\t\t\t\t\tstyle={{ width: '100%' }}\n\t\t\t\t/>\n\t\t\t\t<p>{this.state.result}</p>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Scanner\n","import React from 'react'\nimport styled from 'styled-components'\nimport Container from '../Container'\n\nconst Wrapper: any = styled(Container)`\n\tbox-shadow: rgba(0, 0, 0, 0.2) 0px 3px 3px -2px,\n\t\trgba(0, 0, 0, 0.14) 0px 3px 4px 0px, rgba(0, 0, 0, 0.12) 0px 1px 8px 0px;\n\tpadding: 30px;\n\tflex: initial;\n`\n\nconst BoxShaddow: any = ({ className, children }) => {\n\treturn <Wrapper className={className}>{children}</Wrapper>\n}\nexport default BoxShaddow\n","import React from 'react'\nimport QRCode from 'qrcode.react'\n\nconst QrCodeProps = {\n\trenderAs: 'svg',\n\tlevel: 'M',\n\tsize: 256,\n}\nexport interface QrCertificateProps {\n\tcertificateToken: string\n\tclassName?: string\n}\n\nconst QrCertificate = (props: QrCertificateProps) => (\n\t<QRCode\n\t\tclassName={props.className}\n\t\tvalue={props.certificateToken}\n\t\t{...QrCodeProps}\n\t/>\n)\n\nexport default QrCertificate\n","import React from 'react'\nimport styled, { css } from 'styled-components'\nimport Container, { ContainerEnumType } from '../Container'\n\nconst Wrapper = styled(Container)<{ state: boolean }>`\n\tpadding-top: 30px;\n\tflex: initial;\n\n\t&:after {\n\t\tposition: absolute;\n\t\tcontent: '';\n\t\tborder-radius: 50%;\n\t\theight: 50px;\n\t\tbottom: -25px;\n\t\tleft: 0;\n\t\tright: 0;\n\t\twidth: 100%;\n\t\tz-index: 0;\n\t}\n\n\t${({ state }) =>\n\t\tstate\n\t\t\t? css`\n\t\t\t\t\tbackground-color: ${({ theme }) => theme.color.red};\n\t\t\t\t\t&:after {\n\t\t\t\t\t\tbackground-color: ${({ theme }) => theme.color.red};\n\t\t\t\t\t}\n\t\t\t  `\n\t\t\t: css`\n\t\t\t\t\tbackground-color: ${({ theme }) => theme.color.green};\n\t\t\t\t\t&:after {\n\t\t\t\t\t\tbackground-color: ${({ theme }) => theme.color.green};\n\t\t\t\t\t}\n\t\t\t  `}\n`\n\nconst StatusBar: any = props => (\n\t<Wrapper className={props.className} state={props.state} type={props.type || ContainerEnumType.COL}>\n\t\t{props.children}\n\t</Wrapper>\n)\n\nexport default StatusBar\n","import React from 'react'\nimport styled from 'styled-components'\nimport Container from '../Container'\nimport { useTranslation } from 'react-i18next'\n\nconst Wrapper: any = styled(Container)`\n\tbackground-color: ${({ theme }) => theme.color.lightblack};\n\tflex: initial;\n\tpadding: 20px;\n\tcolor: ${({ theme }) => theme.color.white};\n\tfont-size: 16px;\n`\n\nconst OfflineBaner: any = ({ className }) => {\n\tconst { t } = useTranslation()\n\n\t// TODO get time and show this bar when I am offline\n\tconst time = '12:00:10'\n\n\treturn <Wrapper className={className}>{t('offline.title', { time })}</Wrapper>\n}\nexport default OfflineBaner\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'react-i18next'\nimport Container, {\n\tContainerEnumType,\n\tContainerEnumPosition,\n} from '../Container'\n\nconst Wrapper = styled(Container)`\n\tfont-size: 14px;\n\tmargin-top: 30px;\n`\n\nconst TitleName = styled.h4`\n\tfont-size: 24px;\n\tfont-weight: bold;\n`\n\nconst Label = styled.label`\n\ttext-transform: uppercase;\n\tfont-size: 14px;\n\topacity: 0.6;\n\tmargin: 20px 0 5px;\n`\n\nconst Text = styled.p`\n\tfont-weight: bold;\n\tfont-size: 18px;\n`\n\nconst Logo: any = props => {\n\tconst { t } = useTranslation()\n\n\treturn (\n\t\t<Wrapper type={ContainerEnumType.COL} y={ContainerEnumPosition.LEFT}>\n\t\t\t<Label>{t('results.info.label_one')}</Label>\n\t\t\t<TitleName>{props.data.name}</TitleName>\n\t\t\t<Label>{t('results.info.label_two')}</Label>\n\t\t\t<Text>{props.data.age}</Text>\n\t\t\t<Label>{t('results.info.label_three')}</Label>\n\t\t\t<Text>{'Okres Levoča, Prešovský kraj'}</Text>\n\t\t\t<Label>{t('results.info.label_four')}</Label>\n\t\t\t<Text>{props.data.country}</Text>\n\t\t</Wrapper>\n\t)\n}\n\nexport default Logo\n","import React from 'react'\nimport { Link as LinkR } from 'react-router-dom'\nimport styled from 'styled-components'\nimport Container, { ContainerEnumPosition, ContainerEnumType } from '../Container'\nimport BoxShaddow from '../BoxShaddow'\nimport Icon from '../Icon'\nimport { useTranslation } from 'react-i18next'\n\nconst Wrapper: any = styled(BoxShaddow)`\n\tdisplay: inline-block;\n\tpadding: 25px;\n`\n\nconst IconNotification = styled(Icon)`\n\t&:before {\n\t\tcolor: ${({ theme }) => theme.color.red};\n\t}\n`\n\nconst Title = styled.h3`\n\tcolor: ${({ theme }) => theme.color.red};\n\tfont-size: 24px;\n\tmargin-left: 30px;\n`\n\nconst Description = styled.p`\n\tfont-size: 16px;\n\tpadding-top: 20px;\n\tline-height: 24px;\n`\n\nconst Link = styled(LinkR)`\n\tdisplay: inline-block;\n\ttext-transform: uppercase;\n\tfont-weight: bold;\n\tcolor: ${({ theme }) => theme.color.purple};\n\tfont-size: 14px;\n\ttext-decoration: none;\n\n\t&:hover {\n\t\ttext-decoration: underline;\n\t}\n`\n\nconst NotificationBlog: any = ({ show }) => {\n\tconst { t } = useTranslation()\n\n\treturn (\n\t\tshow && (\n\t\t\t<Wrapper type={ContainerEnumType.COL}>\n\t\t\t\t<Container x={ContainerEnumPosition.LEFT}>\n\t\t\t\t\t<IconNotification name=\"notification\" />\n\t\t\t\t\t<Title>{t('results.positive.notification.title')}</Title>\n\t\t\t\t</Container>\n\t\t\t\t<Description>{t('results.positive.notification.description')}</Description>\n\t\t\t\t<Container x={ContainerEnumPosition.RIGHT}>\n\t\t\t\t\t<Link to=\"/mystatus\">{t('results.positive.notification.link')}</Link>\n\t\t\t\t</Container>\n\t\t\t</Wrapper>\n\t\t)\n\t)\n}\nexport default NotificationBlog\n","//@ts-check\nimport React, { FC, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { Icon, Logo as LogoC, Container as ContainerC } from '../../components'\n\nconst Wrapper: FC = styled(ContainerC)`\n\tbackground-color: ${({ theme }) => theme.color.purple};\n\twidth: 100%;\n`\n\nconst Logo: FC = styled(LogoC)`\n\tposition: relative;\n\tpadding: 120px 0;\n`\n\nconst Loader = styled(Icon)<{ show: boolean }>`\n\tposition: absolute;\n\tbottom: 0;\n\twidth: 60px;\n\theight: 60px;\n\tanimation: spin 4s linear infinite;\n\n\t@keyframes spin {\n\t\t100% {\n\t\t\ttransform: rotate(360deg);\n\t\t}\n\t}\n\n\t&:before {\n\t\tfont-size: 60px;\n\t\twidth: 60px;\n\t\theight: 60px;\n\t}\n`\n\nconst Laoding = () => {\n\tconst history = useHistory()\n\n\tconst lazyLoad = () => {\n\t\tconst timer = setTimeout(() => {\n\t\t\treturn history.push('/home')\n\t\t}, 1000)\n\n\t\treturn () => clearTimeout(timer)\n\t}\n\n\tuseEffect(() => {\n\t\tlazyLoad()\n\t})\n\n\treturn (\n\t\t<Wrapper>\n\t\t\t<Logo>\n\t\t\t\t<Loader name=\"sync-alt-solid\" />\n\t\t\t</Logo>\n\t\t</Wrapper>\n\t)\n}\n\nexport default Laoding\n","//@ts-check\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Logo, Container, ContainerEnumType } from '../../components'\n\nconst Wrapper: any = styled(Container)`\n\tbackground-color: ${({ theme }) => theme.color.purple};\n`\n\nconst Home: any = (): JSX.Element => {\n\treturn (\n\t\t<Wrapper type={ContainerEnumType.COL}>\n\t\t\t<Logo />\n\t\t</Wrapper>\n\t)\n}\n\nexport default Home\n","import React from 'react'\nimport { Container, ContainerEnumType, ContainerEnumPosition, Menu, OfflineBaner } from '../../components'\n\nconst Mobile: any = props => (\n\t<Container\n\t\tclassName={props.className}\n\t\ttype={ContainerEnumType.COL}\n\t\ty={props.y || ContainerEnumPosition.TOP}\n\t\tx={props.x || ContainerEnumPosition.LEFT}>\n\t\t<Menu />\n\t\t<OfflineBaner />\n\t\t<Container type={ContainerEnumType.COL}>{props.children}</Container>\n\t</Container>\n)\n\nexport default Mobile\n","import React from 'react'\nimport { Link as LinkR, useLocation } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { Logo, Container, ContainerEnumType, Icon } from '../../components'\n\nconst Wrapper = styled(Container)`\n\tpadding-bottom: 30px;\n`\n\nconst Heading = styled(Logo)`\n\tbackground-color: ${({ theme }) => theme.color.purple};\n\tposition: relative;\n\tz-index: 1;\n\tflex: initial;\n\tpadding-bottom: 30px;\n\n\t&:after {\n\t\tbox-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n\t\tposition: absolute;\n\t\tcontent: '';\n\t\tbackground: ${({ theme }) => theme.color.purple};\n\t\tborder-radius: 50%;\n\t\theight: 50px;\n\t\tbottom: -25px;\n\t\tleft: 0;\n\t\tright: 0;\n\t\twidth: 100%;\n\t\tz-index: 0;\n\t}\n`\n\nconst Link = styled(LinkR)`\n\tposition: absolute;\n\tleft: 15px;\n\ttop: 15px;\n\n\t&:hover {\n\t\tbackground-color: ${({ theme }) => theme.color.purple};\n\t}\n`\n\nconst IconArrow = styled(Icon)`\n\theight: 100%;\n`\n\nconst Navigation: any = props => {\n\tlet location = useLocation()\n\tconsole.log(location.pathname)\n\n\treturn (\n\t\t<Wrapper className={props.className} type={ContainerEnumType.COL}>\n\t\t\t<Heading>\n\t\t\t\t{location.pathname !== '/home' && (\n\t\t\t\t\t<Link to=\"/home\">\n\t\t\t\t\t\t<IconArrow name=\"arrow\" />\n\t\t\t\t\t</Link>\n\t\t\t\t)}\n\t\t\t</Heading>\n\t\t\t<Container>{props.children}</Container>\n\t\t</Wrapper>\n\t)\n}\n\nexport default Navigation\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useForm } from 'react-hook-form'\nimport styled from 'styled-components'\nimport { Button as ButtonC, Input as InputC } from '../../components'\nimport { Navigation } from '../../layouts'\nimport { useTranslation } from 'react-i18next'\n\nconst List: any = styled.form`\n\tmax-width: 320px;\n\twidth: 100%;\n\tpadding: 30px 20px;\n`\n\nconst Input: any = styled(InputC)`\n\tmargin-top: 30px;\n`\n\nconst Button: any = styled(ButtonC)`\n\tmargin-top: 30px;\n`\n\ntype FormData = {\n\tcitizen: string\n\tphone: number\n}\n\nconst Login = () => {\n\tconst history = useHistory()\n\tconst { t } = useTranslation()\n\tconst { register, handleSubmit, watch, errors } = useForm<FormData>()\n\tconst onSubmit = data => {\n\t\t// TODO send data to server and add verify for push history\n\t\tconsole.log(data)\n\n\t\tif (!Object.keys(errors).length) {\n\t\t\thistory.push('/verification')\n\t\t}\n\t}\n\n\treturn (\n\t\t<Navigation>\n\t\t\t<List onSubmit={handleSubmit(onSubmit)}>\n\t\t\t\t<Input\n\t\t\t\t\ttype=\"string\"\n\t\t\t\t\tname=\"citizen\"\n\t\t\t\t\tregister={register({ required: true })}\n\t\t\t\t\tvalue={watch('citizen')}\n\t\t\t\t\tlabel={t('login.label_one')}\n\t\t\t\t\tplaceholder={t('login.placeholder_one')}\n\t\t\t\t\terror={errors.citizen && t('login.error_one')}\n\t\t\t\t\tinfo={t('login.info_one')}\n\t\t\t\t/>\n\t\t\t\t<Input\n\t\t\t\t\ttype=\"tel\"\n\t\t\t\t\tname=\"phone\"\n\t\t\t\t\tregister={register({\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\tpattern: /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/im,\n\t\t\t\t\t})}\n\t\t\t\t\tvalue={watch('phone')}\n\t\t\t\t\tlabel={t('login.label_two')}\n\t\t\t\t\tplaceholder={t('login.placeholder_two')}\n\t\t\t\t\terror={errors.phone && t('login.error_two')}\n\t\t\t\t\tinfo={t('login.info_two')}\n\t\t\t\t/>\n\t\t\t\t<Button type=\"submit\">{t('login.button_one')}</Button>\n\t\t\t</List>\n\t\t</Navigation>\n\t)\n}\nexport default Login\n","import React from 'react'\nimport { Link as LinkR } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { Container, Button, Icon, ContainerEnumType } from '../../components'\nimport { Mobile } from '../../layouts'\nimport { useTranslation } from 'react-i18next'\n\nconst Content = styled(Container)`\n\tmax-width: 320px;\n\ttext-align: center;\n\twidth: 100%;\n\tpadding: 30px 20px;\n`\n\nconst IconNotification = styled(Icon)`\n\tposition: absolute;\n\tleft: 0;\n\ttop: 50%;\n\ttransform: translateY(-50%);\n\n\t&:before {\n\t\tcolor: ${({ theme }) => theme.color.red};\n\t}\n`\n\nconst Title = styled.h1`\n\tposition: relative;\n\tpadding-left: 50px;\n\twidth: 100%;\n\ttext-align: left;\n\tfont-size: 14px;\n\tfont-weight: bold;\n\tcolor: ${({ theme }) => theme.color.red};\n`\n\nconst Description = styled.p`\n\twidth: 100%;\n\ttext-align: left;\n\tmargin-top: 60px;\n\tfont-size: 14px;\n\tfont-weight: bold;\n\tcolor: ${({ theme }) => theme.color.red};\n`\n\nconst Link = styled(LinkR)`\n\tdisplay: inline-block;\n\twidth: 100%;\n`\n\nconst Item: any = styled(Button)`\n\tmargin-top: 30px;\n`\n\nconst NotFound = () => {\n\tconst { t } = useTranslation()\n\n\treturn (\n\t\t<Mobile>\n\t\t\t<Content type={ContainerEnumType.COL}>\n\t\t\t\t<Container type={ContainerEnumType.COL}>\n\t\t\t\t\t<Title>\n\t\t\t\t\t\t<IconNotification name=\"notification\" />\n\t\t\t\t\t\t{t('error.title')}\n\t\t\t\t\t</Title>\n\t\t\t\t\t<Description>{t('error.description')}</Description>\n\t\t\t\t</Container>\n\t\t\t\t<Link to=\"/\">\n\t\t\t\t\t<Item>{t('error.button_one')}</Item>\n\t\t\t\t</Link>\n\t\t\t</Content>\n\t\t</Mobile>\n\t)\n}\n\nexport default NotFound\n","import React, { FC } from 'react'\nimport { Link as LinkR } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { Button } from '../../components'\nimport { Navigation } from '../../layouts'\nimport { useTranslation } from 'react-i18next'\n\nconst List: FC = styled.div`\n\tmax-width: 320px;\n\twidth: 100%;\n\tpadding: 30px 20px;\n`\n\nconst Link = styled(LinkR)`\n\tdisplay: inline-block;\n\twidth: 100%;\n`\n\nconst Item: FC = styled(Button)`\n\tmargin-top: 30px;\n`\n\nconst Home = () => {\n\tconst { t } = useTranslation()\n\n\treturn (\n\t\t<Navigation>\n\t\t\t<List>\n\t\t\t\t<Link to=\"/login\">\n\t\t\t\t\t<Item>{t('home.button_one')}</Item>\n\t\t\t\t</Link>\n\t\t\t\t<Link to=\"/scanning\">\n\t\t\t\t\t<Item>{t('home.button_two')}</Item>\n\t\t\t\t</Link>\n\t\t\t\t<Link to=\"/\">\n\t\t\t\t\t<Item>{t('home.button_three')}</Item>\n\t\t\t\t</Link>\n\t\t\t</List>\n\t\t</Navigation>\n\t)\n}\nexport default Home\n","import React from 'react'\nimport styled from 'styled-components'\nimport {\n\tStatusBar,\n\tContainerEnumType,\n\tContainer,\n\tQrCertificate,\n\tUserInfoBlog,\n\tNotificationBlog,\n\tIcon,\n} from '../../components'\nimport { Mobile } from '../../layouts'\nimport { useTranslation } from 'react-i18next'\n\nconst Content: any = styled(Container)`\n\tmax-width: 320px;\n\ttext-align: center;\n\tpadding: 50px 20px;\n`\n\nconst ImageQRCode: any = styled(QrCertificate)`\n\tdisplay: inline-block;\n\twidth: 100%;\n\tmargin-top: 30px;\n`\n\nconst Title = styled.h2`\n\tposition: relative;\n\tz-index: 2;\n\tpadding: 30px 15px 15px;\n\tfont-size: 18px;\n\tfont-weight: bold;\n\tcolor: ${({ theme }) => theme.color.white};\n`\n\nconst IconStatus = styled(Icon)`\n\theight: 60px;\n\twidth: 60px;\n\n\t&:before {\n\t\tfont-size: 60px;\n\t\theight: 60px;\n\t\twidth: 60px;\n\t}\n`\n\nconst Success = () => {\n\tconst { t } = useTranslation()\n\n\tconst props = {\n\t\tname: 'John Deo',\n\t\tage: 24,\n\t\tcountry: 'Slovakia',\n\t\tpositive: true,\n\t}\n\n\treturn (\n\t\t<Mobile>\n\t\t\t<StatusBar state={props.positive}>\n\t\t\t\t<>\n\t\t\t\t\t<IconStatus name={props.positive ? 'close' : 'check'} />\n\t\t\t\t\t<Title>{props.positive ? t('results.positive.title') : t('results.negative.title')}</Title>\n\t\t\t\t</>\n\t\t\t</StatusBar>\n\t\t\t<Content type={ContainerEnumType.COL}>\n\t\t\t\t<NotificationBlog show={true} />\n\t\t\t\t<ImageQRCode certificateToken={'test'} />\n\t\t\t\t<UserInfoBlog data={props} />\n\t\t\t</Content>\n\t\t</Mobile>\n\t)\n}\n\nexport default Success\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useForm } from 'react-hook-form'\nimport styled from 'styled-components'\nimport { Button as ButtonC, Input as InputC } from '../../components'\nimport { Navigation } from '../../layouts'\nimport { useTranslation } from 'react-i18next'\n\nconst List: any = styled.form`\n\tmax-width: 320px;\n\twidth: 100%;\n\tpadding: 30px 20px;\n`\n\nconst Input: any = styled(InputC)`\n\tmargin-top: 30px;\n`\n\nconst Button: any = styled(ButtonC)`\n\tmargin-top: 60px;\n`\n\ntype FormData = {\n\tverification: string\n}\n\nconst Verification = () => {\n\tconst history = useHistory()\n\tconst { t } = useTranslation()\n\tconst { register, handleSubmit, watch, errors } = useForm<FormData>()\n\tconst onSubmit = data => {\n\t\t// TODO send data to server and add verify for push history\n\t\tconsole.log(data)\n\n\t\tif (!Object.keys(errors).length) {\n\t\t\thistory.push('/results')\n\t\t}\n\t}\n\treturn (\n\t\t<Navigation>\n\t\t\t<List onSubmit={handleSubmit(onSubmit)}>\n\t\t\t\t<Input\n\t\t\t\t\ttype=\"string\"\n\t\t\t\t\tname=\"verification\"\n\t\t\t\t\tregister={register({ required: true })}\n\t\t\t\t\tvalue={watch('verification') || ''}\n\t\t\t\t\tlabel={t('verification.label_one')}\n\t\t\t\t\tplaceholder={t('verification.placeholder_one')}\n\t\t\t\t\terrors={errors.verification && t('verification.error_one')}\n\t\t\t\t\tinfo={t('verification.info_one')}\n\t\t\t\t/>\n\t\t\t\t<Button type=\"submit\">{t('verification.button_one')}</Button>\n\t\t\t</List>\n\t\t</Navigation>\n\t)\n}\nexport default Verification\n","import jwt from 'jsonwebtoken'\n\ninterface Certificate {\n\tname: string\n\tage: string\n\tregion: string\n\tcountry: string\n\tmovementAllowed: boolean\n\tiat: number\n\texp: number\n}\n\ninterface VerifiedCertificate extends Certificate {\n\texpired: boolean\n\tvalidUntil: string\n}\n\n// const verifyJWT = (token): boolean => true\n\nconst parseJWT = token => {\n\tconst data = jwt.decode(token)\n\n\treturn data\n}\n\nconst verifyPass = (token?: string, publickeys?: string[]) => {\n\treturn parseJWT(token)\n}\n\nexport { verifyPass }\n","import React from 'react'\nimport styled from 'styled-components'\n\n// import { Scanner } from '../../components/Scanner/index';\nimport { verifyPass } from '../../services'\nimport { Container, ContainerEnumType, ContainerEnumPosition, QrCertificate } from '../../components'\nimport { Mobile } from '../../layouts'\n// import { useTranslation } from 'react-i18next'\n\nconst Content: any = styled(Container)`\n\tmax-width: 320px;\n\twidth: 100%;\n\tpadding: 30px 20px;\n`\nconst certificate =\n\t'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiSm9obiBEb2UiLCJhZ2UiOiIyOCIsInJlZ2lvbiI6IlBvcHJhZCIsImNvdW50cnkiOiJTbG92YWtpYSIsIm1vdmVtZW50QWxsb3dlZCI6dHJ1ZSwiaWF0IjoxNTg3Njc5NzA4LCJleHAiOjE1ODc3NjYxMDh9.oLzlPFFxzzbxtqV9gtnAJkAg6OYlPKSPxqOeBlWRNug'\n\nconst Scanning = () => {\n\tconst res = JSON.stringify(verifyPass(certificate))\n\treturn (\n\t\t<Mobile>\n\t\t\t<Content type={ContainerEnumType.COL} x={ContainerEnumPosition.TOP}>\n\t\t\t\t<QrCertificate certificateToken={certificate} />\n\t\t\t\t{res}\n\t\t\t</Content>\n\t\t</Mobile>\n\t)\n}\n\nexport default Scanning\n","import React, { FC } from 'react'\nimport styled from 'styled-components'\nimport { useHistory } from 'react-router-dom'\nimport {\n\tButton as ButtonC,\n\tStatusBar,\n\tIcon,\n\tContainerEnumType,\n\tContainerEnumPosition,\n\tContainer,\n} from '../../components'\nimport { Mobile } from '../../layouts'\nimport { useTranslation } from 'react-i18next'\n\nconst Content = styled(Container)`\n\tmax-width: 320px;\n\twidth: 100%;\n\tpadding: 30px 20px;\n`\n\nconst InfoStatusBar: any = styled(StatusBar)`\n\tpadding: 20px;\n\tflex: initial;\n\n\t&:after {\n\t\tdisplay: none;\n\t}\n`\n\nconst Status: any = styled(Container)`\n\tmax-width: 320px;\n\twidth: 100%;\n\tpadding: 0 20px;\n`\n\nconst Label: FC = styled.label`\n\tmax-width: 320px;\n\twidth: 100%;\n\tfont-size: 14px;\n\tcolor: ${({ theme }) => theme.color.black};\n\tfont-size: 14px;\n\tpadding: 25px 20px;\n\tmargin: 0 30px;\n`\n\nconst Title: FC = styled.h3`\n\tcolor: ${({ theme }) => theme.color.white};\n\tfont-size: 24px;\n\tpadding-left: 15px;\n`\n\nconst Date: FC = styled.p`\n\ttext-transform: uppercase;\n\tcolor: ${({ theme }) => theme.color.black};\n\tfont-size: 16px;\n\twidth: 100%;\n`\n\nconst Description: FC = styled.p`\n\tcolor: ${({ theme }) => theme.color.black};\n\tfont-size: 14px;\n\tpadding: 15px 0;\n\tline-height: 20px;\n\topacity: 0.6;\n\ttext-align: left;\n\tborder-bottom: 1px solid ${({ theme }) => theme.color.black};\n`\n\nconst Button: any = styled(ButtonC)`\n\tmargin-top: 60px;\n\twidth: 100%;\n`\nconst Home = () => {\n\tconst history = useHistory()\n\tconst { t } = useTranslation()\n\n\tconst data = {\n\t\tpositive: true,\n\t\tdate: '25. 4. 2020, 13:22:02',\n\t\tfinishQarantineDay: 6,\n\t}\n\n\treturn (\n\t\t<Mobile>\n\t\t\t<Label>{data.positive ? t('my_status.positive.label') : t('my_status.negative.label')}</Label>\n\t\t\t<InfoStatusBar state={data.positive}>\n\t\t\t\t<Status x={ContainerEnumPosition.LEFT}>\n\t\t\t\t\t<Icon name={data.positive ? 'notification' : 'check'} />\n\t\t\t\t\t<Title>{t('my_status.positive.title')}</Title>\n\t\t\t\t</Status>\n\t\t\t</InfoStatusBar>\n\t\t\t<Content type={ContainerEnumType.COL} x={ContainerEnumPosition.TOP}>\n\t\t\t\t<Date>{data.date}</Date>\n\t\t\t\t<Description>\n\t\t\t\t\t{data.positive\n\t\t\t\t\t\t? t('my_status.positive.description')\n\t\t\t\t\t\t: t('my_status.negative.description', { count: data.finishQarantineDay })}\n\t\t\t\t</Description>\n\t\t\t\t<Button onClick={() => history.push('/test-reusults')}>{t('my_status.button_one')}</Button>\n\t\t\t</Content>\n\t\t</Mobile>\n\t)\n}\nexport default Home\n","import React, { FC } from 'react'\nimport styled from 'styled-components'\nimport { ContainerEnumType, ContainerEnumPosition, Container } from '../../components'\nimport { Mobile } from '../../layouts'\nimport { useTranslation } from 'react-i18next'\n\nconst Content: any = styled(Container)`\n\tmax-width: 320px;\n\twidth: 100%;\n\tpadding: 30px 20px;\n`\n\nconst Item: any = styled(Container)`\n\ttext-align: left;\n\tpadding-top: 30px;\n\tflex: initial;\n`\n\nconst Label: FC = styled.label`\n\twidth: 100%;\n\tfont-size: 14px;\n\tcolor: ${({ theme }) => theme.color.black};\n`\n\nconst Date: FC = styled.p`\n\ttext-transform: uppercase;\n\tcolor: ${({ theme }) => theme.color.black};\n\tfont-size: 16px;\n\twidth: 100%;\n`\n\nconst Description: FC = styled.p`\n\tcolor: ${({ theme }) => theme.color.black};\n\tfont-size: 14px;\n\tpadding: 15px 0;\n\tline-height: 20px;\n\topacity: 0.6;\n\ttext-align: left;\n\tborder-bottom: 1px solid ${({ theme }) => theme.color.black};\n`\n\nconst TestReusults = () => {\n\tconst { t } = useTranslation()\n\n\tconst data = [\n\t\t{\n\t\t\tpositive: false,\n\t\t\tdate: '25. 4. 2020, 13:22:02',\n\t\t\tfinishQarantineDay: 4,\n\t\t},\n\t\t{\n\t\t\tpositive: false,\n\t\t\tdate: '28. 2. 2020, 13:22:02',\n\t\t\tfinishQarantineDay: 6,\n\t\t},\n\t]\n\n\treturn (\n\t\t<Mobile>\n\t\t\t<Content type={ContainerEnumType.COL} x={ContainerEnumPosition.TOP}>\n\t\t\t\t<Label>{t('test_results.label')}</Label>\n\t\t\t\t{data &&\n\t\t\t\t\tdata.map(info => (\n\t\t\t\t\t\t<Item type={ContainerEnumType.COL} x={ContainerEnumPosition.TOP}>\n\t\t\t\t\t\t\t<Date>\n\t\t\t\t\t\t\t\t{info.date} - {info.positive ? t('test_results.positive.title') : t('test_results.negative.title')}\n\t\t\t\t\t\t\t</Date>\n\t\t\t\t\t\t\t<Description>\n\t\t\t\t\t\t\t\t{info.positive\n\t\t\t\t\t\t\t\t\t? t('test_results.positive.description')\n\t\t\t\t\t\t\t\t\t: t('test_results.negative.description', { count: info.finishQarantineDay })}\n\t\t\t\t\t\t\t</Description>\n\t\t\t\t\t\t</Item>\n\t\t\t\t\t))}\n\t\t\t</Content>\n\t\t</Mobile>\n\t)\n}\n\nexport default TestReusults\n","import React, { FC } from 'react'\nimport styled from 'styled-components'\nimport { ContainerEnumType, ContainerEnumPosition, Container } from '../../components'\nimport { Mobile } from '../../layouts'\nimport { useTranslation } from 'react-i18next'\n\nconst Content: any = styled(Container)`\n\tmax-width: 320px;\n\twidth: 100%;\n\tpadding: 30px 20px;\n`\n\nconst Item: any = styled(Container)`\n\ttext-align: left;\n\tpadding-top: 30px;\n\tflex: initial;\n`\n\nconst Label: FC = styled.label`\n\twidth: 100%;\n\tfont-size: 14px;\n\tcolor: ${({ theme }) => theme.color.black};\n`\n\nconst Date: FC = styled.p`\n\ttext-transform: uppercase;\n\tcolor: ${({ theme }) => theme.color.black};\n\tfont-size: 16px;\n\twidth: 100%;\n`\n\nconst Description: FC = styled.p`\n\tcolor: ${({ theme }) => theme.color.black};\n\tfont-size: 14px;\n\tpadding: 15px 0;\n\tline-height: 20px;\n\topacity: 0.6;\n\ttext-align: left;\n\tborder-bottom: 1px solid ${({ theme }) => theme.color.black};\n`\n\nconst Notifications = () => {\n\tconst { t } = useTranslation()\n\n\tconst data = [\n\t\t{\n\t\t\tpositive: false,\n\t\t\tdate: '25. 4. 2020, 13:22:02',\n\t\t\tfinishQarantineDay: 4,\n\t\t},\n\t\t{\n\t\t\tpositive: false,\n\t\t\tdate: '28. 2. 2020, 13:22:02',\n\t\t\tfinishQarantineDay: 6,\n\t\t},\n\t]\n\n\treturn (\n\t\t<Mobile>\n\t\t\t<Content type={ContainerEnumType.COL} x={ContainerEnumPosition.TOP}>\n\t\t\t\t<Label>{t('notification.label')}</Label>\n\t\t\t\t{data &&\n\t\t\t\t\tdata.map(info => (\n\t\t\t\t\t\t<Item type={ContainerEnumType.COL} x={ContainerEnumPosition.TOP}>\n\t\t\t\t\t\t\t<Date>\n\t\t\t\t\t\t\t\t{info.date} - {info.positive ? t('notification.positive.title') : t('notification.negative.title')}\n\t\t\t\t\t\t\t</Date>\n\t\t\t\t\t\t\t<Description>\n\t\t\t\t\t\t\t\t{info.positive\n\t\t\t\t\t\t\t\t\t? t('notification.positive.description')\n\t\t\t\t\t\t\t\t\t: t('notification.negative.description', { count: info.finishQarantineDay })}\n\t\t\t\t\t\t\t</Description>\n\t\t\t\t\t\t</Item>\n\t\t\t\t\t))}\n\t\t\t</Content>\n\t\t</Mobile>\n\t)\n}\n\nexport default Notifications\n","//@ts-check\nimport React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Button, Icon, Container } from '../../components'\nimport { ContainerEnumType } from '../../components/Container'\nimport { getListIcons } from '../../components/Icon'\nimport { Mobile } from '../../layouts'\n\nconst List: any = styled(Container)`\n\tmax-width: 320px;\n\tpadding: 30px 20px;\n`\n\nconst Item: any = styled(Container)`\n\tpadding-top: 10px;\n\n\t&:first-child {\n\t\tpadding: 0;\n\t}\n`\n\nconst Title: any = styled.h1`\n\tdisplay: block;\n\tfont-size: 24px;\n\tfont-weight: bold;\n\tpadding: 30px 20px;\n\tcolor: ${({ theme }) => theme.color.purple};\n`\n\nconst IconType: any = styled(Icon)`\n\tposition: absolute;\n\tleft: 10px;\n\ttop: 50%;\n\ttransform: translateY(-50%);\n`\n\nconst ButtonCopy: any = styled(Button)`\n\tposition: relative;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tfont-size: 16px;\n\tpadding: 15px 15px 15px 60px;\n\n\t&:hover {\n\t\t${IconType} {\n\t\t\t&:before {\n\t\t\t\tcolor: ${({ theme }) => theme.color.purple};\n\t\t\t}\n\t\t}\n\t}\n`\n\nconst ListIcons: any = (): any => {\n\tconst [data, setData] = useState([{ properties: { name: '' } }])\n\n\tuseEffect(() => {\n\t\tconst { icons }: any = getListIcons()\n\t\tsetData(icons)\n\t}, [])\n\n\tconsole.log(data)\n\n\treturn (\n\t\t<Mobile type={ContainerEnumType.COL}>\n\t\t\t<Title>Copy your icon by click on one item:</Title>\n\t\t\t<List type={ContainerEnumType.COL}>\n\t\t\t\t{data.map((icon, i): any => {\n\t\t\t\t\tconst name = `${icon.properties.name}`\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Item key={i} type={ContainerEnumType.COL}>\n\t\t\t\t\t\t\t<ButtonCopy variant=\"secondary\" onClick={() => navigator.clipboard.writeText(name)}>\n\t\t\t\t\t\t\t\t<IconType name={name} />\n\t\t\t\t\t\t\t\t{name}\n\t\t\t\t\t\t\t</ButtonCopy>\n\t\t\t\t\t\t</Item>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</List>\n\t\t</Mobile>\n\t)\n}\n\nexport default ListIcons\n","//@ts-check\nimport React from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport { PUBLIC_URL } from '../env'\n\nimport {\n\tLoading,\n\tHome,\n\tScanning,\n\tLogin,\n\tVerification,\n\tResults,\n\tMyStatus,\n\tTestReusults,\n\tNotifications,\n\tNotFound,\n} from '../pages'\nimport { ListIcons } from '../settings'\n\nexport const routes = [\n\t{ visible: true, label: 'Pages' },\n\t{\n\t\tvisible: true,\n\t\tlabel: 'Loading Screen',\n\t\tlink: '/loading',\n\t\tcomponent: Loading,\n\t},\n\t{\n\t\tvisible: true,\n\t\tlabel: 'NotFound',\n\t\tlink: '/notfound',\n\t\tcomponent: NotFound,\n\t},\n\t{\n\t\tvisible: true,\n\t\tlabel: 'Start Screen',\n\t\tlink: '/',\n\t\tcomponent: Loading,\n\t\texact: true,\n\t},\n\t{ visible: true, label: 'Home', link: '/home', component: Home },\n\t{ visible: true, label: 'Login', link: '/login', component: Login },\n\t{\n\t\tvisible: true,\n\t\tlabel: 'Verification',\n\t\tlink: '/verification',\n\t\tcomponent: Verification,\n\t},\n\t{ visible: true, label: 'Results', link: '/results', component: Results },\n\t{ visible: true, label: 'My status', link: '/mystatus', component: MyStatus },\n\t{ visible: true, label: 'Test reusults', link: '/test-reusults', component: TestReusults },\n\t{ visible: true, label: 'Notifications', link: '/notifications', component: Notifications },\n\t{ visible: true, label: 'Scanning', link: '/scanning', component: Scanning },\n\t{ visible: true, label: 'Settings' },\n\t{\n\t\tvisible: true,\n\t\tlabel: 'Icons',\n\t\tlink: '/settings-icon',\n\t\tcomponent: ListIcons,\n\t},\n]\n\nconst Routing: any = (): any => {\n\treturn (\n\t\t<React.Suspense fallback={<Loading />}>\n\t\t\t<BrowserRouter basename={PUBLIC_URL}>\n\t\t\t\t<Switch>\n\t\t\t\t\t{routes.map(\n\t\t\t\t\t\t(route, i) =>\n\t\t\t\t\t\t\troute.link && <Route key={i} path={route.link} exact={route.exact} component={route.component} />\n\t\t\t\t\t)}\n\t\t\t\t</Switch>\n\t\t\t</BrowserRouter>\n\t\t</React.Suspense>\n\t)\n}\n\nexport default Routing\n","//@ts-check\nimport React, { StrictMode } from 'react'\nimport ReactDOM from 'react-dom'\nimport * as serviceWorker from './serviceWorker'\n\nimport Translater from './i18n'\nimport Styler from './styles'\nimport Routing from './routes'\n\nconst Root = () => (\n\t<StrictMode>\n\t\t<Translater>\n\t\t\t<Styler>\n\t\t\t\t<Routing />\n\t\t\t</Styler>\n\t\t</Translater>\n\t</StrictMode>\n)\n\nReactDOM.render(<Root />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}