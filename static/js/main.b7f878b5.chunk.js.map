{"version":3,"sources":["serviceWorker.ts","i18n/index.tsx","env/index.ts","styles/theme/index.ts","styles/index.tsx","components/Icon/index.tsx","components/Button/index.tsx","components/Input/index.tsx","components/Container/index.tsx","components/Logo/index.tsx","components/HamburgerMenu/index.tsx","components/Menu/index.tsx","components/QRCodeScanner/index.tsx","components/BoxShaddow/index.tsx","components/QRCodeGenerator/index.tsx","components/StatusBar/index.tsx","components/OfflineBar/index.tsx","components/TitleMain/index.tsx","components/UserInfoBlog/index.tsx","components/NotificationBlog/index.tsx","pages/Loading/index.tsx","pages/SplashScreen/index.tsx","layouts/Mobile/index.tsx","layouts/Navigation/index.tsx","pages/Login/index.tsx","pages/NotFound/index.tsx","pages/Home/index.tsx","gql/queries.ts","services/index.ts","pages/Results/index.tsx","pages/Verification/index.tsx","pages/Help/index.tsx","pages/Scanning/index.tsx","pages/MyStatus/index.tsx","pages/TestResults/index.tsx","pages/Notifications/index.tsx","pages/VerifyByPhoneNumber/index.tsx","pages/ScanResult/index.tsx","settings/ListIcons/index.tsx","routes/index.tsx","gql/index.tsx","index.tsx"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","i18n","use","Backend","LanguageDetector","initReactI18next","init","react","useSuspense","wait","lng","fallbackLng","whitelist","lowerCaseLng","debug","interpolation","escapeValue","saveMissing","saveMissingTo","backend","loadPath","process","Translater","props","children","theme","mode","env","NODE_ENV","fontFamily","fontSize","color","white","black","lightblack","purple","green","red","blue","GlobalStyle","createGlobalStyle","Styler","Wrapper","styled","i","Icon","name","className","button","hovering","css","Button","hover","ContainerEnumPosition","ContainerEnumType","div","pruple","Title","input","value","length","active","Lable","label","Information","span","valid","Input","React","forwardRef","ref","type","placeholder","info","useState","activeLabel","setActiveLabel","id","onFocus","onBlur","htmlFor","ROW","x","CENTER","y","Container","IconShield","h1","Logo","t","useTranslation","COL","List","ul","Item","li","Split","Link","LinkR","p","HamburgerMenu","initialState","setState","onClick","visibleMenu","routes","map","route","split","key","visible","link","to","Menu","QRCodeScanner","delay","onScan","onError","style","width","BoxShaddow","QrCodeProps","renderAs","level","size","QRCodeGenerator","certificateToken","StatusBar","OfflineBar","isOnline","seTisOnline","useEffect","setTimeout","onLine","h2","TitleMain","TitleName","h4","Label","Text","LEFT","data","age","region","country","IconNotification","h3","Description","NotificationBlog","show","RIGHT","ContainerC","LogoC","Loader","Laoding","Mobile","TOP","Heading","IconArrow","Navigation","useLocation","includes","pathname","form","InputC","ButtonC","Login","history","useHistory","useForm","handleSubmit","watch","errors","onSubmit","Object","keys","push","required","citizen","pattern","phone","Content","NotFound","ButtonLink","Home","QUERY_RESULTS","gql","QUERY_MYSTATUS","QUERY_TESTRESULTS","QUERY_NOTIFICATION","verifyPass","token","publickeys","jwt","decode","parseJWT","formatDate","date","format","Date","ImageQRCode","IconStatus","ButtonPrint","Results","useQuery","loading","print","Loading","userData","certificate","status","movementAllowed","UserInfoBlog","Verification","verification","Help","Info","Scanning","scan","setScan","setData","conditionisNegative","res","InfoStatusBar","Status","reason","testResults","test_results","title","published","message","toUpperCase","DateFC","TestReusults","item","Notifications","notifications","VerifyByPhoneNumber","ScanResult","IconType","ButtonCopy","component","exact","MyStatus","TestResults","properties","icons","require","icon","variant","clipboard","writeText","Routing","basename","path","client","ApolloClient","uri","Apollo","Root","ReactDOM","render","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b7f878b5.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","//@ts-check\nimport React, { FC } from 'react'\nimport i18n from 'i18next'\nimport Backend from 'i18next-xhr-backend'\nimport LanguageDetector from 'i18next-browser-languagedetector'\nimport { initReactI18next, I18nextProvider } from 'react-i18next'\nimport { PUBLIC_URL } from '../env'\n\ni18n\n\t// learn more: https://github.com/i18next/i18next-xhr-backend\n\t.use(Backend)\n\t// detect user language\n\t// learn more: https://github.com/i18next/i18next-browser-languageDetector\n\t.use(LanguageDetector)\n\t// pass the i18n instance to react-i18next.\n\t.use(initReactI18next)\n\t// init i18next\n\t// for all options read: https://www.i18next.com/overview/configuration-options\n\t.init({\n\t\t// special options for react-i18next\n\t\t// learn more: https://react.i18next.com/components/i18next-instance\n\t\treact: {\n\t\t\tuseSuspense: false,\n\t\t\twait: true,\n\t\t},\n\t\tlng: 'en',\n\t\tfallbackLng: 'en',\n\t\twhitelist: ['en', 'sk'],\n\t\tlowerCaseLng: true,\n\t\tdebug: false,\n\t\tinterpolation: {\n\t\t\tescapeValue: false, // not needed for react as it escapes by default\n\t\t},\n\t\tsaveMissing: true,\n\t\tsaveMissingTo: 'all',\n\t\tbackend: {\n\t\t\tloadPath: `${PUBLIC_URL}/locales/{{lng}}/translations.json`,\n\t\t},\n\t})\n\nconst Translater: FC = (props: { children?: React.ReactNode }): JSX.Element => {\n\treturn <I18nextProvider i18n={i18n}>{props.children}</I18nextProvider>\n}\n\nexport default Translater\n","export const PUBLIC_URL = process.env.PUBLIC_URL\nexport const SHOW_DEV_LINKS = false\n","//@ts-check\nimport process from 'process'\n\nlet theme = {\n\tmode: process.env.NODE_ENV,\n\tfontFamily: 'Arial, Helvetica, sans-serif',\n\tfontSize: '16px',\n\tcolor: {\n\t\twhite: '#fff',\n\t\tblack: '#000',\n\t\tlightblack: '#2A2C2E',\n\t\tpurple: '#6202EE',\n\t\tgreen: '#5CB85C',\n\t\tred: '#D9534F',\n\t\tblue: '#0275D8',\n\t},\n}\n\nexport type ThemeI = typeof theme\nexport default theme\n","//@ts-check\nimport React, { FC } from 'react'\nimport './reset.css'\n\nimport { ThemeProvider, createGlobalStyle } from 'styled-components'\nimport theme, { ThemeI } from './theme'\n\nconst GlobalStyle = createGlobalStyle<{ theme: ThemeI }>`\n  html, body, #root {\n\t\tfont-family: ${({ theme }) => theme.fontFamily};\n\t\tfont-size: ${({ theme }) => theme.fontSize};\n\t\theight: 100%;\n\t}\n\n\t#root {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t}\n\t\n\t* {\n\t\toutline: 0;\n\t\tbox-sizing: border-box;\n\t}\n\n\ta {\n\t\t&:active {\n\t\t\ttext-decoration: none;\n\t\t}\n\t}\n\n\t@media print {\n\t\t.media-print {\n\t\t\tdisplay: none;\n\t\t}\n\t}\n`\n\nconst Styler: FC = (props): JSX.Element => (\n\t<ThemeProvider theme={theme}>\n\t\t<GlobalStyle />\n\t\t{props.children}\n\t</ThemeProvider>\n)\n\nexport default Styler\n","//@ts-check\nimport React from 'react'\nimport styled from 'styled-components'\n\n// STYLES FROM ICOMOON\nimport './style.css'\n\nconst Wrapper = styled.i`\n\tdisplay: inline-block;\n\tposition: relative;\n\tz-index: 1;\n\twidth: 30px;\n\theight: 30px;\n\n\t&:before {\n\t\tcolor: ${({ theme }) => theme.color.white};\n\t\tfont-size: 22px;\n\t\twidth: 20px;\n\t\theight: 20px;\n\t\tposition: absolute;\n\t\ttop: 50%;\n\t\tleft: 50%;\n\t\tbottom: 0;\n\t\tright: 0;\n\t\ttransform: translate(-50%, -50%);\n\t}\n`\n\nconst Icon: any = ({ name, className }): any => <Wrapper className={`icon icon-${name} ${className} rotate`} />\n\nexport default Icon\nexport const getListIcons = () => require('./selection.json')\n","//@ts-check\nimport React from 'react'\nimport styled, { css } from 'styled-components'\n\nconst Wrapper: any = styled.button<{ hovering: boolean }>`\n\tdisplay: inline-block;\n\ttext-transform: uppercase;\n\tcursor: pointer;\n\tmax-width: 280px;\n\twidth: 100%;\n\tpadding: 15px 20px;\n\ttext-align: center;\n\tbackground-color: ${({ theme }) => theme.color.purple};\n\tcolor: ${({ theme }) => theme.color.white};\n\tborder: 2px solid ${({ theme }) => theme.color.purple};\n\tborder-radius: 18px;\n\tbox-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n\ttext-align: center;\n\n\t${({ hovering }) =>\n\t\thovering &&\n\t\tcss`\n\t\t\t&:hover {\n\t\t\t\tbackground-color: ${({ theme }) => theme.color.white};\n\t\t\t\tcolor: ${({ theme }) => theme.color.purple};\n\t\t\t}\n\n\t\t\t&:focus {\n\t\t\t\toutline: 0;\n\t\t\t}\n\t\t`}\n`\n\nconst Button = props => {\n\treturn (\n\t\t<Wrapper {...props} hovering={props.hover || true}>\n\t\t\t{props.children}\n\t\t</Wrapper>\n\t)\n}\nexport default Button\n","//@ts-check\nimport React, { useState } from 'react'\nimport styled, { css } from 'styled-components'\n\nconst Wrapper = styled.div`\n\tposition: relative;\n\tcolor: ${({ theme }) => theme.color.pruple};\n\twidth: 100%;\n\theight: 50px;\n`\n\nconst Title: any = styled.input<{ active: boolean; value: string }>`\n\tposition: absolute;\n\toverflow: hidden;\n\tz-index: 1;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n\twidth: 100%;\n\tpadding: 15px 25px;\n\tfont-size: 16px;\n\tbackground-color: ${({ theme }) => theme.color.white};\n\tcolor: ${({ theme }) => theme.color.black};\n\tborder: 1px solid rgba(0, 0, 0, 0.5);\n\tborder-radius: 4px;\n\ttransition: all 0.2s;\n\n\t::placeholder {\n\t\tcolor: rgba(0, 0, 0, 0.5);\n\t\topacity: ${({ value }) => value && !!value.length && 0};\n\t\topacity: ${({ active }) => !active && 0};\n\t}\n\n\t${({ active }) =>\n\t\tactive &&\n\t\tcss`\n\t\t\tborder-color: ${({ theme }) => theme.color.purple};\n\t\t\toutline: 0;\n\t\t\tborder-width: 2px;\n\t\t`}\n\n\t&:focus {\n\t\toutline: 0;\n\t}\n\n\t&:hover {\n\t\tborder-color: ${({ theme }) => theme.color.pruple};\n\t}\n`\n\nconst Lable: any = styled.label<{ active: boolean }>`\n\tcolor: ${({ theme }) => theme.color.pruple};\n\tposition: absolute;\n\tz-index: 3;\n\tbackground-color: ${({ theme }) => theme.color.white};\n\ttop: 50%;\n\tleft: 15px;\n\tpadding: 5px;\n\ttext-align: left;\n\tcolor: rgba(0, 0, 0, 0.5);\n\ttransform: translateY(-50%);\n\ttransition: all 0.2s;\n\n\t${({ active }) =>\n\t\tactive &&\n\t\tcss`\n\t\t\twidth: auto;\n\t\t\tcolor: ${({ theme }) => theme.color.purple};\n\t\t\ttransform: translate(-5px, -33px) scale(0.8);\n\t\t\tpadding: 0 5px;\n\t\t`}\n`\n\nconst Information: any = styled.span<{ valid: boolean }>`\n\tdisplay: block;\n\twidth: 100%;\n\ttext-align: left;\n\tcolor: ${({ theme }) => theme.color.purple};\n\tpadding: 5px 15px 0;\n\tfont-size: 12px;\n\n\t${({ valid }) =>\n\t\tvalid &&\n\t\tcss`\n\t\t\tcolor: ${({ theme }) => theme.color.red};\n\t\t`}\n`\n\ntype InputProps = {\n\tclassName: string\n\ttype: string\n\tname?: string\n\tregister?: string\n\tvalue?: string\n\tplaceholder?: string\n\terror?: string\n\tinfo?: string\n\tlabel?: string\n}\n\nconst Input: any = React.forwardRef(\n\t({ className, type, name, register, value, placeholder, error, info, label }: InputProps, ref) => {\n\t\tconst [activeLabel, setActiveLabel] = useState(false)\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Wrapper className={className}>\n\t\t\t\t\t<Title\n\t\t\t\t\t\ttype={type}\n\t\t\t\t\t\tname={name}\n\t\t\t\t\t\tref={register}\n\t\t\t\t\t\tactive={activeLabel || (value && !!value.length)}\n\t\t\t\t\t\tid={name}\n\t\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\t\tonFocus={() => setActiveLabel(true)}\n\t\t\t\t\t\tonBlur={() => setActiveLabel(false)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Lable active={activeLabel || (value && !!value.length)} htmlFor={name}>\n\t\t\t\t\t\t{label}\n\t\t\t\t\t</Lable>\n\t\t\t\t</Wrapper>\n\t\t\t\t<Information valid={error}>{error ? error : info}</Information>\n\t\t\t</>\n\t\t)\n\t}\n)\n\nexport default Input\n","//@ts-check\nimport React, { FC } from 'react'\nimport styled from 'styled-components'\n\nenum ContainerEnumPosition {\n\tLEFT = 'flex-start',\n\tRIGHT = 'flex-end',\n\tTOP = 'flex-start',\n\tBOTTOM = 'flex-end',\n\tCENTER = 'center',\n}\n\nenum ContainerEnumType {\n\tROW = 'row',\n\tCOL = 'column',\n}\n\nexport type ContainerProps = {\n\tclassName?: string\n\ttype?: ContainerEnumType\n\tx?: ContainerEnumPosition\n\ty?: ContainerEnumPosition\n}\n\nconst Wrapper = styled.div<ContainerProps>`\n\tposition: relative;\n\tdisplay: flex;\n\tflex-direction: ${({ type }): string => type || ContainerEnumType.ROW};\n\tjustify-content: ${({ x }): string => x || ContainerEnumPosition.CENTER};\n\talign-items: ${({ y }): string => y || ContainerEnumPosition.CENTER};\n\tflex: 1;\n\twidth: 100%;\n`\n\nconst Container: FC<ContainerProps> = ({ children, className, type, x, y }): any => (\n\t<Wrapper className={className} type={type} x={x} y={y}>\n\t\t{children}\n\t</Wrapper>\n)\n\nexport { ContainerEnumPosition, ContainerEnumType }\nexport default Container\n","//@ts-check\nimport React from 'react'\nimport styled from 'styled-components'\nimport Icon from '../Icon'\nimport { useTranslation } from 'react-i18next'\nimport Container, { ContainerEnumType } from '../Container'\n\nconst Wrapper: any = styled(Container)`\n\tpadding-top: 30px;\n`\n\nconst IconShield = styled(Icon)`\n\theight: 100px;\n\twidth: 100px;\n\n\t&:before {\n\t\tfont-size: 100px;\n\t\theight: 100px;\n\t\twidth: 100px;\n\t}\n`\n\nconst Title = styled.h1`\n\ttext-transform: uppercase;\n\tcolor: ${({ theme }) => theme.color.white};\n\tmargin-top: 30px;\n\tfont-size: 24px;\n\tpadding: 0 10px;\n\tposition: relative;\n\tz-index: 2;\n`\nconst Logo: any = props => {\n\tconst { t } = useTranslation()\n\n\treturn (\n\t\t<Wrapper className={props.className} type={props.type || ContainerEnumType.COL}>\n\t\t\t<IconShield name=\"shield\" />\n\t\t\t<Title>{t('logo.title')}</Title>\n\t\t\t{props.children}\n\t\t</Wrapper>\n\t)\n}\n\nexport default Logo\n","//@ts-check\nimport React, { useState } from 'react'\nimport styled, { css } from 'styled-components'\nimport { Link as LinkR } from 'react-router-dom'\nimport Icon from '../Icon'\nimport { routes } from '../../routes'\n\nconst Wrapper: any = styled.div`\n\tbackground-color: ${({ theme }) => theme.color.purple};\n\tcursor: pointer;\n\tuser-select: none;\n\twidth: 30px;\n\theight: 30px;\n`\n\nconst List: any = styled.ul<{ active: boolean }>`\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: stretch;\n\talign-items: stretch;\n\tbackground-color: ${({ theme }) => theme.color.purple};\n\tposition: absolute;\n\ttext-transform: capitalize;\n\tleft: 0;\n\ttop: 100%;\n\tmax-width: 320px;\n\twidth: 100%;\n\ttransform: translateX(-100%);\n\ttransition: all 0.5s;\n\topacity: 0;\n\tz-index: 1;\n\theight: 100vh;\n\toverflow: auto;\n\n\t${({ active }) =>\n\t\tactive &&\n\t\tcss`\n\t\t\topacity: 1;\n\t\t\ttransform: translateX(0);\n\t\t`}\n`\n\nconst Item = styled.li`\n\tpadding: 1px 0;\n`\n\nconst Split = styled.li`\n\tflex: 1;\n`\n\nconst Link = styled(LinkR)`\n\tposition: relative;\n\tz-index: 3;\n\tcolor: ${({ theme }) => theme.color.white};\n\tdisplay: block;\n\tpadding: 15px 10px;\n\tfont-size: 18px;\n\ttext-decoration: none;\n\n\t&:hover {\n\t\ttext-decoration: underline;\n\t}\n`\n\nconst Title = styled.p`\n\tposition: relative;\n\tz-index: 3;\n\tfont-weight: bold;\n\tcolor: ${({ theme }) => theme.color.white};\n\tborder: 1px solid ${({ theme }) => theme.color.white};\n\tborder-width: 1px 0 0;\n\tpadding: 15px 10px;\n\tfont-size: 18px;\n`\n\nconst HamburgerMenu: any = props => {\n\tconst [state, setState] = useState(props.initialState || false)\n\n\treturn (\n\t\t<Wrapper active={state} className={props.className} hovering={props.hovering} onClick={() => setState(!state)}>\n\t\t\t<Icon name={props.visibleMenu ? 'bars' : 'arrow'} />\n\t\t\t<List active={state}>\n\t\t\t\t{routes.map((route, i) =>\n\t\t\t\t\troute.split ? (\n\t\t\t\t\t\t<Split key={i} />\n\t\t\t\t\t) : (\n\t\t\t\t\t\troute.visible && (\n\t\t\t\t\t\t\t<Item key={i}>\n\t\t\t\t\t\t\t\t{route.link ? <Link to={route.link}>{route.label}</Link> : <Title>{route.label}</Title>}\n\t\t\t\t\t\t\t</Item>\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t)}\n\t\t\t</List>\n\t\t</Wrapper>\n\t)\n}\n\nexport default HamburgerMenu\n","//@ts-check\nimport React from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport Icon from '../Icon'\nimport HamburgerMenu from '../HamburgerMenu'\nimport Container from '../Container'\nimport { useTranslation } from 'react-i18next'\n\nconst Wrapper = styled(Container)`\n\tz-index: 1000;\n\tjustify-content: space-between;\n\tbackground-color: ${({ theme }) => theme.color.purple};\n\tpadding: 20px;\n\tflex: initial;\n`\n\nconst Title = styled.h1`\n\tposition: relative;\n\tz-index: 2;\n\ttext-transform: uppercase;\n\tcolor: ${({ theme }) => theme.color.white};\n\tfont-size: 18px;\n\tpadding: 0 10px;\n`\n\nconst Menu = props => {\n\tconst { t } = useTranslation()\n\n\treturn (\n\t\t<Wrapper className={props.className}>\n\t\t\t<HamburgerMenu visibleMenu={props.visibleMenu || true} />\n\t\t\t<Container>\n\t\t\t\t<Link to=\"/\">\n\t\t\t\t\t<Container>\n\t\t\t\t\t\t<Icon name=\"shield\" />\n\t\t\t\t\t\t<Title>{t('logo.title')}</Title>\n\t\t\t\t\t</Container>\n\t\t\t\t</Link>\n\t\t\t</Container>\n\t\t\t<Link to=\"/notifications\">\n\t\t\t\t<Icon name=\"bell\" />\n\t\t\t</Link>\n\t\t</Wrapper>\n\t)\n}\nexport default Menu\n","//@ts-check\nimport React from 'react'\nimport QrReader from 'react-qr-reader'\n\nconst QRCodeScanner = props => (\n\t<QrReader\n\t\tclassName={props.className}\n\t\tdelay={300}\n\t\tonScan={props.onScan}\n\t\tonError={props.onError}\n\t\tstyle={{ width: '100%' }}\n\t/>\n)\n\nexport default QRCodeScanner\n","//@ts-check\nimport React from 'react'\nimport styled from 'styled-components'\nimport Container from '../Container'\n\nconst Wrapper: any = styled(Container)`\n\tbox-shadow: rgba(0, 0, 0, 0.2) 0px 3px 3px -2px, rgba(0, 0, 0, 0.14) 0px 3px 4px 0px,\n\t\trgba(0, 0, 0, 0.12) 0px 1px 8px 0px;\n\tpadding: 30px;\n\tflex: initial;\n`\n\nconst BoxShaddow: any = ({ className, children }) => {\n\treturn <Wrapper className={className}>{children}</Wrapper>\n}\nexport default BoxShaddow\n","//@ts-check\nimport React from 'react'\nimport QRCode from 'qrcode.react'\n\nconst QrCodeProps = {\n\trenderAs: 'svg',\n\tlevel: 'M',\n\tsize: 256,\n}\nexport interface QRCodeGeneratorProps {\n\tcertificateToken: string\n\tclassName?: string\n}\n\nconst QRCodeGenerator = (props: QRCodeGeneratorProps) => (\n\t<QRCode className={props.className} value={props.certificateToken} {...QrCodeProps} />\n)\n\nexport default QRCodeGenerator\n","//@ts-check\nimport React from 'react'\nimport styled, { css } from 'styled-components'\nimport Container, { ContainerEnumType } from '../Container'\n\nconst Wrapper = styled(Container)<{ state: boolean }>`\n\tpadding-top: 30px;\n\tflex: initial;\n\n\t&:after {\n\t\tposition: absolute;\n\t\tcontent: '';\n\t\tborder-radius: 50%;\n\t\theight: 50px;\n\t\tbottom: -25px;\n\t\tleft: 0;\n\t\tright: 0;\n\t\twidth: 100%;\n\t\tz-index: 0;\n\t}\n\n\t${({ state }) =>\n\t\tstate\n\t\t\t? css`\n\t\t\t\t\tbackground-color: ${({ theme }) => theme.color.red};\n\t\t\t\t\t&:after {\n\t\t\t\t\t\tbackground-color: ${({ theme }) => theme.color.red};\n\t\t\t\t\t}\n\t\t\t  `\n\t\t\t: css`\n\t\t\t\t\tbackground-color: ${({ theme }) => theme.color.green};\n\t\t\t\t\t&:after {\n\t\t\t\t\t\tbackground-color: ${({ theme }) => theme.color.green};\n\t\t\t\t\t}\n\t\t\t  `}\n`\n\nconst StatusBar: any = props => (\n\t<Wrapper className={props.className} state={props.state} type={props.type || ContainerEnumType.COL}>\n\t\t{props.children}\n\t</Wrapper>\n)\n\nexport default StatusBar\n","//@ts-check\nimport React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport Container from '../Container'\nimport { useTranslation } from 'react-i18next'\n\nconst Wrapper: any = styled(Container)`\n\tbackground-color: ${({ theme }) => theme.color.lightblack};\n\tflex: initial;\n\tpadding: 20px;\n\tcolor: ${({ theme }) => theme.color.white};\n\tfont-size: 16px;\n`\n\nconst OfflineBar: any = ({ className }) => {\n\tconst [isOnline, seTisOnline] = useState(true)\n\tconst { t } = useTranslation()\n\n\tuseEffect(() => {\n\t\tsetTimeout(() => {\n\t\t\t!navigator.onLine && seTisOnline(navigator.onLine)\n\t\t}, 1000)\n\t}, [isOnline])\n\n\t// TODO get time and show this bar when I am offline\n\n\treturn !isOnline && <Wrapper className={className}>{t('offline.title')}</Wrapper>\n}\nexport default OfflineBar\n","//@ts-check\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst Title = styled.h2`\n\tmax-width: 320px;\n\tpadding: 0 20px;\n\twidth: 100%;\n\ttext-align: left;\n\tcolor: ${({ theme }) => theme.color.black};\n\tfont-size: 14px;\n`\n\nconst TitleMain: any = ({ className, children }) => {\n\treturn <Title className={className}>{children}</Title>\n}\nexport default TitleMain\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'react-i18next'\nimport Container, { ContainerEnumType, ContainerEnumPosition } from '../Container'\n\nconst Wrapper = styled(Container)`\n\tfont-size: 14px;\n\tmargin-top: 30px;\n\tflex: initial;\n`\n\nconst TitleName = styled.h4`\n\tfont-size: 24px;\n\tfont-weight: bold;\n`\n\nconst Label = styled.label`\n\ttext-transform: uppercase;\n\tfont-size: 14px;\n\topacity: 0.6;\n\tmargin: 20px 0 5px;\n`\n\n//@ts-check\nconst Text = styled.p`\n\tfont-weight: bold;\n\tfont-size: 18px;\n`\n\nconst Logo: any = props => {\n\tconst { t } = useTranslation()\n\n\treturn (\n\t\t<Wrapper className={props.className} type={ContainerEnumType.COL} y={ContainerEnumPosition.LEFT}>\n\t\t\t<Label>{t('results.info.label_one')}</Label>\n\t\t\t<TitleName>{props.data.name}</TitleName>\n\t\t\t<Label>{t('results.info.label_two')}</Label>\n\t\t\t<Text>{props.data.age}</Text>\n\t\t\t<Label>{t('results.info.label_three')}</Label>\n\t\t\t<Text>{props.data.region}</Text>\n\t\t\t<Label>{t('results.info.label_four')}</Label>\n\t\t\t<Text>{props.data.country}</Text>\n\t\t</Wrapper>\n\t)\n}\n\nexport default Logo\n","//@ts-check\nimport React from 'react'\nimport { Link as LinkR } from 'react-router-dom'\nimport styled from 'styled-components'\nimport Container, { ContainerEnumPosition, ContainerEnumType } from '../Container'\nimport BoxShaddow from '../BoxShaddow'\nimport Icon from '../Icon'\nimport { useTranslation } from 'react-i18next'\n\nconst Wrapper: any = styled(BoxShaddow)`\n\tdisplay: inline-block;\n\tpadding: 25px;\n`\n\nconst IconNotification = styled(Icon)`\n\t&:before {\n\t\tcolor: ${({ theme }) => theme.color.red};\n\t}\n`\n\nconst Title = styled.h3`\n\tcolor: ${({ theme }) => theme.color.red};\n\tfont-size: 24px;\n\tmargin-left: 30px;\n`\n\nconst Description = styled.p`\n\ttext-align: left;\n\tfont-size: 16px;\n\tpadding-top: 20px;\n\tline-height: 24px;\n`\n\nconst Link = styled(LinkR)`\n\tdisplay: inline-block;\n\ttext-transform: uppercase;\n\tfont-weight: bold;\n\tcolor: ${({ theme }) => theme.color.purple};\n\tfont-size: 14px;\n\ttext-decoration: none;\n\tmargin-top: 30px;\n\n\t&:hover {\n\t\ttext-decoration: underline;\n\t}\n`\n\nconst NotificationBlog: any = ({ show, className }) => {\n\tconst { t } = useTranslation()\n\n\treturn (\n\t\tshow && (\n\t\t\t<Wrapper className={className} type={ContainerEnumType.COL}>\n\t\t\t\t<Container x={ContainerEnumPosition.LEFT}>\n\t\t\t\t\t<IconNotification name=\"notification\" />\n\t\t\t\t\t<Title>{t('results.positive.notification.title')}</Title>\n\t\t\t\t</Container>\n\t\t\t\t<Description>{t('results.positive.notification.description')}</Description>\n\t\t\t\t<Container x={ContainerEnumPosition.RIGHT}>\n\t\t\t\t\t<Link to=\"/mystatus\">{t('results.positive.notification.link')}</Link>\n\t\t\t\t</Container>\n\t\t\t</Wrapper>\n\t\t)\n\t)\n}\nexport default NotificationBlog\n","//@ts-check\nimport React, { FC } from 'react'\nimport styled from 'styled-components'\nimport { Icon, Logo as LogoC, Container as ContainerC } from '../../components'\n\nconst Wrapper: FC = styled(ContainerC)`\n\tbackground-color: ${({ theme }) => theme.color.purple};\n\twidth: 100%;\n`\n\nconst Logo: FC = styled(LogoC)`\n\tposition: relative;\n\tpadding: 120px 0;\n`\n\nconst Loader = styled(Icon)<{ show: boolean }>`\n\tposition: absolute;\n\tbottom: 0;\n\twidth: 60px;\n\theight: 60px;\n\tanimation: spin 4s linear infinite;\n\n\t@keyframes spin {\n\t\t100% {\n\t\t\ttransform: rotate(360deg);\n\t\t}\n\t}\n\n\t&:before {\n\t\tfont-size: 60px;\n\t\twidth: 60px;\n\t\theight: 60px;\n\t}\n`\n\nconst Laoding = () => {\n\treturn (\n\t\t<Wrapper>\n\t\t\t<Logo>\n\t\t\t\t<Loader name=\"sync-alt-solid\" />\n\t\t\t</Logo>\n\t\t</Wrapper>\n\t)\n}\n\nexport default Laoding\n","//@ts-check\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Logo, Container, ContainerEnumType } from '../../components'\n\nconst Wrapper: any = styled(Container)`\n\tbackground-color: ${({ theme }) => theme.color.purple};\n`\n\nconst Home: any = (): JSX.Element => {\n\treturn (\n\t\t<Wrapper type={ContainerEnumType.COL}>\n\t\t\t<Logo />\n\t\t</Wrapper>\n\t)\n}\n\nexport default Home\n","//@ts-check\nimport React from 'react'\nimport { Container, ContainerEnumType, ContainerEnumPosition, Menu, OfflineBar } from '../../components'\n\nconst Mobile: any = ({ className, x, y, children }) => (\n\t<Container\n\t\tclassName={className}\n\t\ttype={ContainerEnumType.COL}\n\t\ty={y || ContainerEnumPosition.TOP}\n\t\tx={x || ContainerEnumPosition.LEFT}>\n\t\t<Menu className={'media-print'} />\n\t\t<OfflineBar className={'media-print'} />\n\t\t<Container type={ContainerEnumType.COL}>{children}</Container>\n\t</Container>\n)\n\nexport default Mobile\n","import React from 'react'\nimport { Link as LinkR, useLocation } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { Logo, Container, ContainerEnumType, Icon, OfflineBar } from '../../components'\n\nconst Wrapper = styled(Container)`\n\tpadding-bottom: 30px;\n`\n\nconst Heading = styled(Logo)`\n\tbackground-color: ${({ theme }) => theme.color.purple};\n\tposition: relative;\n\tz-index: 1;\n\tflex: initial;\n\tpadding-bottom: 30px;\n\n\t&:after {\n\t\tbox-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n\t\tposition: absolute;\n\t\tcontent: '';\n\t\tbackground: ${({ theme }) => theme.color.purple};\n\t\tborder-radius: 50%;\n\t\theight: 50px;\n\t\tbottom: -25px;\n\t\tleft: 0;\n\t\tright: 0;\n\t\twidth: 100%;\n\t\tz-index: 0;\n\t}\n`\n\nconst Link = styled(LinkR)`\n\tposition: absolute;\n\tleft: 15px;\n\ttop: 15px;\n\n\t&:hover {\n\t\tbackground-color: ${({ theme }) => theme.color.purple};\n\t}\n`\n\nconst IconArrow = styled(Icon)`\n\theight: 100%;\n`\n\nconst Navigation: any = props => {\n\tconst location = useLocation()\n\n\treturn (\n\t\t<Wrapper className={props.className} type={ContainerEnumType.COL}>\n\t\t\t<OfflineBar />\n\t\t\t<Heading>\n\t\t\t\t{!['/home', '/'].includes(location.pathname) && (\n\t\t\t\t\t<Link to=\"/\">\n\t\t\t\t\t\t<IconArrow name=\"arrow\" />\n\t\t\t\t\t</Link>\n\t\t\t\t)}\n\t\t\t</Heading>\n\t\t\t<Container type={ContainerEnumType.COL}>{props.children}</Container>\n\t\t</Wrapper>\n\t)\n}\n\nexport default Navigation\n","//@ts-check\nimport React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useForm } from 'react-hook-form'\nimport styled from 'styled-components'\nimport { Button as ButtonC, Input as InputC, TitleMain } from '../../components'\nimport { Navigation } from '../../layouts'\nimport { useTranslation } from 'react-i18next'\n\nconst List: any = styled.form`\n\tmax-width: 320px;\n\twidth: 100%;\n\tpadding: 30px 20px;\n`\n\nconst Input: any = styled(InputC)`\n\tmargin-top: 30px;\n`\n\nconst Button: any = styled(ButtonC)`\n\tmargin-top: 30px;\n`\n\ntype FormData = {\n\tcitizen: string\n\tphone: number\n}\n\nconst Login = () => {\n\tconst history = useHistory()\n\tconst { t } = useTranslation()\n\tconst { register, handleSubmit, watch, errors } = useForm<FormData>()\n\tconst onSubmit = data => {\n\t\t// TODO send data to server and add verify for push history\n\t\tconsole.log(data)\n\n\t\tif (!Object.keys(errors).length) {\n\t\t\thistory.push('/verification')\n\t\t}\n\t}\n\n\treturn (\n\t\t<Navigation>\n\t\t\t<TitleMain>{t('login.titleMain')}</TitleMain>\n\t\t\t<List onSubmit={handleSubmit(onSubmit)}>\n\t\t\t\t<Input\n\t\t\t\t\ttype=\"string\"\n\t\t\t\t\tname=\"citizen\"\n\t\t\t\t\tregister={register({ required: true })}\n\t\t\t\t\tvalue={watch('citizen')}\n\t\t\t\t\tlabel={t('login.label_one')}\n\t\t\t\t\tplaceholder={t('login.placeholder_one')}\n\t\t\t\t\terror={errors.citizen && t('login.error_one')}\n\t\t\t\t\tinfo={t('login.info_one')}\n\t\t\t\t/>\n\t\t\t\t<Input\n\t\t\t\t\ttype=\"tel\"\n\t\t\t\t\tname=\"phone\"\n\t\t\t\t\tregister={register({\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\tpattern: /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/im,\n\t\t\t\t\t})}\n\t\t\t\t\tvalue={watch('phone')}\n\t\t\t\t\tlabel={t('login.label_two')}\n\t\t\t\t\tplaceholder={t('login.placeholder_two')}\n\t\t\t\t\terror={errors.phone && t('login.error_two')}\n\t\t\t\t\tinfo={t('login.info_two')}\n\t\t\t\t/>\n\t\t\t\t<Button type=\"submit\">{t('login.button_one')}</Button>\n\t\t\t</List>\n\t\t</Navigation>\n\t)\n}\nexport default Login\n","//@ts-check\nimport React from 'react'\nimport { Link as LinkR } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { Container, Button, Icon, ContainerEnumType } from '../../components'\nimport { Mobile } from '../../layouts'\nimport { useTranslation } from 'react-i18next'\n\nconst Content = styled(Container)`\n\tmax-width: 320px;\n\ttext-align: center;\n\twidth: 100%;\n\tpadding: 30px 20px;\n`\n\nconst IconNotification = styled(Icon)`\n\tposition: absolute;\n\tleft: 0;\n\ttop: 50%;\n\ttransform: translateY(-50%);\n\n\t&:before {\n\t\tcolor: ${({ theme }) => theme.color.red};\n\t}\n`\n\nconst Title = styled.h1`\n\tposition: relative;\n\tpadding-left: 50px;\n\twidth: 100%;\n\ttext-align: left;\n\tfont-size: 14px;\n\tfont-weight: bold;\n\tcolor: ${({ theme }) => theme.color.red};\n`\n\nconst Description = styled.p`\n\twidth: 100%;\n\ttext-align: left;\n\tmargin-top: 60px;\n\tfont-size: 14px;\n\tfont-weight: bold;\n\tcolor: ${({ theme }) => theme.color.red};\n`\n\nconst Link = styled(LinkR)`\n\tdisplay: inline-block;\n\twidth: 100%;\n`\n\nconst Item: any = styled(Button)`\n\tmargin-top: 30px;\n`\n\nconst NotFound = () => {\n\tconst { t } = useTranslation()\n\n\treturn (\n\t\t<Mobile>\n\t\t\t<Content type={ContainerEnumType.COL}>\n\t\t\t\t<Container type={ContainerEnumType.COL}>\n\t\t\t\t\t<Title>\n\t\t\t\t\t\t<IconNotification name=\"notification\" />\n\t\t\t\t\t\t{t('error.title')}\n\t\t\t\t\t</Title>\n\t\t\t\t\t<Description>{t('error.description')}</Description>\n\t\t\t\t</Container>\n\t\t\t\t<Link to=\"/\">\n\t\t\t\t\t<Item>{t('error.button_one')}</Item>\n\t\t\t\t</Link>\n\t\t\t</Content>\n\t\t</Mobile>\n\t)\n}\n\nexport default NotFound\n","//@ts-check\nimport React, { FC } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { Button, TitleMain } from '../../components'\nimport { Navigation } from '../../layouts'\nimport { useTranslation } from 'react-i18next'\n\nconst List: FC = styled.div`\n\tmax-width: 320px;\n\twidth: 100%;\n\tpadding: 30px 20px;\n`\n\nconst ButtonLink: any = styled(Button)`\n\tmargin-top: 30px;\n`\n\nconst Home = () => {\n\tconst { t } = useTranslation()\n\tconst history = useHistory()\n\n\treturn (\n\t\t<Navigation>\n\t\t\t<TitleMain>{t('home.titleMain')}</TitleMain>\n\t\t\t<List>\n\t\t\t\t<ButtonLink onClick={() => history.push('/login')}>{t('home.button_one')}</ButtonLink>\n\t\t\t\t<ButtonLink onClick={() => history.push('/scanning')}>{t('home.button_two')}</ButtonLink>\n\t\t\t\t<ButtonLink onClick={() => history.push('/verify')}>{t('home.button_three')}</ButtonLink>\n\t\t\t</List>\n\t\t</Navigation>\n\t)\n}\nexport default Home\n","//@ts-check\nimport { gql } from 'apollo-boost'\nimport { DocumentNode } from 'apollo-boost'\n\nconst QUERY_RESULTS: DocumentNode = gql`\n\t{\n\t\tcertificate\n\t}\n`\n\nconst QUERY_MYSTATUS: DocumentNode = gql`\n\t{\n\t\treason {\n\t\t\ttitle\n\t\t\ttype\n\t\t\tmessage\n\t\t\tpublished\n\t\t\tend\n\t\t}\n\t\ttest_results {\n\t\t\ttitle\n\t\t\ttype\n\t\t\tmessage\n\t\t\tpublished\n\t\t\tend\n\t\t}\n\t}\n`\n\nconst QUERY_TESTRESULTS: DocumentNode = gql`\n\t{\n\t\ttest_results {\n\t\t\ttitle\n\t\t\ttype\n\t\t\tmessage\n\t\t\tpublished\n\t\t\tend\n\t\t}\n\t}\n`\n\nconst QUERY_NOTIFICATION: DocumentNode = gql`\n\t{\n\t\tnotifications {\n\t\t\ttitle\n\t\t\ttype\n\t\t\tmessage\n\t\t\tpublished\n\t\t\tend\n\t\t}\n\t}\n`\n\nexport { QUERY_RESULTS, QUERY_TESTRESULTS, QUERY_NOTIFICATION, QUERY_MYSTATUS }\n","//@ts-check\nimport jwt from 'jsonwebtoken'\nimport { format } from 'date-fns'\n\ninterface Certificate {\n\tname: string\n\tage: string\n\tregion: string\n\tcountry: string\n\tmovementAllowed: boolean\n\tiat: number\n\texp: number\n}\n\ninterface VerifiedCertificate extends Certificate {\n\texpired: boolean\n\tvalidUntil: string\n}\n\n// const verifyJWT = (token): boolean => true\n\nconst parseJWT = token => {\n\tconst data = jwt.decode(token)\n\n\treturn data\n}\n\nconst verifyPass = (token?: string, publickeys?: string[]) => {\n\treturn parseJWT(token)\n}\n\nconst formatDate = date => format(new Date(date), 'dd.MM.yyyy HH:mm')\n\nexport { verifyPass, formatDate }\n","//@ts-check\nimport React, { useEffect } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport styled from 'styled-components'\nimport {\n\tButton,\n\tStatusBar,\n\tContainerEnumType,\n\tContainer,\n\tQRCodeGenerator,\n\tUserInfoBlog,\n\tNotificationBlog,\n\tIcon,\n} from '../../components'\nimport { Mobile } from '../../layouts'\nimport { useTranslation } from 'react-i18next'\n\nimport { Loading, NotFound } from '../../pages'\nimport { QUERY_RESULTS } from '../../gql/queries'\nimport { useQuery } from '@apollo/react-hooks'\nimport { verifyPass } from '../../services'\n\nconst Content: any = styled(Container)`\n\tmax-width: 320px;\n\ttext-align: center;\n\tpadding: 50px 20px;\n`\n\nconst ImageQRCode: any = styled(QRCodeGenerator)`\n\tdisplay: inline-block;\n\twidth: 100%;\n\tmargin-top: 30px;\n\tzoom: 1.1;\n`\n\nconst Title = styled.h2`\n\ttext-transform: uppercase;\n\tposition: relative;\n\tz-index: 2;\n\tpadding: 30px 15px 15px;\n\tfont-size: 18px;\n\tfont-weight: bold;\n\tcolor: ${({ theme }) => theme.color.white};\n`\n\nconst IconStatus = styled(Icon)`\n\theight: 60px;\n\twidth: 60px;\n\n\t&:before {\n\t\tfont-size: 60px;\n\t\theight: 60px;\n\t\twidth: 60px;\n\t}\n`\n\nconst ButtonPrint = styled(Button)`\n\tmargin-top: 30px;\n`\n\nconst Results = () => {\n\tconst { t } = useTranslation()\n\tlet location = useLocation()\n\tconst { loading, error, data } = useQuery(QUERY_RESULTS)\n\n\tuseEffect(() => {\n\t\tdata && location.pathname === '/results-print' && window.print()\n\t})\n\n\tif (loading) return <Loading />\n\tif (error) return <NotFound />\n\tif (!data) return <NotFound />\n\n\tconst userData = data && verifyPass(data.certificate)\n\tconst status = userData.movementAllowed\n\n\tconst handlePrint = () => {\n\t\twindow.print()\n\t}\n\n\treturn (\n\t\t<Mobile>\n\t\t\t<StatusBar state={!status} className={'media-print'}>\n\t\t\t\t<>\n\t\t\t\t\t<IconStatus name={!status ? 'close' : 'check'} />\n\t\t\t\t\t<Title>{!status ? t('results.positive.title') : t('results.negative.title')}</Title>\n\t\t\t\t</>\n\t\t\t</StatusBar>\n\t\t\t<Content type={ContainerEnumType.COL}>\n\t\t\t\t<NotificationBlog show={!status} className={'media-print'} />\n\t\t\t\t<ImageQRCode certificateToken={data.certificate} />\n\t\t\t\t<UserInfoBlog data={userData} />\n\t\t\t\t<ButtonPrint type=\"submit\" onClick={() => handlePrint()} className={'media-print'}>\n\t\t\t\t\t{t('results.button_one')}\n\t\t\t\t</ButtonPrint>\n\t\t\t</Content>\n\t\t</Mobile>\n\t)\n}\n\nexport default Results\n","//@ts-check\n//@ts-check\nimport React from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { useForm } from 'react-hook-form'\nimport styled from 'styled-components'\nimport { Button as ButtonC, Input as InputC, TitleMain } from '../../components'\nimport { Navigation } from '../../layouts'\nimport { useTranslation } from 'react-i18next'\n\nconst List: any = styled.form`\n\tmax-width: 320px;\n\twidth: 100%;\n\tpadding: 30px 20px;\n`\n\nconst Input: any = styled(InputC)`\n\tmargin-top: 30px;\n`\n\nconst Button: any = styled(ButtonC)`\n\tmargin-top: 60px;\n`\n\ntype FormData = {\n\tverification: string\n}\n\nconst Verification = () => {\n\tconst history = useHistory()\n\tconst { t } = useTranslation()\n\tconst location = useLocation()\n\tconst { register, handleSubmit, watch, errors } = useForm<FormData>()\n\n\tconst onSubmit = data => {\n\t\t// TODO send data to server and add verify for push history\n\t\tconsole.log(data)\n\n\t\tif (location.pathname === '/verification-by-phone') {\n\t\t\treturn history.push('/scan-result')\n\t\t} else if (!Object.keys(errors).length) {\n\t\t\treturn history.push('/results')\n\t\t}\n\t}\n\n\treturn (\n\t\t<Navigation>\n\t\t\t<List onSubmit={handleSubmit(onSubmit)}>\n\t\t\t\t<TitleMain>{t('verification.titleMain')}</TitleMain>\n\t\t\t\t<Input\n\t\t\t\t\ttype=\"string\"\n\t\t\t\t\tname=\"verification\"\n\t\t\t\t\tregister={register({ required: true })}\n\t\t\t\t\tvalue={watch('verification') || ''}\n\t\t\t\t\tlabel={t('verification.label_one')}\n\t\t\t\t\tplaceholder={t('verification.placeholder_one')}\n\t\t\t\t\terrors={errors.verification && t('verification.error_one')}\n\t\t\t\t\tinfo={t('verification.info_one')}\n\t\t\t\t/>\n\t\t\t\t<Button type=\"submit\">{t('verification.button_one')}</Button>\n\t\t\t</List>\n\t\t</Navigation>\n\t)\n}\nexport default Verification\n","//@ts-check\nimport React, { FC } from 'react'\nimport styled from 'styled-components'\nimport { Navigation } from '../../layouts'\nimport { TitleMain } from '../../components'\nimport { useTranslation } from 'react-i18next'\n\nconst Content: FC = styled.div`\n\tmax-width: 320px;\n\twidth: 100%;\n\tpadding: 30px 20px;\n`\n\nconst Help = () => {\n\tconst { t } = useTranslation()\n\n\treturn (\n\t\t<Navigation>\n\t\t\t<Content>\n\t\t\t\t<TitleMain>{t('help.titleMain')}</TitleMain>\n\t\t\t</Content>\n\t\t</Navigation>\n\t)\n}\nexport default Help\n","//@ts-check\nimport React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { verifyPass } from '../../services'\nimport {\n\tContainer,\n\tContainerEnumType,\n\tStatusBar,\n\tUserInfoBlog,\n\tButton as ButtonC,\n\tIcon,\n\tContainerEnumPosition,\n\tQRCodeScanner,\n} from '../../components'\nimport { Mobile } from '../../layouts'\nimport { useTranslation } from 'react-i18next'\n\nconst Content: any = styled(Container)`\n\tmax-width: 320px;\n\twidth: 100%;\n\tpadding: 30px 20px;\n`\n\nconst Title = styled.h2`\n\ttext-transform: uppercase;\n\tposition: relative;\n\tz-index: 2;\n\tpadding: 30px 15px 15px;\n\tfont-size: 18px;\n\tfont-weight: bold;\n\tcolor: ${({ theme }) => theme.color.white};\n`\n\nconst Info = styled.h2`\n\tmargin-top: 30px;\n\tfont-size: 18px;\n\tfont-weight: bold;\n\tcolor: ${({ theme }) => theme.color.purple};\n`\n\nconst IconStatus = styled(Icon)`\n\theight: 60px;\n\twidth: 60px;\n\n\t&:before {\n\t\tfont-size: 60px;\n\t\theight: 60px;\n\t\twidth: 60px;\n\t}\n`\n\nconst Button: any = styled(ButtonC)`\n\tmargin-top: 30px;\n`\ninterface Data {\n\tname?: string\n\tage?: string\n\tregion?: string\n\tcountry?: string\n\tmovementAllowed?: boolean\n\tiat?: number\n\texp?: number\n}\n\nconst Scanning: any = () => {\n\tconst { t } = useTranslation()\n\tconst history = useHistory()\n\tconst [scan, setScan] = useState('')\n\tconst results: Data = {}\n\tconst [data, setData] = useState(results)\n\n\tuseEffect(() => {\n\t\t// TODO vypnuť cameru po redirecte\n\t\ttry {\n\t\t\tconst certificate = verifyPass(scan)\n\t\t\tif (certificate !== null) {\n\t\t\t\tsetData(certificate)\n\t\t\t}\n\t\t} catch {\n\t\t\tsetData({})\n\t\t\thistory.push('/notfound')\n\t\t}\n\t}, [history, scan])\n\n\tconst conditionisNegative = !data.movementAllowed\n\n\t// TODO verify naskenovany certifikat\n\n\treturn (\n\t\t<Mobile>\n\t\t\t{!Object.keys(data).length ? (\n\t\t\t\t<Content type={ContainerEnumType.COL} x={ContainerEnumPosition.TOP}>\n\t\t\t\t\t<QRCodeScanner onScan={res => setScan(res)} onError={() => setScan('')} />\n\t\t\t\t\t<Info>{t('scanning.title')}</Info>\n\t\t\t\t</Content>\n\t\t\t) : (\n\t\t\t\t<Container type={ContainerEnumType.COL}>\n\t\t\t\t\t<StatusBar state={conditionisNegative}>\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<IconStatus name={conditionisNegative ? 'close' : 'check'} />\n\t\t\t\t\t\t\t<Title>{conditionisNegative ? t('results.positive.title') : t('results.negative.title')}</Title>\n\t\t\t\t\t\t</>\n\t\t\t\t\t</StatusBar>\n\t\t\t\t\t<Content type={ContainerEnumType.COL} x={ContainerEnumPosition.TOP}>\n\t\t\t\t\t\t<UserInfoBlog data={data} />\n\t\t\t\t\t\t<Button onClick={() => setData({})}>{t('scanning.button_one')}</Button>\n\t\t\t\t\t</Content>\n\t\t\t\t</Container>\n\t\t\t)}\n\t\t</Mobile>\n\t)\n}\n\nexport default Scanning\n","//@ts-check\nimport React, { FC } from 'react'\nimport styled from 'styled-components'\nimport { useHistory } from 'react-router-dom'\nimport {\n\tButton as ButtonC,\n\tStatusBar,\n\tIcon,\n\tContainerEnumType,\n\tContainerEnumPosition,\n\tContainer,\n} from '../../components'\nimport { Mobile } from '../../layouts'\nimport { useTranslation } from 'react-i18next'\n\nimport { Loading, NotFound } from '../../pages'\nimport { QUERY_MYSTATUS } from '../../gql/queries'\nimport { useQuery } from '@apollo/react-hooks'\n\nconst InfoStatusBar: any = styled(StatusBar)`\n\tpadding: 20px;\n\tflex: initial;\n\n\t&:after {\n\t\tdisplay: none;\n\t}\n`\n\nconst Status: any = styled(Container)`\n\tmax-width: 320px;\n\twidth: 100%;\n\tpadding: 0 20px;\n`\n\nconst Label: FC = styled.label`\n\tfont-size: 14px;\n\tcolor: ${({ theme }) => theme.color.black};\n\tfont-size: 14px;\n\tmax-width: 320px;\n\twidth: 100%;\n\tpadding: 25px 20px;\n`\n\nconst Title: FC = styled.h3`\n\ttext-transform: capitalize;\n\tcolor: ${({ theme }) => theme.color.white};\n\tfont-size: 24px;\n\tpadding-left: 15px;\n`\n\nconst Date: FC = styled.p`\n\ttext-transform: uppercase;\n\tcolor: ${({ theme }) => theme.color.black};\n\tfont-size: 16px;\n\tmax-width: 320px;\n\twidth: 100%;\n\tpadding: 25px 20px 0;\n`\n\nconst Description: FC = styled.p`\n\tposition: relative;\n\tcolor: ${({ theme }) => theme.color.black};\n\tfont-size: 14px;\n\tline-height: 20px;\n\topacity: 0.6;\n\ttext-align: left;\n\tmax-width: 320px;\n\twidth: 100%;\n\tpadding: 15px 20px 25px;\n\tmargin-bottom: 15px;\n\n\t&:after {\n\t\tposition: absolute;\n\t\tcontent: '';\n\t\tborder-bottom: 1px solid ${({ theme }) => theme.color.black};\n\t\tleft: 20px;\n\t\tbottom: 0;\n\t\twidth: calc(100% - 40px);\n\t}\n`\n\nconst Button: any = styled(ButtonC)`\n\tmargin: 30px 0;\n\twidth: 100%;\n`\n\nconst Home = () => {\n\tconst history = useHistory()\n\tconst { t } = useTranslation()\n\n\tconst { loading, error, data } = useQuery(QUERY_MYSTATUS)\n\tif (loading) return <Loading />\n\tif (error) return <NotFound />\n\tif (!data) return <NotFound />\n\n\tconsole.log(data)\n\n\tconst reason = data.reason\n\tconst testResults = data.test_results[0]\n\n\t// TODO reason && testResults = undefined dorobit stranku no date avalaible...\n\n\treturn (\n\t\t<Mobile>\n\t\t\t<Container type={ContainerEnumType.COL} x={ContainerEnumPosition.TOP}>\n\t\t\t\t{reason && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Label>{t('my_status.positive.label')}</Label>\n\t\t\t\t\t\t<InfoStatusBar state={true}>\n\t\t\t\t\t\t\t<Status x={ContainerEnumPosition.LEFT}>\n\t\t\t\t\t\t\t\t<Icon name=\"notification\" />\n\t\t\t\t\t\t\t\t<Title>{reason.title}</Title>\n\t\t\t\t\t\t\t</Status>\n\t\t\t\t\t\t</InfoStatusBar>\n\t\t\t\t\t\t<Date>{reason.published}</Date>\n\t\t\t\t\t\t<Description>{reason.message}</Description>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t\t{!!data.test_results.length && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Label>{t('my_status.negative.label')}</Label>\n\t\t\t\t\t\t<InfoStatusBar state={testResults.title.toUpperCase().includes('POSITIVE')}>\n\t\t\t\t\t\t\t<Status x={ContainerEnumPosition.LEFT}>\n\t\t\t\t\t\t\t\t<Icon name={testResults.title.toUpperCase().includes('POSITIVE') ? 'notification' : 'check'} />\n\t\t\t\t\t\t\t\t<Title>{testResults.title}</Title>\n\t\t\t\t\t\t\t</Status>\n\t\t\t\t\t\t</InfoStatusBar>\n\t\t\t\t\t\t<Date>{testResults.published}</Date>\n\t\t\t\t\t\t<Description>{testResults.message}</Description>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t\t<Button onClick={() => history.push('/test-reusults')}>{t('my_status.button_one')}</Button>\n\t\t\t</Container>\n\t\t</Mobile>\n\t)\n}\nexport default Home\n","//@ts-check\nimport React, { FC } from 'react'\nimport styled from 'styled-components'\nimport { ContainerEnumType, ContainerEnumPosition, Container } from '../../components'\nimport { Mobile } from '../../layouts'\nimport { useTranslation } from 'react-i18next'\nimport { Loading, NotFound } from '../../pages'\nimport { QUERY_TESTRESULTS } from '../../gql/queries'\nimport { useQuery } from '@apollo/react-hooks'\nimport { formatDate } from '../../services'\n\nconst Content: any = styled(Container)`\n\tmax-width: 320px;\n\twidth: 100%;\n\tpadding: 30px 20px;\n`\n\nconst Item: any = styled(Container)`\n\ttext-align: left;\n\tpadding-top: 30px;\n\tflex: initial;\n`\n\nconst Label: FC = styled.label`\n\twidth: 100%;\n\tfont-size: 14px;\n\tcolor: ${({ theme }) => theme.color.black};\n`\n\nconst DateFC: FC = styled.p`\n\ttext-transform: uppercase;\n\tcolor: ${({ theme }) => theme.color.black};\n\tfont-size: 16px;\n\twidth: 100%;\n`\n\nconst Description: FC = styled.p`\n\tcolor: ${({ theme }) => theme.color.black};\n\tfont-size: 14px;\n\tpadding: 15px 0;\n\tline-height: 20px;\n\topacity: 0.6;\n\ttext-align: left;\n\tborder-bottom: 1px solid ${({ theme }) => theme.color.black};\n`\n\nconst TestReusults = () => {\n\tconst { t } = useTranslation()\n\n\tconst { loading, error, data } = useQuery(QUERY_TESTRESULTS)\n\tif (loading) return <Loading />\n\tif (error) return <NotFound />\n\tif (!data) return <NotFound />\n\n\t// TODO v back-ende prementovat test_results na testResults\n\tconst testResults = data.test_results\n\tconsole.log(testResults)\n\n\treturn (\n\t\t<Mobile>\n\t\t\t<Content type={ContainerEnumType.COL} x={ContainerEnumPosition.TOP}>\n\t\t\t\t<Label>{t('test_results.label')}</Label>\n\t\t\t\t{testResults &&\n\t\t\t\t\ttestResults.map((item, i) => (\n\t\t\t\t\t\t<Item key={i} type={ContainerEnumType.COL} x={ContainerEnumPosition.TOP}>\n\t\t\t\t\t\t\t<DateFC>\n\t\t\t\t\t\t\t\t{formatDate(item.published)} - {item.title}\n\t\t\t\t\t\t\t</DateFC>\n\t\t\t\t\t\t\t<Description>{item.message}</Description>\n\t\t\t\t\t\t</Item>\n\t\t\t\t\t))}\n\t\t\t</Content>\n\t\t</Mobile>\n\t)\n}\n\nexport default TestReusults\n","//@ts-check\n//@ts-check\nimport React, { FC } from 'react'\nimport styled from 'styled-components'\nimport { ContainerEnumType, ContainerEnumPosition, Container } from '../../components'\nimport { Mobile } from '../../layouts'\nimport { useTranslation } from 'react-i18next'\n\nimport { Loading, NotFound } from '../../pages'\nimport { QUERY_NOTIFICATION } from '../../gql/queries'\nimport { useQuery } from '@apollo/react-hooks'\nimport { formatDate } from '../../services'\n\nconst Content: any = styled(Container)`\n\tmax-width: 320px;\n\twidth: 100%;\n\tpadding: 30px 20px;\n`\n\nconst Item: any = styled(Container)`\n\ttext-align: left;\n\tpadding-top: 30px;\n\tflex: initial;\n`\n\nconst Label: FC = styled.label`\n\twidth: 100%;\n\tfont-size: 14px;\n\tcolor: ${({ theme }) => theme.color.black};\n`\n\nconst Date: FC = styled.p`\n\ttext-transform: uppercase;\n\tcolor: ${({ theme }) => theme.color.black};\n\tfont-size: 16px;\n\twidth: 100%;\n`\n\nconst Description: FC = styled.p`\n\tcolor: ${({ theme }) => theme.color.black};\n\tfont-size: 14px;\n\tpadding: 15px 0;\n\tline-height: 20px;\n\topacity: 0.6;\n\ttext-align: left;\n\tborder-bottom: 1px solid ${({ theme }) => theme.color.black};\n`\n\nconst Notifications = () => {\n\tconst { t } = useTranslation()\n\n\tconst { loading, error, data } = useQuery(QUERY_NOTIFICATION)\n\tif (loading) return <Loading />\n\tif (error) return <NotFound />\n\tif (!data) return <NotFound />\n\n\tconst notifications = data.notifications\n\n\treturn (\n\t\t<Mobile>\n\t\t\t<Content type={ContainerEnumType.COL} x={ContainerEnumPosition.TOP}>\n\t\t\t\t<Label>{t('notification.label')}</Label>\n\t\t\t\t{notifications &&\n\t\t\t\t\tnotifications.map((item, i) => (\n\t\t\t\t\t\t<Item key={i} type={ContainerEnumType.COL} x={ContainerEnumPosition.TOP}>\n\t\t\t\t\t\t\t<Date>\n\t\t\t\t\t\t\t\t{formatDate(item.published)} - {item.title}\n\t\t\t\t\t\t\t</Date>\n\t\t\t\t\t\t\t<Description>{item.message}</Description>\n\t\t\t\t\t\t</Item>\n\t\t\t\t\t))}\n\t\t\t</Content>\n\t\t</Mobile>\n\t)\n}\n\nexport default Notifications\n","//@ts-check\nimport React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useForm } from 'react-hook-form'\nimport styled from 'styled-components'\nimport { Button as ButtonC, Input as InputC, TitleMain } from '../../components'\nimport { Navigation } from '../../layouts'\nimport { useTranslation } from 'react-i18next'\n\nconst List: any = styled.form`\n\tmax-width: 320px;\n\twidth: 100%;\n\tpadding: 30px 20px;\n`\n\nconst Input: any = styled(InputC)`\n\tmargin-top: 30px;\n`\n\nconst Button: any = styled(ButtonC)`\n\tmargin-top: 30px;\n`\n\ntype FormData = {\n\tcitizen: string\n\tphone: number\n}\n\nconst VerifyByPhoneNumber = () => {\n\tconst history = useHistory()\n\tconst { t } = useTranslation()\n\tconst { register, handleSubmit, watch, errors } = useForm<FormData>()\n\n\tconst onSubmit = data => {\n\t\t// TODO send data to server and add verify for push history\n\t\tconsole.log(data)\n\n\t\tif (!Object.keys(errors).length) {\n\t\t\thistory.push('/verification-by-phone')\n\t\t}\n\t}\n\n\treturn (\n\t\t<Navigation>\n\t\t\t<List onSubmit={handleSubmit(onSubmit)}>\n\t\t\t\t<TitleMain>{t('verify_by_phone_number.titleMain')}</TitleMain>\n\t\t\t\t<Input\n\t\t\t\t\ttype=\"tel\"\n\t\t\t\t\tname=\"phone\"\n\t\t\t\t\tregister={register({\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\tpattern: /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/im,\n\t\t\t\t\t})}\n\t\t\t\t\tvalue={watch('phone')}\n\t\t\t\t\tlabel={t('verify_by_phone_number.label_one')}\n\t\t\t\t\tplaceholder={t('verify_by_phone_number.placeholder_one')}\n\t\t\t\t\terror={errors.phone && t('verify_by_phone_number.error_one')}\n\t\t\t\t\tinfo={t('verify_by_phone_number.info_one')}\n\t\t\t\t/>\n\t\t\t\t<Button type=\"submit\">{t('verify_by_phone_number.button_one')}</Button>\n\t\t\t</List>\n\t\t</Navigation>\n\t)\n}\nexport default VerifyByPhoneNumber\n","//@ts-check\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Container, ContainerEnumType, StatusBar, UserInfoBlog, Icon, ContainerEnumPosition } from '../../components'\nimport { Mobile } from '../../layouts'\nimport { useTranslation } from 'react-i18next'\n\nconst Content: any = styled(Container)`\n\tmax-width: 320px;\n\twidth: 100%;\n\tpadding: 30px 20px;\n`\n\nconst Title = styled.h2`\n\ttext-transform: uppercase;\n\tposition: relative;\n\tz-index: 2;\n\tpadding: 30px 15px 15px;\n\tfont-size: 18px;\n\tfont-weight: bold;\n\tcolor: ${({ theme }) => theme.color.white};\n`\n\nconst IconStatus = styled(Icon)`\n\theight: 60px;\n\twidth: 60px;\n\n\t&:before {\n\t\tfont-size: 60px;\n\t\theight: 60px;\n\t\twidth: 60px;\n\t}\n`\n\nconst ScanResult: any = () => {\n\tconst { t } = useTranslation()\n\n\tconst conditionisNegative = false\n\n\tconst data = {\n\t\tname: 'Ďuri Traktorista',\n\t\tage: 20,\n\t\tregion: 'Michalovce',\n\t\tcountry: 'Slovakia',\n\t}\n\n\treturn (\n\t\t<Mobile>\n\t\t\t<Container type={ContainerEnumType.COL}>\n\t\t\t\t<StatusBar state={conditionisNegative}>\n\t\t\t\t\t<>\n\t\t\t\t\t\t<IconStatus name=\"check\" />\n\t\t\t\t\t\t<Title>{t('results.negative.title')}</Title>\n\t\t\t\t\t</>\n\t\t\t\t</StatusBar>\n\t\t\t\t<Content type={ContainerEnumType.COL} x={ContainerEnumPosition.TOP}>\n\t\t\t\t\t<UserInfoBlog data={data} />\n\t\t\t\t\t{/* <Button onClick={}>{t('scanning.button_one')}</Button> */}\n\t\t\t\t</Content>\n\t\t\t</Container>\n\t\t</Mobile>\n\t)\n}\n\nexport default ScanResult\n","//@ts-check\nimport React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Button, Icon, Container } from '../../components'\nimport { ContainerEnumType } from '../../components/Container'\nimport { getListIcons } from '../../components/Icon'\nimport { Mobile } from '../../layouts'\n\nconst List: any = styled(Container)`\n\tmax-width: 320px;\n\tpadding: 30px 20px;\n`\n\nconst Item: any = styled(Container)`\n\tpadding-top: 10px;\n\n\t&:first-child {\n\t\tpadding: 0;\n\t}\n`\n\nconst Title: any = styled.h1`\n\tdisplay: block;\n\tfont-size: 24px;\n\tfont-weight: bold;\n\tpadding: 30px 20px;\n\tcolor: ${({ theme }) => theme.color.purple};\n`\n\nconst IconType: any = styled(Icon)`\n\tposition: absolute;\n\tleft: 10px;\n\ttop: 50%;\n\ttransform: translateY(-50%);\n`\n\nconst ButtonCopy: any = styled(Button)`\n\tposition: relative;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tfont-size: 16px;\n\tpadding: 15px 15px 15px 60px;\n\n\t&:hover {\n\t\t${IconType} {\n\t\t\t&:before {\n\t\t\t\tcolor: ${({ theme }) => theme.color.purple};\n\t\t\t}\n\t\t}\n\t}\n`\n\nconst ListIcons: any = (): any => {\n\tconst [data, setData] = useState([{ properties: { name: '' } }])\n\n\tuseEffect(() => {\n\t\tconst { icons }: any = getListIcons()\n\t\tsetData(icons)\n\t}, [])\n\n\treturn (\n\t\t<Mobile type={ContainerEnumType.COL}>\n\t\t\t<Title>Copy your icon by click on one item:</Title>\n\t\t\t<List type={ContainerEnumType.COL}>\n\t\t\t\t{data.map((icon, i): any => {\n\t\t\t\t\tconst name = `${icon.properties.name}`\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Item key={i} type={ContainerEnumType.COL}>\n\t\t\t\t\t\t\t<ButtonCopy variant=\"secondary\" onClick={() => navigator.clipboard.writeText(name)}>\n\t\t\t\t\t\t\t\t<IconType name={name} />\n\t\t\t\t\t\t\t\t{name}\n\t\t\t\t\t\t\t</ButtonCopy>\n\t\t\t\t\t\t</Item>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</List>\n\t\t</Mobile>\n\t)\n}\n\nexport default ListIcons\n","//@ts-check\nimport React from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport { PUBLIC_URL, SHOW_DEV_LINKS } from '../env'\n\nimport {\n\tHome,\n\tScanning,\n\tLogin,\n\tVerification,\n\tResults,\n\tMyStatus,\n\tTestResults,\n\tNotifications,\n\tHelp,\n\tNotFound,\n\tVerifyByPhoneNumber,\n\tLoading,\n\tScanResult,\n} from '../pages'\nimport { ListIcons } from '../settings'\n\nexport const routes = [\n\t{ visible: SHOW_DEV_LINKS, label: 'Pages' },\n\t{ visible: true, label: 'My profile' },\n\t{\n\t\tvisible: SHOW_DEV_LINKS,\n\t\tlabel: 'Loading Screen',\n\t\tlink: '/loading',\n\t\tcomponent: Loading,\n\t},\n\t{\n\t\tvisible: SHOW_DEV_LINKS,\n\t\tlabel: 'NotFound',\n\t\tlink: '/notfound',\n\t\tcomponent: NotFound,\n\t},\n\t{ visible: SHOW_DEV_LINKS, label: 'Home', link: '/', component: Home, exact: true },\n\t{ visible: SHOW_DEV_LINKS, label: 'Login', link: '/login', component: Login },\n\t{\n\t\tvisible: SHOW_DEV_LINKS,\n\t\tlabel: 'Verification',\n\t\tlink: '/verification',\n\t\tcomponent: Verification,\n\t},\n\t{\n\t\tvisible: SHOW_DEV_LINKS,\n\t\tlabel: 'Verification by phone',\n\t\tlink: '/verification-by-phone',\n\t\tcomponent: Verification,\n\t},\n\t{\n\t\tvisible: SHOW_DEV_LINKS,\n\t\tlabel: 'Scan result',\n\t\tlink: '/scan-result',\n\t\tcomponent: ScanResult,\n\t},\n\t{ visible: true, label: 'My certificate', link: '/results', component: Results },\n\t{ visible: true, label: 'Print certificate', link: '/results-print', component: Results },\n\t{ visible: true, label: 'My status', link: '/mystatus', component: MyStatus },\n\t{ visible: true, label: 'Test results', link: '/test-reusults', component: TestResults },\n\t{ visible: true, label: 'Notifications', link: '/notifications', component: Notifications },\n\t{\n\t\tvisible: true,\n\t\tlabel: 'Log out',\n\t\tlink: '/home',\n\t\tcomponent: Home,\n\t},\n\t{ visible: true, split: true },\n\t{ visible: true, label: 'Verify by scanning', link: '/scanning', component: Scanning },\n\t{\n\t\tvisible: true,\n\t\tlabel: 'Verify by phone number',\n\t\tlink: '/verify',\n\t\tcomponent: VerifyByPhoneNumber,\n\t},\n\t{\n\t\tvisible: true,\n\t\tlabel: 'Help',\n\t\tlink: '/help',\n\t\tcomponent: Help,\n\t},\n\t{ visible: true, split: true },\n\t{ visible: SHOW_DEV_LINKS, label: 'Settings' },\n\t{\n\t\tvisible: SHOW_DEV_LINKS,\n\t\tlabel: 'Icons',\n\t\tlink: '/settings-icon',\n\t\tcomponent: ListIcons,\n\t},\n]\n\nconst Routing: any = (): any => {\n\treturn (\n\t\t<BrowserRouter basename={PUBLIC_URL}>\n\t\t\t<Switch>\n\t\t\t\t{routes.map(\n\t\t\t\t\t(route, i) =>\n\t\t\t\t\t\troute.link && <Route key={i} path={route.link} exact={route.exact} component={route.component} />\n\t\t\t\t)}\n\t\t\t</Switch>\n\t\t</BrowserRouter>\n\t)\n}\n\nexport default Routing\n","//@ts-check\nimport React, { FC } from 'react'\nimport ApolloClient from 'apollo-boost'\nimport { ApolloProvider as ApolloProviderGQL } from '@apollo/react-hooks'\n\nconst client = new ApolloClient({\n\turi: 'https://us-central1-health-pass.cloudfunctions.net/graphql',\n})\n\nconst Apollo: FC = (props): JSX.Element => <ApolloProviderGQL client={client}>{props.children}</ApolloProviderGQL>\n\nexport default Apollo\n","//@ts-check\nimport React, { StrictMode } from 'react'\nimport ReactDOM from 'react-dom'\nimport * as serviceWorker from './serviceWorker'\n\nimport Translater from './i18n'\nimport Styler from './styles'\nimport Routing from './routes'\nimport Apollo from './gql'\n\nconst Root = () => (\n\t<StrictMode>\n\t\t<Apollo>\n\t\t\t<Translater>\n\t\t\t\t<Styler>\n\t\t\t\t\t<Routing />\n\t\t\t\t</Styler>\n\t\t\t</Translater>\n\t\t</Apollo>\n\t</StrictMode>\n)\n\nReactDOM.render(<Root />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}