{"version":3,"sources":["serviceWorker.ts","i18n/index.tsx","const/index.ts","styles/theme/index.ts","styles/index.tsx","components/Icon/index.tsx","components/Button/index.tsx","components/Input/index.tsx","components/Logo/index.tsx","components/Container/index.tsx","components/HamburgerMenu/index.tsx","components/Menu/index.tsx","components/Scanner/index.tsx","components/StatusBar/index.tsx","components/QrCertificate/index.tsx","pages/Loading/index.tsx","pages/SplashScreen/index.tsx","layouts/Navigation/index.tsx","pages/Login/index.tsx","layouts/Mobile/index.tsx","pages/Home/index.tsx","pages/Results/index.tsx","pages/Verification/index.tsx","services/index.ts","pages/Scanning/index.tsx","routing/index.tsx","index.tsx"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","i18n","use","Backend","LanguageDetector","initReactI18next","init","react","useSuspense","wait","lng","fallbackLng","whitelist","lowerCaseLng","debug","interpolation","escapeValue","saveMissing","saveMissingTo","backend","loadPath","process","Translater","props","children","theme","mode","env","NODE_ENV","fontFamily","fontSize","color","white","black","purple","green","red","blue","GlobalStyle","createGlobalStyle","Styler","Icon","name","className","ListIcons","styled","ul","Item","li","WrapperIconsTitle","button","SettingsIconLayout","icons","require","map","icon","i","text","properties","key","variant","onClick","clipboard","writeText","Wrapper","hovering","css","Button","hover","div","pruple","Title","input","value","length","active","Lable","label","Information","span","valid","Input","React","forwardRef","ref","type","placeholder","info","useState","activeLabel","setActiveLabel","id","onFocus","onBlur","htmlFor","IconShield","h1","Logo","t","useTranslation","Container","List","Link","LinkR","p","Checkbox","HamburgerMenu","initialState","setState","visibleMenu","to","IconBell","Box","Menu","Component","IconStatus","StatusBar","QrCodeProps","renderAs","level","size","QrCertificate","certificateToken","WrapperLoader","Loader","show","Laoding","history","useHistory","loading","setLoading","useEffect","timer","setTimeout","push","lazyLoad","Home","Heading","IconArrow","Navigation","form","InputC","ButtonC","Login","useForm","handleSubmit","watch","errors","onSubmit","data","Object","keys","required","citizen","pattern","phone","ContainerC","Mobile","Success","Verification","verification","verifyPass","token","publickeys","jwt","decode","parseJWT","certificate","Scanning","res","JSON","stringify","Routing","Suspense","fallback","Loading","basename","exact","path","SplashScreen","Results","Root","ReactDOM","render","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.1a5cb384.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { FC } from 'react'\nimport i18n from 'i18next'\nimport Backend from 'i18next-xhr-backend'\nimport LanguageDetector from 'i18next-browser-languagedetector'\nimport { initReactI18next, I18nextProvider } from 'react-i18next'\nimport { PUBLIC_URL } from '../const'\n\ni18n\n\t// learn more: https://github.com/i18next/i18next-xhr-backend\n\t.use(Backend)\n\t// detect user language\n\t// learn more: https://github.com/i18next/i18next-browser-languageDetector\n\t.use(LanguageDetector)\n\t// pass the i18n instance to react-i18next.\n\t.use(initReactI18next)\n\t// init i18next\n\t// for all options read: https://www.i18next.com/overview/configuration-options\n\t.init({\n\t\t// special options for react-i18next\n\t\t// learn more: https://react.i18next.com/components/i18next-instance\n\t\treact: {\n\t\t\tuseSuspense: false,\n\t\t\twait: true,\n\t\t},\n\t\tlng: 'en',\n\t\tfallbackLng: 'en',\n\t\twhitelist: ['en', 'sk'],\n\t\tlowerCaseLng: true,\n\t\tdebug: false,\n\t\tinterpolation: {\n\t\t\tescapeValue: false, // not needed for react as it escapes by default\n\t\t},\n\t\tsaveMissing: true,\n\t\tsaveMissingTo: 'all',\n\t\tbackend: {\n\t\t\tloadPath: `${PUBLIC_URL}/locales/{{lng}}/translations.json`,\n\t\t},\n\t})\n\nconst Translater: FC = (props: { children?: React.ReactNode }): JSX.Element => {\n\treturn <I18nextProvider i18n={i18n}>{props.children}</I18nextProvider>\n}\n\nexport default Translater\n","export const PUBLIC_URL = process.env.PUBLIC_URL","//@ts-check\nimport process from 'process'\n\nlet theme = {\n\tmode: process.env.NODE_ENV,\n\tfontFamily: 'Arial, Helvetica, sans-serif',\n\tfontSize: '16px',\n\tcolor: {\n\t\twhite: '#fff',\n\t\tblack: '#000',\n\t\tpurple: '#6202EE',\n\t\tgreen: '#5CB85C',\n\t\tred: '#D9534F',\n\t\tblue: '#0275D8',\n\t},\n}\n\nexport type ThemeI = typeof theme\nexport default theme\n","//@ts-check\nimport React, { FC } from 'react'\nimport './reset.css'\n\nimport { ThemeProvider, createGlobalStyle } from 'styled-components'\nimport theme, { ThemeI } from './theme'\n\nconst GlobalStyle = createGlobalStyle<{ theme: ThemeI }>`\n  html, body, #root {\n\t\tfont-family: ${({ theme }) => theme.fontFamily};\n\t\tfont-size: ${({ theme }) => theme.fontSize};\n\t\theight: 100%;\n\t\tbackground-color: ${({ theme }): string => theme.color.purple};\n\t}\n\n\t#root {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t}\n\t\n\t* {\n\t\tbox-sizing: border-box;\n\t}\n`\n\nconst Styler: FC = (props): JSX.Element => (\n\t<ThemeProvider theme={theme}>\n\t\t<GlobalStyle />\n\t\t{props.children}\n\t</ThemeProvider>\n)\n\nexport default Styler\n","//@ts-check\nimport React, { FC } from 'react'\nimport styled from 'styled-components'\n\n// styles ./style.css from icomoon\nimport './style.css'\n\nconst Icon: any = ({ name, className }): any => (\n\t<i className={`icon icon-${name} ${className} rotate`} />\n)\n\nconst ListIcons: FC = styled.ul`\n\tcolor: ${({ theme }) => theme.color.white};\n\ttext-align: center;\n\toverflow: hidden;\n\toverflow: auto;\n\twidth: 100%;\n\tpadding: 30px 0;\n`\n\nconst Item: FC = styled.li`\n\tdisplay: flex;\n\talign-items: center;\n\tflex-direction: column;\n\tflex-wrap: wrap;\n\tjustify-content: center;\n\tflex: 1;\n\tpadding: 15px;\n\tfont-size: 30px;\n`\n\nconst WrapperIconsTitle: any = styled.button`\n\tmargin-top: 10px;\n\tfont-size: 16px;\n\tpadding: 5px 12px;\n\tbackground: ${({ theme }) => theme.color.white};\n\tborder: 1px solid ${({ theme }) => theme.color.white};\n\tcolor: ${({ theme }) => theme.color.black};\n\tborder-radius: 3px;\n\n\t&:hover {\n\t\tbackground: ${({ theme }) => theme.color.black};\n\t\tborder: 1px solid ${({ theme }) => theme.color.black};\n\t\tcolor: ${({ theme }) => theme.color.white};\n\t\ttransition: all 0.5s;\n\t}\n`\n\nconst SettingsIconLayout: any = (): any => {\n\tconst { icons } = require('./selection.json')\n\n\treturn (\n\t\t<ListIcons>\n\t\t\t<h1>Copy your icon by click on one item:</h1>\n\t\t\t{icons.map((icon, i): any => {\n\t\t\t\tconst text = `Click me and copy this text: ${icon.properties.name}`\n\t\t\t\treturn (\n\t\t\t\t\t<Item key={i}>\n\t\t\t\t\t\t<Icon name={icon.properties.name} />\n\t\t\t\t\t\t<WrapperIconsTitle\n\t\t\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\t\t\tonClick={() => navigator.clipboard.writeText(text)}>\n\t\t\t\t\t\t\t{text}\n\t\t\t\t\t\t</WrapperIconsTitle>\n\t\t\t\t\t</Item>\n\t\t\t\t)\n\t\t\t})}\n\t\t</ListIcons>\n\t)\n}\n\nexport default Icon\nexport { SettingsIconLayout }\n","import React from 'react'\nimport styled, { css } from 'styled-components'\n\nconst Wrapper: any = styled.button<{ hovering: boolean }>`\n\tdisplay: inline-block;\n\ttext-transform: uppercase;\n\tcursor: pointer;\n\tmax-width: 280px;\n\twidth: 100%;\n\tpadding: 15px 20px;\n\ttext-align: center;\n\tbackground-color: ${({ theme }) => theme.color.purple};\n\tcolor: ${({ theme }) => theme.color.white};\n\tborder: 2px solid ${({ theme }) => theme.color.purple};\n\tborder-radius: 18px;\n\tbox-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n\ttext-align: center;\n\n\t${({ hovering }) =>\n\t\thovering &&\n\t\tcss`\n\t\t\t&:hover {\n\t\t\t\tbackground-color: ${({ theme }) => theme.color.white};\n\t\t\t\tcolor: ${({ theme }) => theme.color.purple};\n\t\t\t}\n\n\t\t\t&:focus {\n\t\t\t\toutline: 0;\n\t\t\t}\n\t\t`}\n`\n\nconst Button = props => {\n\treturn (\n\t\t<Wrapper {...props} hovering={props.hover || true}>\n\t\t\t{props.children}\n\t\t</Wrapper>\n\t)\n}\nexport default Button\n","import React, { useState } from 'react'\nimport styled, { css } from 'styled-components'\n\nconst Wrapper = styled.div`\n\tposition: relative;\n\tcolor: ${({ theme }) => theme.color.pruple};\n\twidth: 100%;\n\theight: 50px;\n`\n\nconst Title: any = styled.input<{ active: boolean; value: string }>`\n\tposition: absolute;\n\toverflow: hidden;\n\tz-index: 1;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n\twidth: 100%;\n\tpadding: 15px 25px;\n\tfont-size: 16px;\n\tbackground-color: ${({ theme }) => theme.color.white};\n\tcolor: ${({ theme }) => theme.color.black};\n\tborder: 1px solid rgba(0, 0, 0, 0.5);\n\tborder-radius: 4px;\n\ttransition: all 0.2s;\n\n\t::placeholder {\n\t\tcolor: rgba(0, 0, 0, 0.5);\n\t\topacity: ${({ value }) => value && !!value.length && 0};\n\t\topacity: ${({ active }) => !active && 0};\n\t}\n\n\t${({ active }) =>\n\t\tactive &&\n\t\tcss`\n\t\t\tborder-color: ${({ theme }) => theme.color.purple};\n\t\t\toutline: 0;\n\t\t\tborder-width: 2px;\n\t\t`}\n\n\t&:focus {\n\t\toutline: 0;\n\t}\n\n\t&:hover {\n\t\tborder-color: ${({ theme }) => theme.color.pruple};\n\t}\n`\n\nconst Lable: any = styled.label<{ active: boolean }>`\n\tcolor: ${({ theme }) => theme.color.pruple};\n\tposition: absolute;\n\tz-index: 3;\n\tbackground-color: ${({ theme }) => theme.color.white};\n\ttop: 50%;\n\tleft: 15px;\n\tpadding: 5px;\n\ttext-align: left;\n\tcolor: rgba(0, 0, 0, 0.5);\n\ttransform: translateY(-50%);\n\ttransition: all 0.2s;\n\n\t${({ active }) =>\n\t\tactive &&\n\t\tcss`\n\t\t\twidth: auto;\n\t\t\tcolor: ${({ theme }) => theme.color.purple};\n\t\t\ttransform: translate(-5px, -33px) scale(0.8);\n\t\t\tpadding: 0 5px;\n\t\t`}\n`\n\nconst Information: any = styled.span<{ valid: boolean }>`\n\tdisplay: block;\n\twidth: 100%;\n\ttext-align: left;\n\tcolor: ${({ theme }) => theme.color.purple};\n\tpadding: 5px 15px 0;\n\tfont-size: 12px;\n\n\t${({ valid }) =>\n\t\tvalid &&\n\t\tcss`\n\t\t\tcolor: ${({ theme }) => theme.color.red};\n\t\t`}\n`\n\ntype InputProps = {\n\tclassName: string\n\ttype: string\n\tname?: string\n\tregister?: string\n\tvalue?: string\n\tplaceholder?: string\n\terror?: string\n\tinfo?: string\n\tlabel?: string\n}\n\nconst Input: any = React.forwardRef(\n\t(\n\t\t{\n\t\t\tclassName,\n\t\t\ttype,\n\t\t\tname,\n\t\t\tregister,\n\t\t\tvalue,\n\t\t\tplaceholder,\n\t\t\terror,\n\t\t\tinfo,\n\t\t\tlabel,\n\t\t}: InputProps,\n\t\tref\n\t) => {\n\t\tconst [activeLabel, setActiveLabel] = useState(false)\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Wrapper className={className}>\n\t\t\t\t\t<Title\n\t\t\t\t\t\ttype={type}\n\t\t\t\t\t\tname={name}\n\t\t\t\t\t\tref={register}\n\t\t\t\t\t\tactive={activeLabel || (value && !!value.length)}\n\t\t\t\t\t\tid={name}\n\t\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\t\tonFocus={() => setActiveLabel(true)}\n\t\t\t\t\t\tonBlur={() => setActiveLabel(false)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Lable\n\t\t\t\t\t\tactive={activeLabel || (value && !!value.length)}\n\t\t\t\t\t\thtmlFor={name}>\n\t\t\t\t\t\t{label}\n\t\t\t\t\t</Lable>\n\t\t\t\t</Wrapper>\n\t\t\t\t<Information valid={error}>{error ? error : info}</Information>\n\t\t\t</>\n\t\t)\n\t}\n)\n\nexport default Input\n","import React from 'react'\nimport styled from 'styled-components'\nimport Icon from '../Icon'\nimport { useTranslation } from 'react-i18next'\n\nconst Wrapper = styled.div`\n\tposition: relative;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n`\n\nconst IconShield = styled(Icon)`\n\tdisplay: inline-block;\n\theight: 175px;\n\twidth: 175px;\n\tcolor: ${({ theme }) => theme.color.white};\n\tmargin-top: 40px;\n\n\t&:before {\n\t\tcolor: ${({ theme }) => theme.color.white};\n\t\tfont-size: 180px;\n\t}\n`\n\nconst Title = styled.h1`\n\ttext-transform: uppercase;\n\tcolor: ${({ theme }) => theme.color.white};\n\tmargin-top: 30px;\n\tfont-size: 24px;\n\tpadding: 0 10px;\n\tposition: relative;\n\tz-index: 2;\n`\nconst Logo = props => {\n\tconst { t } = useTranslation()\n\n\treturn (\n\t\t<Wrapper className={props.className}>\n\t\t\t{props.children}\n\t\t\t<IconShield name=\"shield\" />\n\t\t\t<Title>{t('logo.title')}</Title>\n\t\t</Wrapper>\n\t)\n}\nexport default Logo\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\tflex: 1;\n\tpadding-top: 25px;\n\tbackground-color: ${({ theme }) => theme.color.white};\n`\n\nconst Container = props => (\n\t<Wrapper className={props.className}>{props.children}</Wrapper>\n)\n\nexport default Container\n","import React, { useState } from 'react'\nimport styled, { css } from 'styled-components'\nimport { Link as LinkR } from 'react-router-dom'\nimport Icon from '../Icon'\n\nconst Wrapper: any = styled.div`\n\tdisplay: inline-block;\n\tbackground-color: ${({ theme }) => theme.color.purple};\n\tcursor: pointer;\n\tuser-select: none;\n\twidth: 30px;\n\theight: 30px;\n`\n\nconst List: any = styled.ul<{ active: boolean }>`\n\tbackground-color: ${({ theme }) => theme.color.purple};\n\tposition: absolute;\n\ttext-transform: uppercase;\n\tleft: 0;\n\ttop: 100%;\n\tmax-width: 320px;\n\twidth: 100%;\n\ttransform: translateX(-100%);\n\ttransition: all 0.5s;\n\topacity: 0;\n\tz-index: 1;\n\n\t${({ active }) =>\n\t\tactive &&\n\t\tcss`\n\t\t\topacity: 1;\n\t\t\ttransform: translateX(0);\n\t\t`}\n\n\t&:after {\n\t\tposition: absolute;\n\t\tcontent: '';\n\t\tbackground: ${({ theme }) => theme.color.purple};\n\t\tborder-radius: 50%;\n\t\theight: 50px;\n\t\tbottom: -25px;\n\t\tleft: 0;\n\t\tright: 0;\n\t\twidth: 100%;\n\t\tz-index: 1;\n\t}\n`\n\nconst Item = styled.li`\n\tpadding: 1px 0;\n`\n\nconst Link = styled(LinkR)`\n\tposition: relative;\n\tz-index: 3;\n\tcolor: ${({ theme }) => theme.color.white};\n\tdisplay: block;\n\tpadding: 15px 10px;\n\tfont-size: 18px;\n\ttext-decoration: none;\n\n\t&:hover {\n\t\ttext-decoration: underline;\n\t}\n`\n\nconst Title = styled.p`\n\tposition: relative;\n\tz-index: 3;\n\tfont-weight: bold;\n\tcolor: ${({ theme }) => theme.color.white};\n\tborder: 1px solid ${({ theme }) => theme.color.white};\n\tborder-width: 1px 0 0;\n\tpadding: 15px 10px;\n\tfont-size: 18px;\n`\n\nconst Checkbox: any = styled(Icon)`\n\tdisplay: inline-block;\n\tposition: relative;\n\tz-index: 3;\n\n\t&:before {\n\t\tfont-size: 22px;\n\t\twidth: 24px;\n\t\theight: 24px;\n\t\tcolor: ${({ theme }) => theme.color.white};\n\t\tposition: absolute;\n\t\ttop: 50%;\n\t\tleft: 50%;\n\t\tbottom: 0;\n\t\tright: 0;\n\t\ttransform: translate(-50%, -50%);\n\t}\n`\n\nconst HamburgerMenu: any = props => {\n\tconst [state, setState] = useState(props.initialState || false)\n\n\treturn (\n\t\t<Wrapper\n\t\t\tactive={state}\n\t\t\tclassName={props.className}\n\t\t\thovering={props.hovering}\n\t\t\tonClick={() => setState(!state)}>\n\t\t\t<Checkbox name={props.visibleMenu ? 'bars' : 'arrow'} />\n\t\t\t<List active={state}>\n\t\t\t\t<Item>\n\t\t\t\t\t<Title>Pages</Title>\n\t\t\t\t</Item>\n\t\t\t\t<Item>\n\t\t\t\t\t<Link to=\"/\">Splash Screen</Link>\n\t\t\t\t</Item>\n\t\t\t\t<Item>\n\t\t\t\t\t<Link to=\"loading\">Loading Screen</Link>\n\t\t\t\t</Item>\n\t\t\t\t<Item>\n\t\t\t\t\t<Link to=\"/home\">Home</Link>\n\t\t\t\t</Item>\n\t\t\t\t<Item>\n\t\t\t\t\t<Link to=\"/login\">Login</Link>\n\t\t\t\t</Item>\n\t\t\t\t<Item>\n\t\t\t\t\t<Link to=\"/verification\">Verification</Link>\n\t\t\t\t</Item>\n\t\t\t\t<Item>\n\t\t\t\t\t<Link to=\"/results\">Results</Link>\n\t\t\t\t</Item>\n\t\t\t\t<Item>\n\t\t\t\t\t<Link to=\"/scanning\">Scanning</Link>\n\t\t\t\t</Item>\n\t\t\t\t<Item>\n\t\t\t\t\t<Title>Settings</Title>\n\t\t\t\t</Item>\n\t\t\t\t<Item>\n\t\t\t\t\t<Link to=\"/settings-icon\">Icons</Link>\n\t\t\t\t</Item>\n\t\t\t\t{/* <Item>\n\t\t\t\t\t\t<Link to=\"/settings-theme\">Theme</Link>\n\t\t\t\t\t</Item>\n\t\t\t\t\t<Item>\n\t\t\t\t\t\t<Link to=\"/settings-cssReset\">Reset css</Link>\n\t\t\t\t\t</Item>\n\t\t\t\t\t<Item>\n\t\t\t\t\t\t<Link to=\"/settings-translation\">Translation</Link>\n\t\t\t\t\t</Item> */}\n\t\t\t</List>\n\t\t</Wrapper>\n\t)\n}\n\nexport default HamburgerMenu\n","import React from 'react'\nimport styled from 'styled-components'\nimport Icon from '../Icon'\nimport HamburgerMenu from '../HamburgerMenu'\nimport { useTranslation } from 'react-i18next'\n\nconst Wrapper = styled.div`\n\tposition: relative;\n\tz-index: 1000;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n\tbackground-color: ${({ theme }) => theme.color.purple};\n\tpadding: 20px;\n`\n\nconst IconShield = styled(Icon)`\n\tposition: relative;\n\tz-index: 2;\n\tdisplay: inline-block;\n\theight: 30px;\n\twidth: 30px;\n\tcolor: ${({ theme }) => theme.color.white};\n\n\t&:before {\n\t\tfont-size: 22px;\n\t\tcolor: ${({ theme }) => theme.color.white};\n\t\tposition: absolute;\n\t\ttop: 50%;\n\t\tleft: 50%;\n\t\ttransform: translate(-50%, -50%);\n\t}\n`\n\nconst IconBell = styled(Icon)`\n\tposition: relative;\n\tz-index: 2;\n\tdisplay: inline-block;\n\theight: 30px;\n\twidth: 30px;\n\tcolor: ${({ theme }) => theme.color.white};\n\n\t&:before {\n\t\tfont-size: 22px;\n\t\tcolor: ${({ theme }) => theme.color.white};\n\t\tposition: absolute;\n\t\ttop: 50%;\n\t\tleft: 50%;\n\t\ttransform: translate(-50%, -50%);\n\t}\n`\n\nconst Title = styled.h1`\n\tposition: relative;\n\tz-index: 2;\n\ttext-transform: uppercase;\n\tcolor: ${({ theme }) => theme.color.white};\n\tfont-size: 18px;\n\tpadding: 0 10px;\n`\n\nconst Box = styled.div`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tflex: 1;\n`\n\nconst Menu = props => {\n\tconst { t } = useTranslation()\n\n\treturn (\n\t\t<Wrapper className={props.className}>\n\t\t\t<HamburgerMenu visibleMenu />\n\t\t\t<Box>\n\t\t\t\t<IconShield name=\"shield\" />\n\t\t\t\t<Title>{t('logo.title')}</Title>\n\t\t\t</Box>\n\t\t\t<IconBell name=\"bell\" />\n\t\t</Wrapper>\n\t)\n}\nexport default Menu\n","import React, { Component } from 'react'\nimport QrReader from 'react-qr-reader'\n\nclass Scanner extends Component {\n\tstate = {\n\t\tresult: 'No result',\n\t}\n\n\thandleScan = data => {\n\t\tif (data) {\n\t\t\tthis.setState({\n\t\t\t\tresult: data,\n\t\t\t})\n\t\t}\n\t}\n\thandleError = err => {\n\t\tconsole.error(err)\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<QrReader\n\t\t\t\t\tdelay={300}\n\t\t\t\t\tonError={this.handleError}\n\t\t\t\t\tonScan={this.handleScan}\n\t\t\t\t\tstyle={{ width: '100%' }}\n\t\t\t\t/>\n\t\t\t\t<p>{this.state.result}</p>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Scanner\n","import React from 'react'\nimport styled, { css } from 'styled-components'\nimport Icon from '../Icon'\n\nconst Wrapper: any = styled.div<{ state: boolean }>`\n\tposition: relative;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\twidth: 100%;\n\tpadding: 30px 0;\n\n\t&:after {\n\t\tbox-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n\t\tposition: absolute;\n\t\tcontent: '';\n\t\tborder-radius: 50%;\n\t\theight: 50px;\n\t\tbottom: -25px;\n\t\tleft: 0;\n\t\tright: 0;\n\t\twidth: 100%;\n\t\tz-index: 0;\n\t}\n\n\t${({ state }) =>\n\t\tstate\n\t\t\t? css`\n\t\t\t\t\tbackground-color: ${({ theme }) => theme.color.green};\n\t\t\t\t\t&:after {\n\t\t\t\t\t\tbackground-color: ${({ theme }) => theme.color.green};\n\t\t\t\t\t}\n\t\t\t  `\n\t\t\t: css`\n\t\t\t\t\tbackground-color: ${({ theme }) => theme.color.red};\n\t\t\t\t\t&:after {\n\t\t\t\t\t\tbackground-color: ${({ theme }) => theme.color.red};\n\t\t\t\t\t}\n\t\t\t  `}\n`\n\nconst IconStatus = styled(Icon)`\n\tposition: relative;\n\tz-index: 2;\n\tdisplay: inline-block;\n\theight: 60px;\n\twidth: 60px;\n\tcolor: ${({ theme }) => theme.color.white};\n\n\t&:before {\n\t\tcolor: ${({ theme }) => theme.color.white};\n\t\tfont-size: 60px;\n\t}\n`\n\nconst StatusBar = props => {\n\treturn (\n\t\t<Wrapper className={props.className} state={props.state}>\n\t\t\t{props.children}\n\t\t\t<IconStatus name={props.state ? 'check' : 'close'} />\n\t\t\t{props.children}\n\t\t</Wrapper>\n\t)\n}\nexport default StatusBar\n","import React from 'react'\nimport QRCode from 'qrcode.react'\n\n\ninterface QrCertificateProps {\n    certificateToken: string\n}\n\nconst QrCodeProps = {\n    renderAs: 'svg',\n    level: 'M',\n    size: 256,\n}\n\nconst QrCertificate = (props: QrCertificateProps) => (\n\t<QRCode value={props.certificateToken} {...QrCodeProps} />\n)\n\n\nexport default QrCertificate\n","//@ts-check\nimport React, { FC, useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { Icon, Logo } from '../../components'\n\nconst Wrapper: FC = styled.div`\n\tposition: relative;\n\tz-index: 2;\n\ttext-align: center;\n\tpadding-top: 60px;\n`\n\nconst WrapperLoader: FC = styled.div`\n\tflex: 1;\n`\n\nconst Loader = styled(Icon)<{ show: boolean }>`\n\tposition: relative;\n\tdisplay: ${({ show }) => (show ? 'inline-block' : 'none')};\n\tcolor: ${({ theme }) => theme.color.white};\n\tmargin-top: 60px;\n\twidth: 60px;\n\theight: 60px;\n\tborder-width: 8px;\n\tborder-right-color: transparent;\n\n\t@keyframes spin {\n\t\t100% {\n\t\t\ttransform: rotate(360deg);\n\t\t}\n\t}\n\n\t&:before {\n\t\tanimation: spin 4s linear infinite;\n\t\tfont-size: 60px;\n\t\tposition: absolute;\n\t\tleft: 0;\n\t\ttop: 0;\n\t}\n`\n\nconst Laoding = () => {\n\tlet history = useHistory()\n\tconst [loading, setLoading] = useState(true)\n\n\tconst lazyLoad = () => {\n\t\tconst timer = setTimeout(() => {\n\t\t\tsetLoading(false)\n\t\t\treturn history.push('/home')\n\t\t}, 1000)\n\n\t\treturn () => clearTimeout(timer)\n\t}\n\n\tuseEffect(() => {\n\t\tlazyLoad()\n\t})\n\n\treturn (\n\t\t<Wrapper>\n\t\t\t<Logo />\n\t\t\t<WrapperLoader>\n\t\t\t\t<Loader name=\"sync-alt-solid\" show={loading} />\n\t\t\t</WrapperLoader>\n\t\t</Wrapper>\n\t)\n}\n\nexport default Laoding\n","//@ts-check\nimport React, { FC } from 'react'\nimport styled from 'styled-components'\nimport { Logo } from '../../components'\n\nconst Wrapper: FC = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\theight: 100%;\n`\n\nconst Home: FC = (): JSX.Element => {\n\treturn (\n\t\t<Wrapper>\n\t\t\t<Logo />\n\t\t</Wrapper>\n\t)\n}\n\nexport default Home\n","import React from 'react'\nimport { Link as LinkR } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { Logo, Container, Icon } from '../../components'\n\nconst Wrapper = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\twidth: 100%;\n\tjustify-content: center;\n\tflex: 1;\n\ttext-align: center;\n`\n\nconst Heading = styled(Logo)`\n\tposition: relative;\n\tz-index: 1;\n\tflex: 1;\n\n\t&:after {\n\t\tbox-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n\t\tposition: absolute;\n\t\tcontent: '';\n\t\tbackground: ${({ theme }) => theme.color.purple};\n\t\tborder-radius: 50%;\n\t\theight: 50px;\n\t\tbottom: -25px;\n\t\tleft: 0;\n\t\tright: 0;\n\t\twidth: 100%;\n\t\tz-index: 0;\n\t}\n`\n\nconst Link = styled(LinkR)`\n\tposition: absolute;\n\tleft: 0;\n\ttop: 0;\n\tbottom: 0;\n\twidth: 70px;\n\theight: 100%;\n\n\t&:hover {\n\t\tbackground-color: ${({ theme }) => theme.color.purple};\n\t}\n`\n\nconst IconArrow = styled(Icon)`\n\tdisplay: inline-block;\n\twidth: 100%;\n\theight: 100%;\n\n\t&:before {\n\t\tfont-size: 22px;\n\t\twidth: 24px;\n\t\theight: 24px;\n\t\tcolor: ${({ theme }) => theme.color.white};\n\t\tposition: absolute;\n\t\tz-index: 3;\n\t\ttop: 50%;\n\t\tleft: 50%;\n\t\tbottom: 0;\n\t\tright: 0;\n\t\ttransform: translate(-50%, -50%);\n\t}\n`\n\nconst Navigation: any = props => (\n\t<Wrapper className={props.className}>\n\t\t<Heading>\n\t\t\t<Link to=\"/home\">\n\t\t\t\t<IconArrow name=\"arrow\" />\n\t\t\t</Link>\n\t\t</Heading>\n\t\t<Container>{props.children}</Container>\n\t</Wrapper>\n)\n\nexport default Navigation\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useForm } from 'react-hook-form'\nimport styled from 'styled-components'\nimport { Button as ButtonC, Input as InputC } from '../../components'\nimport LayoutNavigation from '../../layouts/Navigation'\nimport { useTranslation } from 'react-i18next'\n\nconst List: any = styled.form`\n\tdisplay: inline-block;\n\tmax-width: 280px;\n\twidth: 100%;\n`\n\nconst Input: any = styled(InputC)`\n\tmargin-top: 30px;\n`\n\nconst Button: any = styled(ButtonC)`\n\tmargin-top: 30px;\n`\n\ntype FormData = {\n\tcitizen: string\n\tphone: number\n}\n\nconst Login = () => {\n\tlet history = useHistory()\n\tconst { t } = useTranslation()\n\tconst { register, handleSubmit, watch, errors } = useForm<FormData>()\n\tconst onSubmit = data => {\n\t\t// TODO send data to server and add verify for push history\n\t\tconsole.log(data)\n\n\t\tif (!Object.keys(errors).length) {\n\t\t\thistory.push('/verification')\n\t\t}\n\t}\n\n\treturn (\n\t\t<LayoutNavigation>\n\t\t\t<List onSubmit={handleSubmit(onSubmit)}>\n\t\t\t\t<Input\n\t\t\t\t\ttype=\"string\"\n\t\t\t\t\tname=\"citizen\"\n\t\t\t\t\tregister={register({ required: true })}\n\t\t\t\t\tvalue={watch('citizen')}\n\t\t\t\t\tlabel={t('login.label_one')}\n\t\t\t\t\tplaceholder={t('login.placeholder_one')}\n\t\t\t\t\terror={errors.citizen && t('login.error_one')}\n\t\t\t\t\tinfo={t('login.info_one')}\n\t\t\t\t/>\n\t\t\t\t<Input\n\t\t\t\t\ttype=\"tel\"\n\t\t\t\t\tname=\"phone\"\n\t\t\t\t\tregister={register({\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\t\tpattern: /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/im,\n\t\t\t\t\t})}\n\t\t\t\t\tvalue={watch('phone')}\n\t\t\t\t\tlabel={t('login.label_two')}\n\t\t\t\t\tplaceholder={t('login.placeholder_two')}\n\t\t\t\t\terror={errors.phone && t('login.error_two')}\n\t\t\t\t\tinfo={t('login.info_two')}\n\t\t\t\t/>\n\t\t\t\t<Button type=\"submit\">{t('login.button_one')}</Button>\n\t\t\t</List>\n\t\t</LayoutNavigation>\n\t)\n}\nexport default Login\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Container as ContainerC, Menu } from '../../components'\n\nconst Wrapper = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\twidth: 100%;\n\tflex: 1;\n`\n\nconst Container = styled(ContainerC)`\n\tjustify-content: flex-start;\n\tpadding-top: 0;\n`\n\nconst Mobile: any = props => (\n\t<Wrapper className={props.className}>\n\t\t<Menu />\n\t\t<Container>{props.children}</Container>\n\t</Wrapper>\n)\n\nexport default Mobile\n","import React, { FC } from 'react'\nimport styled from 'styled-components'\nimport { Button, Container } from '../../components'\nimport Mobile from '../../layouts/Mobile'\nimport { Link as LinkR } from 'react-router-dom'\nimport { useTranslation } from 'react-i18next'\n\nconst List: FC = styled.div`\n\tmax-width: 280px;\n\twidth: 100%;\n`\nconst Link = styled(LinkR)`\n\tdisplay: inline-block;\n\twidth: 100%;\n`\n\nconst Item: FC = styled(Button)`\n\tmargin-top: 30px;\n`\n\nconst Home = () => {\n\tconst { t } = useTranslation()\n\n\treturn (\n\t\t<Mobile>\n\t\t\t<Container>\n\t\t\t\t<List>\n\t\t\t\t\t<Link to=\"/login\">\n\t\t\t\t\t\t<Item>{t('home.button_one')}</Item>\n\t\t\t\t\t</Link>\n\t\t\t\t\t<Link to=\"/\">\n\t\t\t\t\t\t<Item>{t('home.button_two')}</Item>\n\t\t\t\t\t</Link>\n\t\t\t\t\t<Link to=\"/\">\n\t\t\t\t\t\t<Item>{t('home.button_three')}</Item>\n\t\t\t\t\t</Link>\n\t\t\t\t</List>\n\t\t\t</Container>\n\t\t</Mobile>\n\t)\n}\nexport default Home\n","import React, { FC } from 'react'\nimport styled from 'styled-components'\nimport { StatusBar } from '../../components'\nimport Mobile from '../../layouts/Mobile'\n// import { Link as LinkR } from 'react-router-dom'\n// import { useTranslation } from 'react-i18next'\n\nconst List: FC = styled.div`\n\tmax-width: 280px;\n\twidth: 100%;\n`\n// const Link = styled(LinkR)`\n// \tdisplay: inline-block;\n// \twidth: 100%;\n// `\n\n// const Item: FC = styled(Button)`\n// \tmargin-top: 30px;\n// `\n\nconst Success = () => {\n\t// const { t } = useTranslation()\n\n\treturn (\n\t\t<Mobile>\n\t\t\t<StatusBar state={true} />\n\t\t\t<List>a</List>\n\t\t</Mobile>\n\t)\n}\nexport default Success\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useForm } from 'react-hook-form'\nimport styled from 'styled-components'\nimport { Button as ButtonC, Input as InputC } from '../../components'\nimport LayoutNavigation from '../../layouts/Navigation'\nimport { useTranslation } from 'react-i18next'\n\nconst List: any = styled.form`\n\tdisplay: inline-block;\n\tmax-width: 280px;\n\twidth: 100%;\n`\n\nconst Input: any = styled(InputC)`\n\tmargin-top: 30px;\n`\n\nconst Button: any = styled(ButtonC)`\n\tmargin-top: 60px;\n`\n\ntype FormData = {\n\tverification: string\n}\n\nconst Verification = () => {\n\tlet history = useHistory()\n\tconst { t } = useTranslation()\n\tconst { register, handleSubmit, watch, errors } = useForm<FormData>()\n\tconst onSubmit = data => {\n\t\t// TODO send data to server and add verify for push history\n\t\tconsole.log(data)\n\n\t\tif (!Object.keys(errors).length) {\n\t\t\thistory.push('/verification')\n\t\t}\n\t}\n\treturn (\n\t\t<LayoutNavigation>\n\t\t\t<List onSubmit={handleSubmit(onSubmit)}>\n\t\t\t\t<Input\n\t\t\t\t\ttype=\"string\"\n\t\t\t\t\tname=\"verification\"\n\t\t\t\t\tregister={register({ required: true })}\n\t\t\t\t\tvalue={watch('verification') || ''}\n\t\t\t\t\tlabel={t('verification.label_one')}\n\t\t\t\t\tplaceholder={t('verification.placeholder_one')}\n\t\t\t\t\terrors={errors.verification && t('verification.error_one')}\n\t\t\t\t\tinfo={t('verification.info_one')}\n\t\t\t\t/>\n\t\t\t\t<Button type=\"submit\">{t('verification.button_one')}</Button>\n\t\t\t</List>\n\t\t</LayoutNavigation>\n\t)\n}\nexport default Verification\n","import jwt from 'jsonwebtoken'\n\ninterface Certificate {\n\tname: string\n\tage: string\n\tregion: string\n\tcountry: string\n\tmovementAllowed: boolean\n\tiat: number\n\texp: number\n}\n\ninterface VerifiedCertificate extends Certificate {\n\texpired: boolean\n\tvalidUntil: string\n}\n\n\n// const verifyJWT = (token): boolean => true\n\nconst parseJWT = (token) => {\n\tconst data = jwt.decode(token)\n\n\treturn data\n}\n\nconst verifyPass = (token?: string, publickeys?: string[]) => {\n\treturn parseJWT(token)\n}\n\nexport { verifyPass }\n","import React from 'react'\n// import { Scanner } from '../../components/Scanner/index';\nimport { verifyPass } from '../../services'\nimport {QrCertificate} from '../../components';\n\nconst certificate =\n\t'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiSm9obiBEb2UiLCJhZ2UiOiIyOCIsInJlZ2lvbiI6IlBvcHJhZCIsImNvdW50cnkiOiJTbG92YWtpYSIsIm1vdmVtZW50QWxsb3dlZCI6dHJ1ZSwiaWF0IjoxNTg3Njc5NzA4LCJleHAiOjE1ODc3NjYxMDh9.oLzlPFFxzzbxtqV9gtnAJkAg6OYlPKSPxqOeBlWRNug'\n\n\nconst Scanning = () => {\n\n\n\t\n\tconst res = JSON.stringify(verifyPass(certificate))\n\treturn (\n\t\t<span>\n\t\t\t<QrCertificate certificateToken={certificate} />\n\t\t\t{res}\n\t\t</span>\n\t)\n}\n\nexport default Scanning\n","//@ts-check\nimport React from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport { SettingsIconLayout } from '../components'\n\nimport {\n\tSplashScreen,\n\tLoading,\n\tHome,\n\tLogin,\n\tVerification,\n\tResults,\n\tScanning,\n} from '../pages'\n\nimport { PUBLIC_URL } from '../const'\n\nconst Routing: any = (): any => {\n\treturn (\n\t\t<React.Suspense fallback={<Loading />}>\n\t\t\t<BrowserRouter basename={PUBLIC_URL}>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t<SplashScreen />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/loading\">\n\t\t\t\t\t\t<Loading />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/home\">\n\t\t\t\t\t\t<Home />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/login\">\n\t\t\t\t\t\t<Login />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/verification\">\n\t\t\t\t\t\t<Verification />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/results\">\n\t\t\t\t\t\t<Results />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/settings-icon\">\n\t\t\t\t\t\t<SettingsIconLayout />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/scanning\">\n\t\t\t\t\t\t<Scanning />\n\t\t\t\t\t</Route>\n\t\t\t\t\t{/* <Route path=\"/settings-theme\">\n\t\t\t\t\t<SettingsIconLayout />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/settings-cssReset\">\n\t\t\t\t\t<SettingsIconLayout />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/settings-translation\">\n\t\t\t\t\t<SettingsIconLayout />\n\t\t\t\t</Route> */}\n\t\t\t\t</Switch>\n\t\t\t</BrowserRouter>\n\t\t</React.Suspense>\n\t)\n}\n\nexport default Routing\n","//@ts-check\nimport React, { StrictMode } from 'react'\nimport ReactDOM from 'react-dom'\nimport * as serviceWorker from './serviceWorker'\n\nimport Translater from './i18n'\nimport Styler from './styles'\nimport Routing from './routing'\n\nconst Root = () => (\n\t<StrictMode>\n\t\t<Translater>\n\t\t\t<Styler>\n\t\t\t\t<Routing />\n\t\t\t</Styler>\n\t\t</Translater>\n\t</StrictMode>\n)\n\nReactDOM.render(<Root />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}